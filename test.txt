
build/kernel:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <KernelError>:
       0:	48 83 ec 18          	sub    $0x18,%rsp
       4:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
       9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
       d:	48 89 14 24          	mov    %rdx,(%rsp)
      11:	90                   	nop
      12:	48 83 c4 18          	add    $0x18,%rsp
      16:	c3                   	ret

0000000000000017 <V3r32>:
      17:	48 83 ec 48          	sub    $0x48,%rsp
      1b:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
      21:	f3 0f 11 4c 24 18    	movss  %xmm1,0x18(%rsp)
      27:	f3 0f 11 54 24 14    	movss  %xmm2,0x14(%rsp)
      2d:	f3 0f 10 44 24 1c    	movss  0x1c(%rsp),%xmm0
      33:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
      39:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
      3f:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
      45:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
      4b:	f3 0f 11 44 24 30    	movss  %xmm0,0x30(%rsp)
      51:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
      56:	48 89 44 24 34       	mov    %rax,0x34(%rsp)
      5b:	8b 44 24 30          	mov    0x30(%rsp),%eax
      5f:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
      63:	48 8b 54 24 34       	mov    0x34(%rsp),%rdx
      68:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
      6c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
      71:	66 48 0f 6e c8       	movq   %rax,%xmm1
      76:	48 83 c4 48          	add    $0x48,%rsp
      7a:	c3                   	ret

000000000000007b <V4u08>:
      7b:	48 83 ec 20          	sub    $0x20,%rsp
      7f:	89 c8                	mov    %ecx,%eax
      81:	89 f9                	mov    %edi,%ecx
      83:	88 4c 24 0c          	mov    %cl,0xc(%rsp)
      87:	89 f1                	mov    %esi,%ecx
      89:	88 4c 24 08          	mov    %cl,0x8(%rsp)
      8d:	88 54 24 04          	mov    %dl,0x4(%rsp)
      91:	88 04 24             	mov    %al,(%rsp)
      94:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
      99:	88 44 24 1c          	mov    %al,0x1c(%rsp)
      9d:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
      a2:	88 44 24 1d          	mov    %al,0x1d(%rsp)
      a6:	0f b6 44 24 04       	movzbl 0x4(%rsp),%eax
      ab:	88 44 24 1e          	mov    %al,0x1e(%rsp)
      af:	0f b6 04 24          	movzbl (%rsp),%eax
      b3:	88 44 24 1f          	mov    %al,0x1f(%rsp)
      b7:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
      bb:	48 83 c4 20          	add    $0x20,%rsp
      bf:	c3                   	ret

00000000000000c0 <V3r32_Add>:
      c0:	48 83 ec 58          	sub    $0x58,%rsp
      c4:	66 48 0f 7e c0       	movq   %xmm0,%rax
      c9:	66 48 0f 7e c9       	movq   %xmm1,%rcx
      ce:	66 0f 6f c2          	movdqa %xmm2,%xmm0
      d2:	66 48 0f 7e da       	movq   %xmm3,%rdx
      d7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
      dc:	8b 44 24 28          	mov    0x28(%rsp),%eax
      e0:	83 e0 00             	and    $0x0,%eax
      e3:	09 c8                	or     %ecx,%eax
      e5:	89 44 24 28          	mov    %eax,0x28(%rsp)
      e9:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
      ef:	8b 44 24 18          	mov    0x18(%rsp),%eax
      f3:	83 e0 00             	and    $0x0,%eax
      f6:	09 d0                	or     %edx,%eax
      f8:	89 44 24 18          	mov    %eax,0x18(%rsp)
      fc:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     102:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     108:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     10c:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     112:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     118:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     11e:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     122:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     128:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     12e:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     134:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     138:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     13e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     143:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     148:	8b 44 24 40          	mov    0x40(%rsp),%eax
     14c:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     150:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     155:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     159:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     15e:	66 48 0f 6e c8       	movq   %rax,%xmm1
     163:	48 83 c4 58          	add    $0x58,%rsp
     167:	c3                   	ret

0000000000000168 <V3u08_Add>:
     168:	48 83 ec 20          	sub    $0x20,%rsp
     16c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     171:	48 89 34 24          	mov    %rsi,(%rsp)
     175:	0f b6 54 24 08       	movzbl 0x8(%rsp),%edx
     17a:	0f b6 04 24          	movzbl (%rsp),%eax
     17e:	01 d0                	add    %edx,%eax
     180:	88 44 24 1a          	mov    %al,0x1a(%rsp)
     184:	0f b6 54 24 09       	movzbl 0x9(%rsp),%edx
     189:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
     18e:	01 d0                	add    %edx,%eax
     190:	88 44 24 1b          	mov    %al,0x1b(%rsp)
     194:	0f b6 54 24 0a       	movzbl 0xa(%rsp),%edx
     199:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
     19e:	01 d0                	add    %edx,%eax
     1a0:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     1a4:	0f b7 44 24 1a       	movzwl 0x1a(%rsp),%eax
     1a9:	66 89 44 24 1d       	mov    %ax,0x1d(%rsp)
     1ae:	0f b6 44 24 1c       	movzbl 0x1c(%rsp),%eax
     1b3:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     1b7:	b8 00 00 00 00       	mov    $0x0,%eax
     1bc:	0f b7 54 24 1d       	movzwl 0x1d(%rsp),%edx
     1c1:	0f b7 d2             	movzwl %dx,%edx
     1c4:	66 b8 00 00          	mov    $0x0,%ax
     1c8:	48 09 d0             	or     %rdx,%rax
     1cb:	0f b6 54 24 1f       	movzbl 0x1f(%rsp),%edx
     1d0:	0f b6 d2             	movzbl %dl,%edx
     1d3:	48 c1 e2 10          	shl    $0x10,%rdx
     1d7:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
     1dd:	48 09 d0             	or     %rdx,%rax
     1e0:	48 83 c4 20          	add    $0x20,%rsp
     1e4:	c3                   	ret

00000000000001e5 <V4u08_Add>:
     1e5:	48 83 ec 18          	sub    $0x18,%rsp
     1e9:	89 7c 24 04          	mov    %edi,0x4(%rsp)
     1ed:	89 34 24             	mov    %esi,(%rsp)
     1f0:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
     1f5:	0f b6 04 24          	movzbl (%rsp),%eax
     1f9:	01 d0                	add    %edx,%eax
     1fb:	88 44 24 14          	mov    %al,0x14(%rsp)
     1ff:	0f b6 54 24 05       	movzbl 0x5(%rsp),%edx
     204:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
     209:	01 d0                	add    %edx,%eax
     20b:	88 44 24 15          	mov    %al,0x15(%rsp)
     20f:	0f b6 54 24 06       	movzbl 0x6(%rsp),%edx
     214:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
     219:	01 d0                	add    %edx,%eax
     21b:	88 44 24 16          	mov    %al,0x16(%rsp)
     21f:	0f b6 54 24 07       	movzbl 0x7(%rsp),%edx
     224:	0f b6 44 24 03       	movzbl 0x3(%rsp),%eax
     229:	01 d0                	add    %edx,%eax
     22b:	88 44 24 17          	mov    %al,0x17(%rsp)
     22f:	8b 44 24 14          	mov    0x14(%rsp),%eax
     233:	48 83 c4 18          	add    $0x18,%rsp
     237:	c3                   	ret

0000000000000238 <V2u32_Add>:
     238:	48 83 ec 20          	sub    $0x20,%rsp
     23c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     241:	48 89 34 24          	mov    %rsi,(%rsp)
     245:	8b 54 24 08          	mov    0x8(%rsp),%edx
     249:	8b 04 24             	mov    (%rsp),%eax
     24c:	01 d0                	add    %edx,%eax
     24e:	89 44 24 18          	mov    %eax,0x18(%rsp)
     252:	8b 54 24 0c          	mov    0xc(%rsp),%edx
     256:	8b 44 24 04          	mov    0x4(%rsp),%eax
     25a:	01 d0                	add    %edx,%eax
     25c:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
     260:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     265:	48 83 c4 20          	add    $0x20,%rsp
     269:	c3                   	ret

000000000000026a <V3r32_Sub>:
     26a:	48 83 ec 58          	sub    $0x58,%rsp
     26e:	66 48 0f 7e c0       	movq   %xmm0,%rax
     273:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     278:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     27c:	66 48 0f 7e da       	movq   %xmm3,%rdx
     281:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     286:	8b 44 24 28          	mov    0x28(%rsp),%eax
     28a:	83 e0 00             	and    $0x0,%eax
     28d:	09 c8                	or     %ecx,%eax
     28f:	89 44 24 28          	mov    %eax,0x28(%rsp)
     293:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     299:	8b 44 24 18          	mov    0x18(%rsp),%eax
     29d:	83 e0 00             	and    $0x0,%eax
     2a0:	09 d0                	or     %edx,%eax
     2a2:	89 44 24 18          	mov    %eax,0x18(%rsp)
     2a6:	f3 0f 10 44 24 20    	movss  0x20(%rsp),%xmm0
     2ac:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
     2b2:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2b6:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     2bc:	f3 0f 10 44 24 24    	movss  0x24(%rsp),%xmm0
     2c2:	f3 0f 10 4c 24 14    	movss  0x14(%rsp),%xmm1
     2c8:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2cc:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     2d2:	f3 0f 10 44 24 28    	movss  0x28(%rsp),%xmm0
     2d8:	f3 0f 10 4c 24 18    	movss  0x18(%rsp),%xmm1
     2de:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2e2:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     2e8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     2ed:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     2f2:	8b 44 24 40          	mov    0x40(%rsp),%eax
     2f6:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     2fa:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     2ff:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     303:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     308:	66 48 0f 6e c8       	movq   %rax,%xmm1
     30d:	48 83 c4 58          	add    $0x58,%rsp
     311:	c3                   	ret

0000000000000312 <V3r32_Mul_VS>:
     312:	48 83 ec 58          	sub    $0x58,%rsp
     316:	66 48 0f 7e c0       	movq   %xmm0,%rax
     31b:	66 48 0f 7e ca       	movq   %xmm1,%rdx
     320:	f3 0f 11 54 24 1c    	movss  %xmm2,0x1c(%rsp)
     326:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     32b:	8b 44 24 28          	mov    0x28(%rsp),%eax
     32f:	83 e0 00             	and    $0x0,%eax
     332:	09 d0                	or     %edx,%eax
     334:	89 44 24 28          	mov    %eax,0x28(%rsp)
     338:	f3 0f 10 44 24 20    	movss  0x20(%rsp),%xmm0
     33e:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     344:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     34a:	f3 0f 10 44 24 24    	movss  0x24(%rsp),%xmm0
     350:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     356:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     35c:	f3 0f 10 44 24 28    	movss  0x28(%rsp),%xmm0
     362:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     368:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     36e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     373:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     378:	8b 44 24 40          	mov    0x40(%rsp),%eax
     37c:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     380:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     385:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     389:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     38e:	66 48 0f 6e c8       	movq   %rax,%xmm1
     393:	48 83 c4 58          	add    $0x58,%rsp
     397:	c3                   	ret

0000000000000398 <V4r32_Mul_VS>:
     398:	53                   	push   %rbx
     399:	48 83 ec 30          	sub    $0x30,%rsp
     39d:	66 48 0f 7e c0       	movq   %xmm0,%rax
     3a2:	66 0f 6f c1          	movdqa %xmm1,%xmm0
     3a6:	66 48 0f 7e c2       	movq   %xmm0,%rdx
     3ab:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     3b0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
     3b5:	f3 0f 11 54 24 0c    	movss  %xmm2,0xc(%rsp)
     3bb:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     3c1:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3c7:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
     3cd:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     3d3:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3d9:	f3 0f 11 44 24 24    	movss  %xmm0,0x24(%rsp)
     3df:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     3e5:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3eb:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
     3f1:	f3 0f 10 44 24 1c    	movss  0x1c(%rsp),%xmm0
     3f7:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3fd:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
     403:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     408:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
     40d:	48 89 c1             	mov    %rax,%rcx
     410:	48 89 d3             	mov    %rdx,%rbx
     413:	48 89 d0             	mov    %rdx,%rax
     416:	66 48 0f 6e c1       	movq   %rcx,%xmm0
     41b:	66 48 0f 6e c8       	movq   %rax,%xmm1
     420:	48 83 c4 30          	add    $0x30,%rsp
     424:	5b                   	pop    %rbx
     425:	c3                   	ret

0000000000000426 <V3u08_Mul_VS>:
     426:	48 83 ec 20          	sub    $0x20,%rsp
     42a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     42f:	89 f0                	mov    %esi,%eax
     431:	88 44 24 04          	mov    %al,0x4(%rsp)
     435:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
     43a:	f6 64 24 04          	mulb   0x4(%rsp)
     43e:	88 44 24 1a          	mov    %al,0x1a(%rsp)
     442:	0f b6 44 24 09       	movzbl 0x9(%rsp),%eax
     447:	f6 64 24 04          	mulb   0x4(%rsp)
     44b:	88 44 24 1b          	mov    %al,0x1b(%rsp)
     44f:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
     454:	f6 64 24 04          	mulb   0x4(%rsp)
     458:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     45c:	0f b7 44 24 1a       	movzwl 0x1a(%rsp),%eax
     461:	66 89 44 24 1d       	mov    %ax,0x1d(%rsp)
     466:	0f b6 44 24 1c       	movzbl 0x1c(%rsp),%eax
     46b:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     46f:	b8 00 00 00 00       	mov    $0x0,%eax
     474:	0f b7 54 24 1d       	movzwl 0x1d(%rsp),%edx
     479:	0f b7 d2             	movzwl %dx,%edx
     47c:	66 b8 00 00          	mov    $0x0,%ax
     480:	48 09 d0             	or     %rdx,%rax
     483:	0f b6 54 24 1f       	movzbl 0x1f(%rsp),%edx
     488:	0f b6 d2             	movzbl %dl,%edx
     48b:	48 c1 e2 10          	shl    $0x10,%rdx
     48f:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
     495:	48 09 d0             	or     %rdx,%rax
     498:	48 83 c4 20          	add    $0x20,%rsp
     49c:	c3                   	ret

000000000000049d <V4u08_Mul_VS>:
     49d:	48 83 ec 18          	sub    $0x18,%rsp
     4a1:	89 7c 24 04          	mov    %edi,0x4(%rsp)
     4a5:	89 f0                	mov    %esi,%eax
     4a7:	88 04 24             	mov    %al,(%rsp)
     4aa:	0f b6 44 24 04       	movzbl 0x4(%rsp),%eax
     4af:	f6 24 24             	mulb   (%rsp)
     4b2:	88 44 24 14          	mov    %al,0x14(%rsp)
     4b6:	0f b6 44 24 05       	movzbl 0x5(%rsp),%eax
     4bb:	f6 24 24             	mulb   (%rsp)
     4be:	88 44 24 15          	mov    %al,0x15(%rsp)
     4c2:	0f b6 44 24 06       	movzbl 0x6(%rsp),%eax
     4c7:	f6 24 24             	mulb   (%rsp)
     4ca:	88 44 24 16          	mov    %al,0x16(%rsp)
     4ce:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
     4d3:	f6 24 24             	mulb   (%rsp)
     4d6:	88 44 24 17          	mov    %al,0x17(%rsp)
     4da:	8b 44 24 14          	mov    0x14(%rsp),%eax
     4de:	48 83 c4 18          	add    $0x18,%rsp
     4e2:	c3                   	ret

00000000000004e3 <V2r32_Mul_VV>:
     4e3:	48 83 ec 20          	sub    $0x20,%rsp
     4e7:	66 0f d6 44 24 08    	movq   %xmm0,0x8(%rsp)
     4ed:	66 0f d6 0c 24       	movq   %xmm1,(%rsp)
     4f2:	f3 0f 10 4c 24 08    	movss  0x8(%rsp),%xmm1
     4f8:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     4fd:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     501:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
     507:	f3 0f 10 4c 24 0c    	movss  0xc(%rsp),%xmm1
     50d:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     513:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     517:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
     51d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     522:	66 48 0f 6e c0       	movq   %rax,%xmm0
     527:	48 83 c4 20          	add    $0x20,%rsp
     52b:	c3                   	ret

000000000000052c <V3r32_Mul_VV>:
     52c:	48 83 ec 58          	sub    $0x58,%rsp
     530:	66 48 0f 7e c0       	movq   %xmm0,%rax
     535:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     53a:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     53e:	66 48 0f 7e da       	movq   %xmm3,%rdx
     543:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     548:	8b 44 24 28          	mov    0x28(%rsp),%eax
     54c:	83 e0 00             	and    $0x0,%eax
     54f:	09 c8                	or     %ecx,%eax
     551:	89 44 24 28          	mov    %eax,0x28(%rsp)
     555:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     55b:	8b 44 24 18          	mov    0x18(%rsp),%eax
     55f:	83 e0 00             	and    $0x0,%eax
     562:	09 d0                	or     %edx,%eax
     564:	89 44 24 18          	mov    %eax,0x18(%rsp)
     568:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     56e:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     574:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     578:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     57e:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     584:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     58a:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     58e:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     594:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     59a:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     5a0:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     5a4:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     5aa:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     5af:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     5b4:	8b 44 24 40          	mov    0x40(%rsp),%eax
     5b8:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     5bc:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     5c1:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     5c5:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     5ca:	66 48 0f 6e c8       	movq   %rax,%xmm1
     5cf:	48 83 c4 58          	add    $0x58,%rsp
     5d3:	c3                   	ret

00000000000005d4 <V3r32_Dot>:
     5d4:	48 83 ec 30          	sub    $0x30,%rsp
     5d8:	66 48 0f 7e c0       	movq   %xmm0,%rax
     5dd:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     5e2:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     5e6:	66 48 0f 7e da       	movq   %xmm3,%rdx
     5eb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     5f0:	8b 44 24 18          	mov    0x18(%rsp),%eax
     5f4:	83 e0 00             	and    $0x0,%eax
     5f7:	09 c8                	or     %ecx,%eax
     5f9:	89 44 24 18          	mov    %eax,0x18(%rsp)
     5fd:	66 0f d6 04 24       	movq   %xmm0,(%rsp)
     602:	8b 44 24 08          	mov    0x8(%rsp),%eax
     606:	83 e0 00             	and    $0x0,%eax
     609:	09 d0                	or     %edx,%eax
     60b:	89 44 24 08          	mov    %eax,0x8(%rsp)
     60f:	f3 0f 10 0c 24       	movss  (%rsp),%xmm1
     614:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     61a:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
     61e:	f3 0f 10 54 24 04    	movss  0x4(%rsp),%xmm2
     624:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     62a:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
     62e:	f3 0f 58 c8          	addss  %xmm0,%xmm1
     632:	f3 0f 10 54 24 08    	movss  0x8(%rsp),%xmm2
     638:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     63e:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
     642:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     646:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
     64c:	f3 0f 10 44 24 2c    	movss  0x2c(%rsp),%xmm0
     652:	48 83 c4 30          	add    $0x30,%rsp
     656:	c3                   	ret

0000000000000657 <V3r32_Cross>:
     657:	48 83 ec 58          	sub    $0x58,%rsp
     65b:	66 48 0f 7e c0       	movq   %xmm0,%rax
     660:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     665:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     669:	66 48 0f 7e da       	movq   %xmm3,%rdx
     66e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     673:	8b 44 24 28          	mov    0x28(%rsp),%eax
     677:	83 e0 00             	and    $0x0,%eax
     67a:	09 c8                	or     %ecx,%eax
     67c:	89 44 24 28          	mov    %eax,0x28(%rsp)
     680:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     686:	8b 44 24 18          	mov    0x18(%rsp),%eax
     68a:	83 e0 00             	and    $0x0,%eax
     68d:	09 d0                	or     %edx,%eax
     68f:	89 44 24 18          	mov    %eax,0x18(%rsp)
     693:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     699:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     69f:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6a3:	f3 0f 10 54 24 28    	movss  0x28(%rsp),%xmm2
     6a9:	f3 0f 10 4c 24 14    	movss  0x14(%rsp),%xmm1
     6af:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     6b3:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     6b7:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     6bd:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     6c3:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     6c9:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6cd:	f3 0f 10 54 24 20    	movss  0x20(%rsp),%xmm2
     6d3:	f3 0f 10 4c 24 18    	movss  0x18(%rsp),%xmm1
     6d9:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     6dd:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     6e1:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     6e7:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     6ed:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     6f3:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6f7:	f3 0f 10 54 24 24    	movss  0x24(%rsp),%xmm2
     6fd:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
     703:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     707:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     70b:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     711:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     716:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     71b:	8b 44 24 40          	mov    0x40(%rsp),%eax
     71f:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     723:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     728:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     72c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     731:	66 48 0f 6e c8       	movq   %rax,%xmm1
     736:	48 83 c4 58          	add    $0x58,%rsp
     73a:	c3                   	ret

000000000000073b <V3r32_Len>:
     73b:	48 83 ec 28          	sub    $0x28,%rsp
     73f:	66 48 0f 7e c0       	movq   %xmm0,%rax
     744:	66 48 0f 7e ca       	movq   %xmm1,%rdx
     749:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
     74e:	8b 44 24 10          	mov    0x10(%rsp),%eax
     752:	83 e0 00             	and    $0x0,%eax
     755:	09 d0                	or     %edx,%eax
     757:	89 44 24 10          	mov    %eax,0x10(%rsp)
     75b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
     760:	66 0f 6e 44 24 10    	movd   0x10(%rsp),%xmm0
     766:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     76b:	66 0f 6e 4c 24 10    	movd   0x10(%rsp),%xmm1
     771:	66 48 0f 6e d2       	movq   %rdx,%xmm2
     776:	66 0f 6f d8          	movdqa %xmm0,%xmm3
     77a:	66 48 0f 6e c0       	movq   %rax,%xmm0
     77f:	e8 50 fe ff ff       	call   5d4 <V3r32_Dot>
     784:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
     788:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
     78e:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
     794:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
     799:	dd 04 24             	fldl   (%rsp)
     79c:	d9 fa                	fsqrt
     79e:	dd 5c 24 20          	fstpl  0x20(%rsp)
     7a2:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
     7a8:	66 48 0f 7e c0       	movq   %xmm0,%rax
     7ad:	66 48 0f 6e c0       	movq   %rax,%xmm0
     7b2:	48 83 c4 28          	add    $0x28,%rsp
     7b6:	c3                   	ret

00000000000007b7 <V2r32_ToV2u32>:
     7b7:	48 83 ec 18          	sub    $0x18,%rsp
     7bb:	66 0f d6 04 24       	movq   %xmm0,(%rsp)
     7c0:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     7c5:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
     7ca:	89 44 24 10          	mov    %eax,0x10(%rsp)
     7ce:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     7d4:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
     7d9:	89 44 24 14          	mov    %eax,0x14(%rsp)
     7dd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     7e2:	48 83 c4 18          	add    $0x18,%rsp
     7e6:	c3                   	ret

00000000000007e7 <V2u32_ToV2r32>:
     7e7:	48 83 ec 18          	sub    $0x18,%rsp
     7eb:	48 89 3c 24          	mov    %rdi,(%rsp)
     7ef:	8b 04 24             	mov    (%rsp),%eax
     7f2:	89 c0                	mov    %eax,%eax
     7f4:	48 85 c0             	test   %rax,%rax
     7f7:	78 0b                	js     804 <V2u32_ToV2r32+0x1d>
     7f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
     7fd:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
     802:	eb 19                	jmp    81d <V2u32_ToV2r32+0x36>
     804:	48 89 c2             	mov    %rax,%rdx
     807:	48 d1 ea             	shr    %rdx
     80a:	83 e0 01             	and    $0x1,%eax
     80d:	48 09 c2             	or     %rax,%rdx
     810:	66 0f ef c0          	pxor   %xmm0,%xmm0
     814:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
     819:	f3 0f 58 c0          	addss  %xmm0,%xmm0
     81d:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
     823:	8b 44 24 04          	mov    0x4(%rsp),%eax
     827:	89 c0                	mov    %eax,%eax
     829:	48 85 c0             	test   %rax,%rax
     82c:	78 0b                	js     839 <V2u32_ToV2r32+0x52>
     82e:	66 0f ef c0          	pxor   %xmm0,%xmm0
     832:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
     837:	eb 19                	jmp    852 <V2u32_ToV2r32+0x6b>
     839:	48 89 c2             	mov    %rax,%rdx
     83c:	48 d1 ea             	shr    %rdx
     83f:	83 e0 01             	and    $0x1,%eax
     842:	48 09 c2             	or     %rax,%rdx
     845:	66 0f ef c0          	pxor   %xmm0,%xmm0
     849:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
     84e:	f3 0f 58 c0          	addss  %xmm0,%xmm0
     852:	f3 0f 11 44 24 14    	movss  %xmm0,0x14(%rsp)
     858:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     85d:	66 48 0f 6e c0       	movq   %rax,%xmm0
     862:	48 83 c4 18          	add    $0x18,%rsp
     866:	c3                   	ret

0000000000000867 <V4u08_ToV4r32>:
     867:	53                   	push   %rbx
     868:	48 83 ec 20          	sub    $0x20,%rsp
     86c:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
     870:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
     875:	0f b6 c0             	movzbl %al,%eax
     878:	66 0f ef c0          	pxor   %xmm0,%xmm0
     87c:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     880:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
     886:	0f b6 44 24 0d       	movzbl 0xd(%rsp),%eax
     88b:	0f b6 c0             	movzbl %al,%eax
     88e:	66 0f ef c0          	pxor   %xmm0,%xmm0
     892:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     896:	f3 0f 11 44 24 14    	movss  %xmm0,0x14(%rsp)
     89c:	0f b6 44 24 0e       	movzbl 0xe(%rsp),%eax
     8a1:	0f b6 c0             	movzbl %al,%eax
     8a4:	66 0f ef c0          	pxor   %xmm0,%xmm0
     8a8:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     8ac:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
     8b2:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
     8b7:	0f b6 c0             	movzbl %al,%eax
     8ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
     8be:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     8c2:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
     8c8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     8cd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     8d2:	48 89 c1             	mov    %rax,%rcx
     8d5:	48 89 d3             	mov    %rdx,%rbx
     8d8:	48 89 d0             	mov    %rdx,%rax
     8db:	66 48 0f 6e c1       	movq   %rcx,%xmm0
     8e0:	66 48 0f 6e c8       	movq   %rax,%xmm1
     8e5:	48 83 c4 20          	add    $0x20,%rsp
     8e9:	5b                   	pop    %rbx
     8ea:	c3                   	ret

00000000000008eb <V4r32_ToV4u08>:
     8eb:	48 83 ec 28          	sub    $0x28,%rsp
     8ef:	66 48 0f 7e c0       	movq   %xmm0,%rax
     8f4:	66 0f 6f c1          	movdqa %xmm1,%xmm0
     8f8:	66 48 0f 7e c2       	movq   %xmm0,%rdx
     8fd:	48 89 04 24          	mov    %rax,(%rsp)
     901:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
     906:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     90b:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     90f:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     913:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     919:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     91d:	88 44 24 1d          	mov    %al,0x1d(%rsp)
     921:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
     927:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     92b:	88 44 24 1e          	mov    %al,0x1e(%rsp)
     92f:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
     935:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     939:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     93d:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
     941:	48 83 c4 28          	add    $0x28,%rsp
     945:	c3                   	ret

0000000000000946 <Mem_Set>:
     946:	48 83 ec 48          	sub    $0x48,%rsp
     94a:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     94f:	89 f0                	mov    %esi,%eax
     951:	48 89 14 24          	mov    %rdx,(%rsp)
     955:	88 44 24 0c          	mov    %al,0xc(%rsp)
     959:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     95e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
     963:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     968:	83 e0 07             	and    $0x7,%eax
     96b:	ba 08 00 00 00       	mov    $0x8,%edx
     970:	48 29 c2             	sub    %rax,%rdx
     973:	48 89 d0             	mov    %rdx,%rax
     976:	83 e0 08             	and    $0x8,%eax
     979:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
     97e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     983:	48 29 04 24          	sub    %rax,(%rsp)
     987:	eb 1b                	jmp    9a4 <Mem_Set+0x5e>
     989:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
     98e:	48 8d 50 01          	lea    0x1(%rax),%rdx
     992:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
     997:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     99c:	88 10                	mov    %dl,(%rax)
     99e:	48 83 6c 24 38 01    	subq   $0x1,0x38(%rsp)
     9a4:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
     9aa:	75 dd                	jne    989 <Mem_Set+0x43>
     9ac:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     9b1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
     9b6:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     9bb:	89 d0                	mov    %edx,%eax
     9bd:	c1 e0 08             	shl    $0x8,%eax
     9c0:	01 d0                	add    %edx,%eax
     9c2:	66 89 44 24 2e       	mov    %ax,0x2e(%rsp)
     9c7:	0f b7 54 24 2e       	movzwl 0x2e(%rsp),%edx
     9cc:	89 d0                	mov    %edx,%eax
     9ce:	c1 e0 10             	shl    $0x10,%eax
     9d1:	01 d0                	add    %edx,%eax
     9d3:	89 44 24 28          	mov    %eax,0x28(%rsp)
     9d7:	8b 54 24 28          	mov    0x28(%rsp),%edx
     9db:	48 89 d0             	mov    %rdx,%rax
     9de:	48 c1 e0 20          	shl    $0x20,%rax
     9e2:	48 01 d0             	add    %rdx,%rax
     9e5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     9ea:	eb 1b                	jmp    a07 <Mem_Set+0xc1>
     9ec:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     9f1:	48 8d 50 08          	lea    0x8(%rax),%rdx
     9f5:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
     9fa:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
     9ff:	48 89 10             	mov    %rdx,(%rax)
     a02:	48 83 2c 24 08       	subq   $0x8,(%rsp)
     a07:	48 83 3c 24 07       	cmpq   $0x7,(%rsp)
     a0c:	77 de                	ja     9ec <Mem_Set+0xa6>
     a0e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     a13:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
     a18:	eb 1a                	jmp    a34 <Mem_Set+0xee>
     a1a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
     a1f:	48 8d 50 01          	lea    0x1(%rax),%rdx
     a23:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
     a28:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     a2d:	88 10                	mov    %dl,(%rax)
     a2f:	48 83 2c 24 01       	subq   $0x1,(%rsp)
     a34:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
     a39:	75 df                	jne    a1a <Mem_Set+0xd4>
     a3b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a40:	48 83 c4 48          	add    $0x48,%rsp
     a44:	c3                   	ret

0000000000000a45 <Mem_Cpy>:
     a45:	48 83 ec 28          	sub    $0x28,%rsp
     a49:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     a4e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     a53:	48 89 14 24          	mov    %rdx,(%rsp)
     a57:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a5c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     a61:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     a66:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     a6b:	eb 26                	jmp    a93 <Mem_Cpy+0x4e>
     a6d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     a72:	48 8d 42 01          	lea    0x1(%rdx),%rax
     a76:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     a7b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     a80:	48 8d 48 01          	lea    0x1(%rax),%rcx
     a84:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
     a89:	0f b6 12             	movzbl (%rdx),%edx
     a8c:	88 10                	mov    %dl,(%rax)
     a8e:	48 83 2c 24 01       	subq   $0x1,(%rsp)
     a93:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
     a98:	75 d3                	jne    a6d <Mem_Cpy+0x28>
     a9a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a9f:	48 83 c4 28          	add    $0x28,%rsp
     aa3:	c3                   	ret

0000000000000aa4 <Mem_Tile>:
     aa4:	48 83 ec 30          	sub    $0x30,%rsp
     aa8:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
     aad:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
     ab2:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
     ab7:	48 89 0c 24          	mov    %rcx,(%rsp)
     abb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     ac0:	ba 00 00 00 00       	mov    $0x0,%edx
     ac5:	48 f7 34 24          	divq   (%rsp)
     ac9:	89 44 24 20          	mov    %eax,0x20(%rsp)
     acd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ad2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     ad7:	c7 44 24 24 00 00 00 00 	movl   $0x0,0x24(%rsp)
     adf:	eb 27                	jmp    b08 <Mem_Tile+0x64>
     ae1:	48 8b 14 24          	mov    (%rsp),%rdx
     ae5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
     aea:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     aef:	48 89 ce             	mov    %rcx,%rsi
     af2:	48 89 c7             	mov    %rax,%rdi
     af5:	e8 4b ff ff ff       	call   a45 <Mem_Cpy>
     afa:	48 8b 04 24          	mov    (%rsp),%rax
     afe:	48 01 44 24 28       	add    %rax,0x28(%rsp)
     b03:	83 44 24 24 01       	addl   $0x1,0x24(%rsp)
     b08:	8b 44 24 24          	mov    0x24(%rsp),%eax
     b0c:	3b 44 24 20          	cmp    0x20(%rsp),%eax
     b10:	72 cf                	jb     ae1 <Mem_Tile+0x3d>
     b12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     b17:	48 83 c4 30          	add    $0x30,%rsp
     b1b:	c3                   	ret

0000000000000b1c <Mem_Cmp>:
     b1c:	48 83 ec 38          	sub    $0x38,%rsp
     b20:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     b25:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     b2a:	48 89 14 24          	mov    %rdx,(%rsp)
     b2e:	48 c7 44 24 30 00 00 00 00 	movq   $0x0,0x30(%rsp)
     b37:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     b3c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     b41:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     b46:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     b4b:	eb 12                	jmp    b5f <Mem_Cmp+0x43>
     b4d:	48 83 44 24 28 01    	addq   $0x1,0x28(%rsp)
     b53:	48 83 44 24 20 01    	addq   $0x1,0x20(%rsp)
     b59:	48 83 44 24 30 01    	addq   $0x1,0x30(%rsp)
     b5f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     b64:	48 3b 04 24          	cmp    (%rsp),%rax
     b68:	73 14                	jae    b7e <Mem_Cmp+0x62>
     b6a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     b6f:	0f b6 10             	movzbl (%rax),%edx
     b72:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     b77:	0f b6 00             	movzbl (%rax),%eax
     b7a:	38 c2                	cmp    %al,%dl
     b7c:	74 cf                	je     b4d <Mem_Cmp+0x31>
     b7e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     b83:	48 3b 04 24          	cmp    (%rsp),%rax
     b87:	75 07                	jne    b90 <Mem_Cmp+0x74>
     b89:	b8 00 00 00 00       	mov    $0x0,%eax
     b8e:	eb 18                	jmp    ba8 <Mem_Cmp+0x8c>
     b90:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     b95:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
     b9a:	73 07                	jae    ba3 <Mem_Cmp+0x87>
     b9c:	b8 01 00 00 00       	mov    $0x1,%eax
     ba1:	eb 05                	jmp    ba8 <Mem_Cmp+0x8c>
     ba3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     ba8:	48 83 c4 38          	add    $0x38,%rsp
     bac:	c3                   	ret

0000000000000bad <Mem_BytesUntil>:
     bad:	48 83 ec 20          	sub    $0x20,%rsp
     bb1:	89 f8                	mov    %edi,%eax
     bb3:	48 89 34 24          	mov    %rsi,(%rsp)
     bb7:	88 44 24 0c          	mov    %al,0xc(%rsp)
     bbb:	48 8b 04 24          	mov    (%rsp),%rax
     bbf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     bc4:	c7 44 24 14 00 00 00 00 	movl   $0x0,0x14(%rsp)
     bcc:	eb 0b                	jmp    bd9 <Mem_BytesUntil+0x2c>
     bce:	48 83 44 24 18 01    	addq   $0x1,0x18(%rsp)
     bd4:	83 44 24 14 01       	addl   $0x1,0x14(%rsp)
     bd9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     bde:	0f b6 00             	movzbl (%rax),%eax
     be1:	38 44 24 0c          	cmp    %al,0xc(%rsp)
     be5:	75 e7                	jne    bce <Mem_BytesUntil+0x21>
     be7:	8b 44 24 14          	mov    0x14(%rsp),%eax
     beb:	48 83 c4 20          	add    $0x20,%rsp
     bef:	c3                   	ret

0000000000000bf0 <Heap_GetHeap>:
     bf0:	48 83 ec 08          	sub    $0x8,%rsp
     bf4:	48 89 3c 24          	mov    %rdi,(%rsp)
     bf8:	48 8b 04 24          	mov    (%rsp),%rax
     bfc:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     c00:	0f b7 c0             	movzwl %ax,%eax
     c03:	48 c1 e0 05          	shl    $0x5,%rax
     c07:	48 f7 d8             	neg    %rax
     c0a:	48 89 c2             	mov    %rax,%rdx
     c0d:	48 8b 04 24          	mov    (%rsp),%rax
     c11:	48 01 d0             	add    %rdx,%rax
     c14:	48 83 c4 08          	add    $0x8,%rsp
     c18:	c3                   	ret

0000000000000c19 <Heap_GetHandle>:
     c19:	48 83 ec 08          	sub    $0x8,%rsp
     c1d:	48 89 3c 24          	mov    %rdi,(%rsp)
     c21:	48 8b 04 24          	mov    (%rsp),%rax
     c25:	48 8b 40 f8          	mov    -0x8(%rax),%rax
     c29:	48 83 c4 08          	add    $0x8,%rsp
     c2d:	c3                   	ret

0000000000000c2e <Heap_Init>:
     c2e:	48 83 ec 20          	sub    $0x20,%rsp
     c32:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     c37:	48 89 34 24          	mov    %rsi,(%rsp)
     c3b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     c40:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     c45:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c4a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
     c4f:	48 89 10             	mov    %rdx,(%rax)
     c52:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c57:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%rax)
     c5e:	48 8b 04 24          	mov    (%rsp),%rax
     c62:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
     c66:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     c70:	48 89 d1             	mov    %rdx,%rcx
     c73:	48 21 c1             	and    %rax,%rcx
     c76:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c7b:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     c85:	48 21 ca             	and    %rcx,%rdx
     c88:	48 c1 e2 10          	shl    $0x10,%rdx
     c8c:	48 8b 48 08          	mov    0x8(%rax),%rcx
     c90:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
     c9a:	48 21 f1             	and    %rsi,%rcx
     c9d:	48 09 ca             	or     %rcx,%rdx
     ca0:	48 89 50 08          	mov    %rdx,0x8(%rax)
     ca4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ca9:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)
     caf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cb4:	66 c7 40 14 00 00    	movw   $0x0,0x14(%rax)
     cba:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cbf:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
     cc5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cca:	66 c7 40 18 00 00    	movw   $0x0,0x18(%rax)
     cd0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cd5:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
     cdb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ce0:	66 c7 40 1c 00 00    	movw   $0x0,0x1c(%rax)
     ce6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ceb:	66 c7 40 1e 00 00    	movw   $0x0,0x1e(%rax)
     cf1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cf6:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
     cfa:	83 ca 80             	or     $0xffffff80,%edx
     cfd:	88 50 0f             	mov    %dl,0xf(%rax)
     d00:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d05:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
     d09:	83 e2 bf             	and    $0xffffffbf,%edx
     d0c:	88 50 0f             	mov    %dl,0xf(%rax)
     d0f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     d14:	48 83 c4 20          	add    $0x20,%rsp
     d18:	c3                   	ret

0000000000000d19 <Heap_Defragment>:
     d19:	48 83 ec 28          	sub    $0x28,%rsp
     d1d:	48 89 3c 24          	mov    %rdi,(%rsp)
     d21:	48 8b 04 24          	mov    (%rsp),%rax
     d25:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     d2a:	48 c7 44 24 20 00 00 00 00 	movq   $0x0,0x20(%rsp)
     d33:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     d38:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     d3d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d42:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     d46:	0f b7 c0             	movzwl %ax,%eax
     d49:	48 c1 e0 05          	shl    $0x5,%rax
     d4d:	48 89 c2             	mov    %rax,%rdx
     d50:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     d55:	48 01 d0             	add    %rdx,%rax
     d58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     d5d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d62:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
     d66:	83 e0 80             	and    $0xffffff80,%eax
     d69:	84 c0                	test   %al,%al
     d6b:	74 71                	je     dde <Heap_Defragment+0xc5>
     d6d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d72:	48 8b 40 08          	mov    0x8(%rax),%rax
     d76:	48 c1 e8 10          	shr    $0x10,%rax
     d7a:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     d84:	48 21 d0             	and    %rdx,%rax
     d87:	48 89 c2             	mov    %rax,%rdx
     d8a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     d8f:	48 01 c2             	add    %rax,%rdx
     d92:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     d9c:	48 89 d1             	mov    %rdx,%rcx
     d9f:	48 21 c1             	and    %rax,%rcx
     da2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     da7:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     db1:	48 21 ca             	and    %rcx,%rdx
     db4:	48 c1 e2 10          	shl    $0x10,%rdx
     db8:	48 8b 48 08          	mov    0x8(%rax),%rcx
     dbc:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
     dc6:	48 21 f1             	and    %rsi,%rcx
     dc9:	48 09 ca             	or     %rcx,%rdx
     dcc:	48 89 50 08          	mov    %rdx,0x8(%rax)
     dd0:	48 c7 44 24 20 00 00 00 00 	movq   $0x0,0x20(%rsp)
     dd9:	e9 89 00 00 00       	jmp    e67 <Heap_Defragment+0x14e>
     dde:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     de3:	48 8b 40 08          	mov    0x8(%rax),%rax
     de7:	48 c1 e8 10          	shr    $0x10,%rax
     deb:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     df5:	48 21 d0             	and    %rdx,%rax
     df8:	48 01 44 24 20       	add    %rax,0x20(%rsp)
     dfd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e02:	48 8b 50 08          	mov    0x8(%rax),%rdx
     e06:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
     e10:	48 21 ca             	and    %rcx,%rdx
     e13:	48 89 50 08          	mov    %rdx,0x8(%rax)
     e17:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
     e1d:	74 48                	je     e67 <Heap_Defragment+0x14e>
     e1f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e24:	8b 40 10             	mov    0x10(%rax),%eax
     e27:	89 c6                	mov    %eax,%esi
     e29:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e2e:	48 8b 00             	mov    (%rax),%rax
     e31:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     e36:	48 8b 0a             	mov    (%rdx),%rcx
     e39:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
     e3e:	48 01 d1             	add    %rdx,%rcx
     e41:	48 89 f2             	mov    %rsi,%rdx
     e44:	48 89 c6             	mov    %rax,%rsi
     e47:	48 89 cf             	mov    %rcx,%rdi
     e4a:	e8 f6 fb ff ff       	call   a45 <Mem_Cpy>
     e4f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e54:	48 8b 10             	mov    (%rax),%rdx
     e57:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     e5c:	48 01 c2             	add    %rax,%rdx
     e5f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e64:	48 89 10             	mov    %rdx,(%rax)
     e67:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e6c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     e70:	66 85 c0             	test   %ax,%ax
     e73:	0f 85 c4 fe ff ff    	jne    d3d <Heap_Defragment+0x24>
     e79:	90                   	nop
     e7a:	90                   	nop
     e7b:	48 83 c4 28          	add    $0x28,%rsp
     e7f:	c3                   	ret

0000000000000e80 <Heap_AllocateBlock>:
     e80:	48 83 ec 28          	sub    $0x28,%rsp
     e84:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     e89:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     e8e:	89 54 24 04          	mov    %edx,0x4(%rsp)
     e92:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     e97:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     e9c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ea1:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     ea5:	0f b7 c0             	movzwl %ax,%eax
     ea8:	48 c1 e0 05          	shl    $0x5,%rax
     eac:	48 89 c2             	mov    %rax,%rdx
     eaf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     eb4:	48 01 d0             	add    %rdx,%rax
     eb7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     ebc:	eb 20                	jmp    ede <Heap_AllocateBlock+0x5e>
     ebe:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ec3:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     ec7:	0f b7 c0             	movzwl %ax,%eax
     eca:	48 c1 e0 05          	shl    $0x5,%rax
     ece:	48 89 c2             	mov    %rax,%rdx
     ed1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ed6:	48 01 d0             	add    %rdx,%rax
     ed9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     ede:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ee3:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     ee7:	66 85 c0             	test   %ax,%ax
     eea:	74 33                	je     f1f <Heap_AllocateBlock+0x9f>
     eec:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ef1:	48 8b 40 08          	mov    0x8(%rax),%rax
     ef5:	48 c1 e8 10          	shr    $0x10,%rax
     ef9:	48 89 c2             	mov    %rax,%rdx
     efc:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     f06:	48 21 c2             	and    %rax,%rdx
     f09:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f0d:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     f17:	48 21 c8             	and    %rcx,%rax
     f1a:	48 39 c2             	cmp    %rax,%rdx
     f1d:	72 9f                	jb     ebe <Heap_AllocateBlock+0x3e>
     f1f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f24:	48 8b 40 08          	mov    0x8(%rax),%rax
     f28:	48 c1 e8 10          	shr    $0x10,%rax
     f2c:	48 89 c2             	mov    %rax,%rdx
     f2f:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     f39:	48 21 c2             	and    %rax,%rdx
     f3c:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f40:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     f4a:	48 21 c8             	and    %rcx,%rax
     f4d:	48 39 c2             	cmp    %rax,%rdx
     f50:	73 0d                	jae    f5f <Heap_AllocateBlock+0xdf>
     f52:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     f57:	48 89 c7             	mov    %rax,%rdi
     f5a:	e8 ba fd ff ff       	call   d19 <Heap_Defragment>
     f5f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f64:	48 8b 10             	mov    (%rax),%rdx
     f67:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f6c:	8b 40 10             	mov    0x10(%rax),%eax
     f6f:	89 c1                	mov    %eax,%ecx
     f71:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f76:	48 8b 40 08          	mov    0x8(%rax),%rax
     f7a:	48 c1 e8 10          	shr    $0x10,%rax
     f7e:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
     f88:	48 21 f0             	and    %rsi,%rax
     f8b:	48 01 c1             	add    %rax,%rcx
     f8e:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f92:	48 29 c1             	sub    %rax,%rcx
     f95:	48 01 ca             	add    %rcx,%rdx
     f98:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     f9d:	48 89 10             	mov    %rdx,(%rax)
     fa0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     fa5:	48 8b 40 08          	mov    0x8(%rax),%rax
     fa9:	48 c1 e8 10          	shr    $0x10,%rax
     fad:	48 89 c2             	mov    %rax,%rdx
     fb0:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     fba:	48 21 c2             	and    %rax,%rdx
     fbd:	8b 44 24 04          	mov    0x4(%rsp),%eax
     fc1:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     fcb:	48 21 c8             	and    %rcx,%rax
     fce:	48 29 c2             	sub    %rax,%rdx
     fd1:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     fdb:	48 21 c2             	and    %rax,%rdx
     fde:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     fe3:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     fed:	48 21 ca             	and    %rcx,%rdx
     ff0:	48 c1 e2 10          	shl    $0x10,%rdx
     ff4:	48 8b 48 08          	mov    0x8(%rax),%rcx
     ff8:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    1002:	48 21 f1             	and    %rsi,%rcx
    1005:	48 09 ca             	or     %rcx,%rdx
    1008:	48 89 50 08          	mov    %rdx,0x8(%rax)
    100c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1011:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    1015:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    101a:	66 89 50 1c          	mov    %dx,0x1c(%rax)
    101e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1023:	0f b7 50 1e          	movzwl 0x1e(%rax),%edx
    1027:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    102c:	66 89 50 1e          	mov    %dx,0x1e(%rax)
    1030:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1035:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    1039:	0f b7 c0             	movzwl %ax,%eax
    103c:	48 c1 e0 05          	shl    $0x5,%rax
    1040:	48 89 c2             	mov    %rax,%rdx
    1043:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1048:	48 01 c2             	add    %rax,%rdx
    104b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1050:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1054:	66 89 42 1c          	mov    %ax,0x1c(%rdx)
    1058:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    105d:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    1061:	0f b7 c0             	movzwl %ax,%eax
    1064:	48 c1 e0 05          	shl    $0x5,%rax
    1068:	48 89 c2             	mov    %rax,%rdx
    106b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1070:	48 01 c2             	add    %rax,%rdx
    1073:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1078:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    107c:	66 89 42 1e          	mov    %ax,0x1e(%rdx)
    1080:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1085:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1089:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
    1093:	48 21 ca             	and    %rcx,%rdx
    1096:	48 89 50 08          	mov    %rdx,0x8(%rax)
    109a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    109f:	8b 54 24 04          	mov    0x4(%rsp),%edx
    10a3:	89 50 10             	mov    %edx,0x10(%rax)
    10a6:	90                   	nop
    10a7:	48 83 c4 28          	add    $0x28,%rsp
    10ab:	c3                   	ret

00000000000010ac <Heap_FreeBlock>:
    10ac:	48 83 ec 20          	sub    $0x20,%rsp
    10b0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    10b5:	48 89 34 24          	mov    %rsi,(%rsp)
    10b9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    10be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    10c3:	48 8b 04 24          	mov    (%rsp),%rax
    10c7:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    10cb:	0f b7 c0             	movzwl %ax,%eax
    10ce:	48 c1 e0 05          	shl    $0x5,%rax
    10d2:	48 89 c2             	mov    %rax,%rdx
    10d5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    10da:	48 01 d0             	add    %rdx,%rax
    10dd:	48 8b 40 08          	mov    0x8(%rax),%rax
    10e1:	48 c1 e8 10          	shr    $0x10,%rax
    10e5:	48 89 c2             	mov    %rax,%rdx
    10e8:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    10f2:	48 21 c2             	and    %rax,%rdx
    10f5:	48 8b 04 24          	mov    (%rsp),%rax
    10f9:	8b 40 10             	mov    0x10(%rax),%eax
    10fc:	89 c1                	mov    %eax,%ecx
    10fe:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    1108:	48 21 c1             	and    %rax,%rcx
    110b:	48 8b 04 24          	mov    (%rsp),%rax
    110f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1113:	48 c1 e8 10          	shr    $0x10,%rax
    1117:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
    1121:	48 21 f0             	and    %rsi,%rax
    1124:	48 01 c8             	add    %rcx,%rax
    1127:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
    1131:	48 21 c8             	and    %rcx,%rax
    1134:	48 8b 0c 24          	mov    (%rsp),%rcx
    1138:	0f b7 49 1c          	movzwl 0x1c(%rcx),%ecx
    113c:	0f b7 c9             	movzwl %cx,%ecx
    113f:	48 89 ce             	mov    %rcx,%rsi
    1142:	48 c1 e6 05          	shl    $0x5,%rsi
    1146:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    114b:	48 01 f1             	add    %rsi,%rcx
    114e:	48 01 d0             	add    %rdx,%rax
    1151:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    115b:	48 21 d0             	and    %rdx,%rax
    115e:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1168:	48 21 d0             	and    %rdx,%rax
    116b:	48 c1 e0 10          	shl    $0x10,%rax
    116f:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    1173:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    117d:	48 21 f2             	and    %rsi,%rdx
    1180:	48 09 d0             	or     %rdx,%rax
    1183:	48 89 41 08          	mov    %rax,0x8(%rcx)
    1187:	48 8b 04 24          	mov    (%rsp),%rax
    118b:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    118f:	0f b7 c0             	movzwl %ax,%eax
    1192:	48 c1 e0 05          	shl    $0x5,%rax
    1196:	48 89 c2             	mov    %rax,%rdx
    1199:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    119e:	48 01 c2             	add    %rax,%rdx
    11a1:	48 8b 04 24          	mov    (%rsp),%rax
    11a5:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    11a9:	66 89 42 1e          	mov    %ax,0x1e(%rdx)
    11ad:	48 8b 04 24          	mov    (%rsp),%rax
    11b1:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    11b5:	0f b7 c0             	movzwl %ax,%eax
    11b8:	48 c1 e0 05          	shl    $0x5,%rax
    11bc:	48 89 c2             	mov    %rax,%rdx
    11bf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    11c4:	48 01 c2             	add    %rax,%rdx
    11c7:	48 8b 04 24          	mov    (%rsp),%rax
    11cb:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    11cf:	66 89 42 1c          	mov    %ax,0x1c(%rdx)
    11d3:	90                   	nop
    11d4:	48 83 c4 20          	add    $0x20,%rsp
    11d8:	c3                   	ret

00000000000011d9 <_Heap_Allocate>:
    11d9:	48 83 ec 30          	sub    $0x30,%rsp
    11dd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    11e2:	89 74 24 04          	mov    %esi,0x4(%rsp)
    11e6:	89 d0                	mov    %edx,%eax
    11e8:	88 04 24             	mov    %al,(%rsp)
    11eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    11f0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    11f5:	48 c7 44 24 28 00 00 00 00 	movq   $0x0,0x28(%rsp)
    11fe:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    1203:	80 3c 24 00          	cmpb   $0x0,(%rsp)
    1207:	74 05                	je     120e <_Heap_Allocate+0x35>
    1209:	83 44 24 04 08       	addl   $0x8,0x4(%rsp)
    120e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1213:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1217:	66 85 c0             	test   %ax,%ax
    121a:	0f 85 fd 00 00 00    	jne    131d <_Heap_Allocate+0x144>
    1220:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1225:	48 8b 40 08          	mov    0x8(%rax),%rax
    1229:	48 c1 e8 10          	shr    $0x10,%rax
    122d:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1237:	48 21 d0             	and    %rdx,%rax
    123a:	48 83 f8 1f          	cmp    $0x1f,%rax
    123e:	77 12                	ja     1252 <_Heap_Allocate+0x79>
    1240:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1245:	48 89 c7             	mov    %rax,%rdi
    1248:	e8 cc fa ff ff       	call   d19 <Heap_Defragment>
    124d:	c6 44 24 17 01       	movb   $0x1,0x17(%rsp)
    1252:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1257:	8b 40 10             	mov    0x10(%rax),%eax
    125a:	c1 e8 05             	shr    $0x5,%eax
    125d:	66 89 44 24 14       	mov    %ax,0x14(%rsp)
    1262:	0f b7 44 24 14       	movzwl 0x14(%rsp),%eax
    1267:	48 c1 e0 05          	shl    $0x5,%rax
    126b:	48 89 c2             	mov    %rax,%rdx
    126e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1273:	48 01 d0             	add    %rdx,%rax
    1276:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    127b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1280:	0f b7 54 24 14       	movzwl 0x14(%rsp),%edx
    1285:	66 89 50 08          	mov    %dx,0x8(%rax)
    1289:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    128e:	8b 40 10             	mov    0x10(%rax),%eax
    1291:	8d 50 20             	lea    0x20(%rax),%edx
    1294:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1299:	89 50 10             	mov    %edx,0x10(%rax)
    129c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12a1:	48 8b 40 08          	mov    0x8(%rax),%rax
    12a5:	48 c1 e8 10          	shr    $0x10,%rax
    12a9:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    12b3:	48 21 d0             	and    %rdx,%rax
    12b6:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    12ba:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    12c4:	48 89 d1             	mov    %rdx,%rcx
    12c7:	48 21 c1             	and    %rax,%rcx
    12ca:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12cf:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    12d9:	48 21 ca             	and    %rcx,%rdx
    12dc:	48 c1 e2 10          	shl    $0x10,%rdx
    12e0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    12e4:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    12ee:	48 21 f1             	and    %rsi,%rcx
    12f1:	48 09 ca             	or     %rcx,%rdx
    12f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    12f8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12fd:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1301:	0f b7 c0             	movzwl %ax,%eax
    1304:	48 c1 e0 05          	shl    $0x5,%rax
    1308:	48 89 c2             	mov    %rax,%rdx
    130b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1310:	48 01 d0             	add    %rdx,%rax
    1313:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1318:	e9 a0 00 00 00       	jmp    13bd <_Heap_Allocate+0x1e4>
    131d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1322:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1326:	0f b7 c0             	movzwl %ax,%eax
    1329:	48 c1 e0 05          	shl    $0x5,%rax
    132d:	48 89 c2             	mov    %rax,%rdx
    1330:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1335:	48 01 d0             	add    %rdx,%rax
    1338:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    133d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1342:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1346:	0f b7 c0             	movzwl %ax,%eax
    1349:	48 c1 e0 05          	shl    $0x5,%rax
    134d:	48 89 c2             	mov    %rax,%rdx
    1350:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1355:	48 01 c2             	add    %rax,%rdx
    1358:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    135d:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1361:	66 89 42 16          	mov    %ax,0x16(%rdx)
    1365:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    136a:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    136e:	0f b7 c0             	movzwl %ax,%eax
    1371:	48 c1 e0 05          	shl    $0x5,%rax
    1375:	48 89 c2             	mov    %rax,%rdx
    1378:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    137d:	48 01 c2             	add    %rax,%rdx
    1380:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1385:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1389:	66 89 42 14          	mov    %ax,0x14(%rdx)
    138d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1392:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1397:	eb 06                	jmp    139f <_Heap_Allocate+0x1c6>
    1399:	48 83 6c 24 20 20    	subq   $0x20,0x20(%rsp)
    139f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13a4:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    13a8:	66 85 c0             	test   %ax,%ax
    13ab:	74 10                	je     13bd <_Heap_Allocate+0x1e4>
    13ad:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13b2:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    13b6:	83 e0 40             	and    $0x40,%eax
    13b9:	84 c0                	test   %al,%al
    13bb:	75 dc                	jne    1399 <_Heap_Allocate+0x1c0>
    13bd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13c2:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    13c6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13cb:	66 89 50 18          	mov    %dx,0x18(%rax)
    13cf:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13d4:	0f b7 50 1a          	movzwl 0x1a(%rax),%edx
    13d8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13dd:	66 89 50 1a          	mov    %dx,0x1a(%rax)
    13e1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13e6:	66 c7 40 14 00 00    	movw   $0x0,0x14(%rax)
    13ec:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13f1:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
    13f7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13fc:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1400:	0f b7 c0             	movzwl %ax,%eax
    1403:	48 c1 e0 05          	shl    $0x5,%rax
    1407:	48 89 c2             	mov    %rax,%rdx
    140a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    140f:	48 01 c2             	add    %rax,%rdx
    1412:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1417:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    141b:	66 89 42 1a          	mov    %ax,0x1a(%rdx)
    141f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1424:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    1428:	0f b7 c0             	movzwl %ax,%eax
    142b:	48 c1 e0 05          	shl    $0x5,%rax
    142f:	48 89 c2             	mov    %rax,%rdx
    1432:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1437:	48 01 c2             	add    %rax,%rdx
    143a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    143f:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1443:	66 89 42 18          	mov    %ax,0x18(%rdx)
    1447:	0f b6 04 24          	movzbl (%rsp),%eax
    144b:	83 e0 01             	and    $0x1,%eax
    144e:	89 c2                	mov    %eax,%edx
    1450:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1455:	89 d1                	mov    %edx,%ecx
    1457:	c1 e1 07             	shl    $0x7,%ecx
    145a:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    145e:	83 e2 7f             	and    $0x7f,%edx
    1461:	09 ca                	or     %ecx,%edx
    1463:	88 50 0f             	mov    %dl,0xf(%rax)
    1466:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    146b:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    146f:	83 e2 bf             	and    $0xffffffbf,%edx
    1472:	88 50 0f             	mov    %dl,0xf(%rax)
    1475:	8b 54 24 04          	mov    0x4(%rsp),%edx
    1479:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    147e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1483:	48 89 ce             	mov    %rcx,%rsi
    1486:	48 89 c7             	mov    %rax,%rdi
    1489:	e8 f2 f9 ff ff       	call   e80 <Heap_AllocateBlock>
    148e:	80 3c 24 00          	cmpb   $0x0,(%rsp)
    1492:	74 10                	je     14a4 <_Heap_Allocate+0x2cb>
    1494:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1499:	48 8b 00             	mov    (%rax),%rax
    149c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    14a1:	48 89 10             	mov    %rdx,(%rax)
    14a4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    14a9:	48 83 c4 30          	add    $0x30,%rsp
    14ad:	c3                   	ret

00000000000014ae <Heap_Allocate>:
    14ae:	48 83 ec 10          	sub    $0x10,%rsp
    14b2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    14b7:	48 89 34 24          	mov    %rsi,(%rsp)
    14bb:	48 8b 04 24          	mov    (%rsp),%rax
    14bf:	89 c1                	mov    %eax,%ecx
    14c1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    14c6:	ba 00 00 00 00       	mov    $0x0,%edx
    14cb:	89 ce                	mov    %ecx,%esi
    14cd:	48 89 c7             	mov    %rax,%rdi
    14d0:	e8 04 fd ff ff       	call   11d9 <_Heap_Allocate>
    14d5:	48 83 c4 10          	add    $0x10,%rsp
    14d9:	c3                   	ret

00000000000014da <Heap_AllocateA>:
    14da:	48 83 ec 10          	sub    $0x10,%rsp
    14de:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    14e3:	48 89 34 24          	mov    %rsi,(%rsp)
    14e7:	48 8b 04 24          	mov    (%rsp),%rax
    14eb:	89 c1                	mov    %eax,%ecx
    14ed:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    14f2:	ba 01 00 00 00       	mov    $0x1,%edx
    14f7:	89 ce                	mov    %ecx,%esi
    14f9:	48 89 c7             	mov    %rax,%rdi
    14fc:	e8 d8 fc ff ff       	call   11d9 <_Heap_Allocate>
    1501:	48 8b 00             	mov    (%rax),%rax
    1504:	48 83 c0 08          	add    $0x8,%rax
    1508:	48 83 c4 10          	add    $0x10,%rsp
    150c:	c3                   	ret

000000000000150d <Heap_Resize>:
    150d:	48 83 ec 30          	sub    $0x30,%rsp
    1511:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    1516:	89 74 24 04          	mov    %esi,0x4(%rsp)
    151a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    151e:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1528:	48 21 d0             	and    %rdx,%rax
    152b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1530:	8b 52 10             	mov    0x10(%rdx),%edx
    1533:	89 d1                	mov    %edx,%ecx
    1535:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    153f:	48 21 d1             	and    %rdx,%rcx
    1542:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1547:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    154b:	48 c1 ea 10          	shr    $0x10,%rdx
    154f:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
    1559:	48 21 f2             	and    %rsi,%rdx
    155c:	48 01 ca             	add    %rcx,%rdx
    155f:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
    1569:	48 21 ca             	and    %rcx,%rdx
    156c:	48 39 c2             	cmp    %rax,%rdx
    156f:	0f 82 80 00 00 00    	jb     15f5 <Heap_Resize+0xe8>
    1575:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    157a:	48 8b 40 08          	mov    0x8(%rax),%rax
    157e:	48 c1 e8 10          	shr    $0x10,%rax
    1582:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    158c:	48 21 d0             	and    %rdx,%rax
    158f:	48 89 c1             	mov    %rax,%rcx
    1592:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1597:	8b 40 10             	mov    0x10(%rax),%eax
    159a:	89 c2                	mov    %eax,%edx
    159c:	8b 44 24 04          	mov    0x4(%rsp),%eax
    15a0:	48 29 c2             	sub    %rax,%rdx
    15a3:	48 01 ca             	add    %rcx,%rdx
    15a6:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    15b0:	48 89 d1             	mov    %rdx,%rcx
    15b3:	48 21 c1             	and    %rax,%rcx
    15b6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15bb:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    15c5:	48 21 ca             	and    %rcx,%rdx
    15c8:	48 c1 e2 10          	shl    $0x10,%rdx
    15cc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    15d0:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    15da:	48 21 f1             	and    %rsi,%rcx
    15dd:	48 09 ca             	or     %rcx,%rdx
    15e0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    15e4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15e9:	8b 54 24 04          	mov    0x4(%rsp),%edx
    15ed:	89 50 10             	mov    %edx,0x10(%rax)
    15f0:	e9 86 00 00 00       	jmp    167b <Heap_Resize+0x16e>
    15f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15fa:	48 8b 00             	mov    (%rax),%rax
    15fd:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1602:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1607:	8b 40 10             	mov    0x10(%rax),%eax
    160a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    160e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1613:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1617:	0f b7 c0             	movzwl %ax,%eax
    161a:	48 c1 e0 05          	shl    $0x5,%rax
    161e:	48 f7 d8             	neg    %rax
    1621:	48 89 c2             	mov    %rax,%rdx
    1624:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1629:	48 01 d0             	add    %rdx,%rax
    162c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1631:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1636:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    163b:	48 89 d6             	mov    %rdx,%rsi
    163e:	48 89 c7             	mov    %rax,%rdi
    1641:	e8 66 fa ff ff       	call   10ac <Heap_FreeBlock>
    1646:	8b 54 24 04          	mov    0x4(%rsp),%edx
    164a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    164f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1654:	48 89 ce             	mov    %rcx,%rsi
    1657:	48 89 c7             	mov    %rax,%rdi
    165a:	e8 21 f8 ff ff       	call   e80 <Heap_AllocateBlock>
    165f:	8b 54 24 24          	mov    0x24(%rsp),%edx
    1663:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1668:	48 8b 00             	mov    (%rax),%rax
    166b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    1670:	48 89 ce             	mov    %rcx,%rsi
    1673:	48 89 c7             	mov    %rax,%rdi
    1676:	e8 ca f3 ff ff       	call   a45 <Mem_Cpy>
    167b:	90                   	nop
    167c:	48 83 c4 30          	add    $0x30,%rsp
    1680:	c3                   	ret

0000000000001681 <Heap_ResizeA>:
    1681:	48 83 ec 20          	sub    $0x20,%rsp
    1685:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    168a:	89 74 24 04          	mov    %esi,0x4(%rsp)
    168e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1693:	48 8b 00             	mov    (%rax),%rax
    1696:	48 89 c7             	mov    %rax,%rdi
    1699:	e8 7b f5 ff ff       	call   c19 <Heap_GetHandle>
    169e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    16a3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    16a7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    16ac:	89 d6                	mov    %edx,%esi
    16ae:	48 89 c7             	mov    %rax,%rdi
    16b1:	e8 57 fe ff ff       	call   150d <Heap_Resize>
    16b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    16bb:	48 8b 10             	mov    (%rax),%rdx
    16be:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    16c3:	48 89 10             	mov    %rdx,(%rax)
    16c6:	90                   	nop
    16c7:	48 83 c4 20          	add    $0x20,%rsp
    16cb:	c3                   	ret

00000000000016cc <Heap_Free>:
    16cc:	48 83 ec 48          	sub    $0x48,%rsp
    16d0:	48 89 3c 24          	mov    %rdi,(%rsp)
    16d4:	48 8b 04 24          	mov    (%rsp),%rax
    16d8:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    16dc:	0f b7 c0             	movzwl %ax,%eax
    16df:	48 c1 e0 05          	shl    $0x5,%rax
    16e3:	48 f7 d8             	neg    %rax
    16e6:	48 89 c2             	mov    %rax,%rdx
    16e9:	48 8b 04 24          	mov    (%rsp),%rax
    16ed:	48 01 d0             	add    %rdx,%rax
    16f0:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    16f5:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    16fa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    16ff:	48 8b 14 24          	mov    (%rsp),%rdx
    1703:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1708:	48 89 d6             	mov    %rdx,%rsi
    170b:	48 89 c7             	mov    %rax,%rdi
    170e:	e8 99 f9 ff ff       	call   10ac <Heap_FreeBlock>
    1713:	48 8b 04 24          	mov    (%rsp),%rax
    1717:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    171b:	0f b7 c0             	movzwl %ax,%eax
    171e:	48 c1 e0 05          	shl    $0x5,%rax
    1722:	48 89 c2             	mov    %rax,%rdx
    1725:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    172a:	48 01 c2             	add    %rax,%rdx
    172d:	48 8b 04 24          	mov    (%rsp),%rax
    1731:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1735:	66 89 42 18          	mov    %ax,0x18(%rdx)
    1739:	48 8b 04 24          	mov    (%rsp),%rax
    173d:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1741:	0f b7 c0             	movzwl %ax,%eax
    1744:	48 c1 e0 05          	shl    $0x5,%rax
    1748:	48 89 c2             	mov    %rax,%rdx
    174b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1750:	48 01 c2             	add    %rax,%rdx
    1753:	48 8b 04 24          	mov    (%rsp),%rax
    1757:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    175b:	66 89 42 1a          	mov    %ax,0x1a(%rdx)
    175f:	48 8b 04 24          	mov    (%rsp),%rax
    1763:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    1767:	66 85 c0             	test   %ax,%ax
    176a:	0f 85 35 01 00 00    	jne    18a5 <Heap_Free+0x1d9>
    1770:	48 8b 04 24          	mov    (%rsp),%rax
    1774:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1778:	0f b7 c0             	movzwl %ax,%eax
    177b:	48 c1 e0 05          	shl    $0x5,%rax
    177f:	48 89 c2             	mov    %rax,%rdx
    1782:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1787:	48 01 d0             	add    %rdx,%rax
    178a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    178f:	eb 06                	jmp    1797 <Heap_Free+0xcb>
    1791:	48 83 6c 24 40 20    	subq   $0x20,0x40(%rsp)
    1797:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    179c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    17a0:	66 85 c0             	test   %ax,%ax
    17a3:	74 10                	je     17b5 <Heap_Free+0xe9>
    17a5:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17aa:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    17ae:	83 e0 40             	and    $0x40,%eax
    17b1:	84 c0                	test   %al,%al
    17b3:	74 dc                	je     1791 <Heap_Free+0xc5>
    17b5:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17ba:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    17be:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    17c3:	66 89 50 14          	mov    %dx,0x14(%rax)
    17c7:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17cc:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
    17d2:	48 8b 04 24          	mov    (%rsp),%rax
    17d6:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    17da:	83 c0 01             	add    $0x1,%eax
    17dd:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
    17e2:	0f b7 44 24 26       	movzwl 0x26(%rsp),%eax
    17e7:	48 c1 e0 05          	shl    $0x5,%rax
    17eb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    17f0:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    17f5:	8b 40 10             	mov    0x10(%rax),%eax
    17f8:	89 c0                	mov    %eax,%eax
    17fa:	48 2b 44 24 18       	sub    0x18(%rsp),%rax
    17ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1804:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1809:	89 c2                	mov    %eax,%edx
    180b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1810:	89 50 10             	mov    %edx,0x10(%rax)
    1813:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1818:	48 8b 40 08          	mov    0x8(%rax),%rax
    181c:	48 c1 e8 10          	shr    $0x10,%rax
    1820:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    182a:	48 21 d0             	and    %rdx,%rax
    182d:	48 89 c2             	mov    %rax,%rdx
    1830:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1835:	48 01 c2             	add    %rax,%rdx
    1838:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    1842:	48 89 d1             	mov    %rdx,%rcx
    1845:	48 21 c1             	and    %rax,%rcx
    1848:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    184d:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1857:	48 21 ca             	and    %rcx,%rdx
    185a:	48 c1 e2 10          	shl    $0x10,%rdx
    185e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1862:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    186c:	48 21 f1             	and    %rsi,%rcx
    186f:	48 09 ca             	or     %rcx,%rdx
    1872:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1876:	0f b7 44 24 26       	movzwl 0x26(%rsp),%eax
    187b:	48 c1 e0 05          	shl    $0x5,%rax
    187f:	48 89 c2             	mov    %rax,%rdx
    1882:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1887:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    188b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1890:	48 89 c2             	mov    %rax,%rdx
    1893:	be 00 00 00 00       	mov    $0x0,%esi
    1898:	48 89 cf             	mov    %rcx,%rdi
    189b:	e8 a6 f0 ff ff       	call   946 <Mem_Set>
    18a0:	e9 10 01 00 00       	jmp    19b5 <Heap_Free+0x2e9>
    18a5:	48 8b 04 24          	mov    (%rsp),%rax
    18a9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    18ae:	eb 06                	jmp    18b6 <Heap_Free+0x1ea>
    18b0:	48 83 6c 24 38 20    	subq   $0x20,0x38(%rsp)
    18b6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    18bb:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    18bf:	66 85 c0             	test   %ax,%ax
    18c2:	74 10                	je     18d4 <Heap_Free+0x208>
    18c4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    18c9:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    18cd:	83 e0 40             	and    $0x40,%eax
    18d0:	84 c0                	test   %al,%al
    18d2:	74 dc                	je     18b0 <Heap_Free+0x1e4>
    18d4:	48 8b 04 24          	mov    (%rsp),%rax
    18d8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    18df:	48 8b 04 24          	mov    (%rsp),%rax
    18e3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    18e7:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
    18f1:	48 21 ca             	and    %rcx,%rdx
    18f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    18f8:	48 8b 04 24          	mov    (%rsp),%rax
    18fc:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    1900:	83 ca 40             	or     $0x40,%edx
    1903:	88 50 0f             	mov    %dl,0xf(%rax)
    1906:	48 8b 04 24          	mov    (%rsp),%rax
    190a:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    190e:	83 e2 7f             	and    $0x7f,%edx
    1911:	88 50 0f             	mov    %dl,0xf(%rax)
    1914:	48 8b 04 24          	mov    (%rsp),%rax
    1918:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    191f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1924:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    1928:	48 8b 04 24          	mov    (%rsp),%rax
    192c:	66 89 50 14          	mov    %dx,0x14(%rax)
    1930:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1935:	0f b7 50 16          	movzwl 0x16(%rax),%edx
    1939:	48 8b 04 24          	mov    (%rsp),%rax
    193d:	66 89 50 16          	mov    %dx,0x16(%rax)
    1941:	48 8b 04 24          	mov    (%rsp),%rax
    1945:	66 c7 40 18 00 00    	movw   $0x0,0x18(%rax)
    194b:	48 8b 04 24          	mov    (%rsp),%rax
    194f:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
    1955:	48 8b 04 24          	mov    (%rsp),%rax
    1959:	66 c7 40 1c 00 00    	movw   $0x0,0x1c(%rax)
    195f:	48 8b 04 24          	mov    (%rsp),%rax
    1963:	66 c7 40 1e 00 00    	movw   $0x0,0x1e(%rax)
    1969:	48 8b 04 24          	mov    (%rsp),%rax
    196d:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1971:	0f b7 c0             	movzwl %ax,%eax
    1974:	48 c1 e0 05          	shl    $0x5,%rax
    1978:	48 89 c2             	mov    %rax,%rdx
    197b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1980:	48 01 c2             	add    %rax,%rdx
    1983:	48 8b 04 24          	mov    (%rsp),%rax
    1987:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    198b:	66 89 42 14          	mov    %ax,0x14(%rdx)
    198f:	48 8b 04 24          	mov    (%rsp),%rax
    1993:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1997:	0f b7 c0             	movzwl %ax,%eax
    199a:	48 c1 e0 05          	shl    $0x5,%rax
    199e:	48 89 c2             	mov    %rax,%rdx
    19a1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    19a6:	48 01 c2             	add    %rax,%rdx
    19a9:	48 8b 04 24          	mov    (%rsp),%rax
    19ad:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    19b1:	66 89 42 16          	mov    %ax,0x16(%rdx)
    19b5:	90                   	nop
    19b6:	48 83 c4 48          	add    $0x48,%rsp
    19ba:	c3                   	ret

00000000000019bb <Heap_FreeA>:
    19bb:	48 83 ec 08          	sub    $0x8,%rsp
    19bf:	48 89 3c 24          	mov    %rdi,(%rsp)
    19c3:	48 8b 04 24          	mov    (%rsp),%rax
    19c7:	48 89 c7             	mov    %rax,%rdi
    19ca:	e8 4a f2 ff ff       	call   c19 <Heap_GetHandle>
    19cf:	48 89 c7             	mov    %rax,%rdi
    19d2:	e8 f5 fc ff ff       	call   16cc <Heap_Free>
    19d7:	90                   	nop
    19d8:	48 83 c4 08          	add    $0x8,%rsp
    19dc:	c3                   	ret

00000000000019dd <U64_ToStr>:
    19dd:	48 83 ec 28          	sub    $0x28,%rsp
    19e1:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    19e6:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    19eb:	89 54 24 04          	mov    %edx,0x4(%rsp)
    19ef:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    19f4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    19f9:	c7 44 24 1c 01 00 00 00 	movl   $0x1,0x1c(%rsp)
    1a01:	eb 05                	jmp    1a08 <U64_ToStr+0x2b>
    1a03:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1a08:	8b 74 24 04          	mov    0x4(%rsp),%esi
    1a0c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1a11:	ba 00 00 00 00       	mov    $0x0,%edx
    1a16:	48 f7 f6             	div    %rsi
    1a19:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1a1e:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    1a24:	75 dd                	jne    1a03 <U64_ToStr+0x26>
    1a26:	83 7c 24 04 02       	cmpl   $0x2,0x4(%rsp)
    1a2b:	75 1b                	jne    1a48 <U64_ToStr+0x6b>
    1a2d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a32:	c6 00 30             	movb   $0x30,(%rax)
    1a35:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a3a:	48 83 c0 01          	add    $0x1,%rax
    1a3e:	c6 00 62             	movb   $0x62,(%rax)
    1a41:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1a46:	eb 36                	jmp    1a7e <U64_ToStr+0xa1>
    1a48:	83 7c 24 04 08       	cmpl   $0x8,0x4(%rsp)
    1a4d:	75 0f                	jne    1a5e <U64_ToStr+0x81>
    1a4f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a54:	c6 00 30             	movb   $0x30,(%rax)
    1a57:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1a5c:	eb 20                	jmp    1a7e <U64_ToStr+0xa1>
    1a5e:	83 7c 24 04 10       	cmpl   $0x10,0x4(%rsp)
    1a63:	75 19                	jne    1a7e <U64_ToStr+0xa1>
    1a65:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a6a:	c6 00 30             	movb   $0x30,(%rax)
    1a6d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a72:	48 83 c0 01          	add    $0x1,%rax
    1a76:	c6 00 78             	movb   $0x78,(%rax)
    1a79:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1a7e:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1a82:	8d 50 ff             	lea    -0x1(%rax),%edx
    1a85:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    1a89:	89 c2                	mov    %eax,%edx
    1a8b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a90:	48 01 d0             	add    %rdx,%rax
    1a93:	c6 00 00             	movb   $0x0,(%rax)
    1a96:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    1a9a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1a9f:	ba 00 00 00 00       	mov    $0x0,%edx
    1aa4:	48 f7 f1             	div    %rcx
    1aa7:	48 89 d0             	mov    %rdx,%rax
    1aaa:	88 44 24 1b          	mov    %al,0x1b(%rsp)
    1aae:	0f b6 4c 24 1b       	movzbl 0x1b(%rsp),%ecx
    1ab3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1ab7:	8d 50 ff             	lea    -0x1(%rax),%edx
    1aba:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    1abe:	89 c2                	mov    %eax,%edx
    1ac0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1ac5:	48 01 c2             	add    %rax,%rdx
    1ac8:	48 63 c1             	movslq %ecx,%rax
    1acb:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 1ad2 <U64_ToStr+0xf5>	1ace: R_X86_64_PC32	.data-0x4
    1ad2:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    1ad6:	88 02                	mov    %al,(%rdx)
    1ad8:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1adc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1ae1:	ba 00 00 00 00       	mov    $0x0,%edx
    1ae6:	48 f7 f7             	div    %rdi
    1ae9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1aee:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    1af4:	75 a0                	jne    1a96 <U64_ToStr+0xb9>
    1af6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1afb:	48 83 c4 28          	add    $0x28,%rsp
    1aff:	c3                   	ret

0000000000001b00 <Serial_Init>:
    1b00:	48 83 ec 38          	sub    $0x38,%rsp
    1b04:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1b08:	48 89 34 24          	mov    %rsi,(%rsp)
    1b0c:	66 c7 44 24 10 f8 03 	movw   $0x3f8,0x10(%rsp)
    1b13:	66 c7 44 24 12 f8 02 	movw   $0x2f8,0x12(%rsp)
    1b1a:	66 c7 44 24 14 e8 03 	movw   $0x3e8,0x14(%rsp)
    1b21:	66 c7 44 24 16 e8 02 	movw   $0x2e8,0x16(%rsp)
    1b28:	66 c7 44 24 18 f8 05 	movw   $0x5f8,0x18(%rsp)
    1b2f:	66 c7 44 24 1a f8 04 	movw   $0x4f8,0x1a(%rsp)
    1b36:	66 c7 44 24 1c e8 05 	movw   $0x5e8,0x1c(%rsp)
    1b3d:	66 c7 44 24 1e e8 04 	movw   $0x4e8,0x1e(%rsp)
    1b44:	c7 44 24 2c 00 00 00 00 	movl   $0x0,0x2c(%rsp)
    1b4c:	e9 49 01 00 00       	jmp    1c9a <Serial_Init+0x19a>
    1b51:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b55:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1b5a:	83 c0 01             	add    $0x1,%eax
    1b5d:	0f b7 c0             	movzwl %ax,%eax
    1b60:	be 00 00 00 00       	mov    $0x0,%esi
    1b65:	89 c7                	mov    %eax,%edi
    1b67:	e8 00 00 00 00       	call   1b6c <Serial_Init+0x6c>	1b68: R_X86_64_PLT32	PortOut08-0x4
    1b6c:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b70:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1b75:	83 c0 03             	add    $0x3,%eax
    1b78:	0f b7 c0             	movzwl %ax,%eax
    1b7b:	be 80 00 00 00       	mov    $0x80,%esi
    1b80:	89 c7                	mov    %eax,%edi
    1b82:	e8 00 00 00 00       	call   1b87 <Serial_Init+0x87>	1b83: R_X86_64_PLT32	PortOut08-0x4
    1b87:	b8 00 c2 01 00       	mov    $0x1c200,%eax
    1b8c:	ba 00 00 00 00       	mov    $0x0,%edx
    1b91:	f7 74 24 0c          	divl   0xc(%rsp)
    1b95:	0f b6 d0             	movzbl %al,%edx
    1b98:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b9c:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1ba1:	0f b7 c0             	movzwl %ax,%eax
    1ba4:	89 d6                	mov    %edx,%esi
    1ba6:	89 c7                	mov    %eax,%edi
    1ba8:	e8 00 00 00 00       	call   1bad <Serial_Init+0xad>	1ba9: R_X86_64_PLT32	PortOut08-0x4
    1bad:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1bb1:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bb6:	83 c0 01             	add    $0x1,%eax
    1bb9:	0f b7 c0             	movzwl %ax,%eax
    1bbc:	be 00 00 00 00       	mov    $0x0,%esi
    1bc1:	89 c7                	mov    %eax,%edi
    1bc3:	e8 00 00 00 00       	call   1bc8 <Serial_Init+0xc8>	1bc4: R_X86_64_PLT32	PortOut08-0x4
    1bc8:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1bcc:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bd1:	83 c0 03             	add    $0x3,%eax
    1bd4:	0f b7 c0             	movzwl %ax,%eax
    1bd7:	be 03 00 00 00       	mov    $0x3,%esi
    1bdc:	89 c7                	mov    %eax,%edi
    1bde:	e8 00 00 00 00       	call   1be3 <Serial_Init+0xe3>	1bdf: R_X86_64_PLT32	PortOut08-0x4
    1be3:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1be7:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bec:	83 c0 02             	add    $0x2,%eax
    1bef:	0f b7 c0             	movzwl %ax,%eax
    1bf2:	be c7 00 00 00       	mov    $0xc7,%esi
    1bf7:	89 c7                	mov    %eax,%edi
    1bf9:	e8 00 00 00 00       	call   1bfe <Serial_Init+0xfe>	1bfa: R_X86_64_PLT32	PortOut08-0x4
    1bfe:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c02:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c07:	83 c0 04             	add    $0x4,%eax
    1c0a:	0f b7 c0             	movzwl %ax,%eax
    1c0d:	be 0b 00 00 00       	mov    $0xb,%esi
    1c12:	89 c7                	mov    %eax,%edi
    1c14:	e8 00 00 00 00       	call   1c19 <Serial_Init+0x119>	1c15: R_X86_64_PLT32	PortOut08-0x4
    1c19:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c1d:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c22:	83 c0 04             	add    $0x4,%eax
    1c25:	0f b7 c0             	movzwl %ax,%eax
    1c28:	be 1e 00 00 00       	mov    $0x1e,%esi
    1c2d:	89 c7                	mov    %eax,%edi
    1c2f:	e8 00 00 00 00       	call   1c34 <Serial_Init+0x134>	1c30: R_X86_64_PLT32	PortOut08-0x4
    1c34:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c38:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c3d:	0f b7 c0             	movzwl %ax,%eax
    1c40:	be ae 00 00 00       	mov    $0xae,%esi
    1c45:	89 c7                	mov    %eax,%edi
    1c47:	e8 00 00 00 00       	call   1c4c <Serial_Init+0x14c>	1c48: R_X86_64_PLT32	PortOut08-0x4
    1c4c:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c50:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c55:	0f b7 c0             	movzwl %ax,%eax
    1c58:	89 c7                	mov    %eax,%edi
    1c5a:	e8 00 00 00 00       	call   1c5f <Serial_Init+0x15f>	1c5b: R_X86_64_PLT32	PortIn08-0x4
    1c5f:	3c ae                	cmp    $0xae,%al
    1c61:	75 32                	jne    1c95 <Serial_Init+0x195>
    1c63:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c67:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c6c:	83 c0 04             	add    $0x4,%eax
    1c6f:	0f b7 c0             	movzwl %ax,%eax
    1c72:	be 0f 00 00 00       	mov    $0xf,%esi
    1c77:	89 c7                	mov    %eax,%edi
    1c79:	e8 00 00 00 00       	call   1c7e <Serial_Init+0x17e>	1c7a: R_X86_64_PLT32	PortOut08-0x4
    1c7e:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c82:	0f b7 54 44 10       	movzwl 0x10(%rsp,%rax,2),%edx
    1c87:	48 8b 04 24          	mov    (%rsp),%rax
    1c8b:	66 89 10             	mov    %dx,(%rax)
    1c8e:	b8 00 00 00 00       	mov    $0x0,%eax
    1c93:	eb 15                	jmp    1caa <Serial_Init+0x1aa>
    1c95:	83 44 24 2c 01       	addl   $0x1,0x2c(%rsp)
    1c9a:	83 7c 24 2c 06       	cmpl   $0x6,0x2c(%rsp)
    1c9f:	0f 86 ac fe ff ff    	jbe    1b51 <Serial_Init+0x51>
    1ca5:	b8 01 00 00 00       	mov    $0x1,%eax
    1caa:	48 83 c4 38          	add    $0x38,%rsp
    1cae:	c3                   	ret

0000000000001caf <Serial_ReadChar>:
    1caf:	48 83 ec 18          	sub    $0x18,%rsp
    1cb3:	89 f8                	mov    %edi,%eax
    1cb5:	48 89 34 24          	mov    %rsi,(%rsp)
    1cb9:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1cbe:	90                   	nop
    1cbf:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1cc4:	83 c0 05             	add    $0x5,%eax
    1cc7:	0f b7 c0             	movzwl %ax,%eax
    1cca:	89 c7                	mov    %eax,%edi
    1ccc:	e8 00 00 00 00       	call   1cd1 <Serial_ReadChar+0x22>	1ccd: R_X86_64_PLT32	PortIn08-0x4
    1cd1:	0f b6 c0             	movzbl %al,%eax
    1cd4:	83 e0 01             	and    $0x1,%eax
    1cd7:	85 c0                	test   %eax,%eax
    1cd9:	74 e4                	je     1cbf <Serial_ReadChar+0x10>
    1cdb:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1ce0:	89 c7                	mov    %eax,%edi
    1ce2:	e8 00 00 00 00       	call   1ce7 <Serial_ReadChar+0x38>	1ce3: R_X86_64_PLT32	PortIn08-0x4
    1ce7:	48 8b 14 24          	mov    (%rsp),%rdx
    1ceb:	88 02                	mov    %al,(%rdx)
    1ced:	90                   	nop
    1cee:	48 83 c4 18          	add    $0x18,%rsp
    1cf2:	c3                   	ret

0000000000001cf3 <Serial_WriteChar>:
    1cf3:	48 83 ec 18          	sub    $0x18,%rsp
    1cf7:	89 fa                	mov    %edi,%edx
    1cf9:	89 f0                	mov    %esi,%eax
    1cfb:	66 89 54 24 0c       	mov    %dx,0xc(%rsp)
    1d00:	88 44 24 08          	mov    %al,0x8(%rsp)
    1d04:	90                   	nop
    1d05:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d0a:	83 c0 05             	add    $0x5,%eax
    1d0d:	0f b7 c0             	movzwl %ax,%eax
    1d10:	89 c7                	mov    %eax,%edi
    1d12:	e8 00 00 00 00       	call   1d17 <Serial_WriteChar+0x24>	1d13: R_X86_64_PLT32	PortIn08-0x4
    1d17:	0f b6 c0             	movzbl %al,%eax
    1d1a:	83 e0 20             	and    $0x20,%eax
    1d1d:	85 c0                	test   %eax,%eax
    1d1f:	74 e4                	je     1d05 <Serial_WriteChar+0x12>
    1d21:	0f b6 54 24 08       	movzbl 0x8(%rsp),%edx
    1d26:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d2b:	89 d6                	mov    %edx,%esi
    1d2d:	89 c7                	mov    %eax,%edi
    1d2f:	e8 00 00 00 00       	call   1d34 <Serial_WriteChar+0x41>	1d30: R_X86_64_PLT32	PortOut08-0x4
    1d34:	90                   	nop
    1d35:	48 83 c4 18          	add    $0x18,%rsp
    1d39:	c3                   	ret

0000000000001d3a <Serial_ReadLine>:
    1d3a:	48 83 ec 28          	sub    $0x28,%rsp
    1d3e:	89 f8                	mov    %edi,%eax
    1d40:	48 89 34 24          	mov    %rsi,(%rsp)
    1d44:	89 54 24 08          	mov    %edx,0x8(%rsp)
    1d48:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1d4d:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    1d55:	e9 88 00 00 00       	jmp    1de2 <Serial_ReadLine+0xa8>
    1d5a:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1d5e:	48 8b 04 24          	mov    (%rsp),%rax
    1d62:	48 01 c2             	add    %rax,%rdx
    1d65:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d6a:	48 89 d6             	mov    %rdx,%rsi
    1d6d:	89 c7                	mov    %eax,%edi
    1d6f:	e8 3b ff ff ff       	call   1caf <Serial_ReadChar>
    1d74:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1d78:	48 8b 04 24          	mov    (%rsp),%rax
    1d7c:	48 01 d0             	add    %rdx,%rax
    1d7f:	0f b6 00             	movzbl (%rax),%eax
    1d82:	0f b6 d0             	movzbl %al,%edx
    1d85:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d8a:	89 d6                	mov    %edx,%esi
    1d8c:	89 c7                	mov    %eax,%edi
    1d8e:	e8 60 ff ff ff       	call   1cf3 <Serial_WriteChar>
    1d93:	8b 44 24 08          	mov    0x8(%rsp),%eax
    1d97:	83 e8 02             	sub    $0x2,%eax
    1d9a:	39 44 24 1c          	cmp    %eax,0x1c(%rsp)
    1d9e:	73 3d                	jae    1ddd <Serial_ReadLine+0xa3>
    1da0:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1da4:	48 8b 04 24          	mov    (%rsp),%rax
    1da8:	48 01 d0             	add    %rdx,%rax
    1dab:	0f b6 00             	movzbl (%rax),%eax
    1dae:	3c 0d                	cmp    $0xd,%al
    1db0:	75 2b                	jne    1ddd <Serial_ReadLine+0xa3>
    1db2:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1db7:	be 0a 00 00 00       	mov    $0xa,%esi
    1dbc:	89 c7                	mov    %eax,%edi
    1dbe:	e8 30 ff ff ff       	call   1cf3 <Serial_WriteChar>
    1dc3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1dc7:	83 c0 01             	add    $0x1,%eax
    1dca:	89 c2                	mov    %eax,%edx
    1dcc:	48 8b 04 24          	mov    (%rsp),%rax
    1dd0:	48 01 d0             	add    %rdx,%rax
    1dd3:	c6 00 0a             	movb   $0xa,(%rax)
    1dd6:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1ddb:	eb 16                	jmp    1df3 <Serial_ReadLine+0xb9>
    1ddd:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1de2:	8b 44 24 08          	mov    0x8(%rsp),%eax
    1de6:	83 e8 01             	sub    $0x1,%eax
    1de9:	39 44 24 1c          	cmp    %eax,0x1c(%rsp)
    1ded:	0f 82 67 ff ff ff    	jb     1d5a <Serial_ReadLine+0x20>
    1df3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1df7:	48 8b 04 24          	mov    (%rsp),%rax
    1dfb:	48 01 d0             	add    %rdx,%rax
    1dfe:	c6 00 00             	movb   $0x0,(%rax)
    1e01:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1e05:	48 83 c4 28          	add    $0x28,%rsp
    1e09:	c3                   	ret

0000000000001e0a <Serial_Write>:
    1e0a:	48 83 ec 18          	sub    $0x18,%rsp
    1e0e:	89 f8                	mov    %edi,%eax
    1e10:	48 89 34 24          	mov    %rsi,(%rsp)
    1e14:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1e19:	eb 20                	jmp    1e3b <Serial_Write+0x31>
    1e1b:	48 8b 04 24          	mov    (%rsp),%rax
    1e1f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1e23:	48 89 14 24          	mov    %rdx,(%rsp)
    1e27:	0f b6 00             	movzbl (%rax),%eax
    1e2a:	0f b6 d0             	movzbl %al,%edx
    1e2d:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1e32:	89 d6                	mov    %edx,%esi
    1e34:	89 c7                	mov    %eax,%edi
    1e36:	e8 b8 fe ff ff       	call   1cf3 <Serial_WriteChar>
    1e3b:	48 8b 04 24          	mov    (%rsp),%rax
    1e3f:	0f b6 00             	movzbl (%rax),%eax
    1e42:	84 c0                	test   %al,%al
    1e44:	75 d5                	jne    1e1b <Serial_Write+0x11>
    1e46:	90                   	nop
    1e47:	90                   	nop
    1e48:	48 83 c4 18          	add    $0x18,%rsp
    1e4c:	c3                   	ret

0000000000001e4d <Exception_DivideByZero>:
    1e4d:	48 83 ec 08          	sub    $0x8,%rsp
    1e51:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1e58 <Exception_DivideByZero+0xb>	1e54: R_X86_64_PC32	.bss+0x814
    1e58:	0f b7 c0             	movzwl %ax,%eax
    1e5b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e62 <Exception_DivideByZero+0x15>	1e5e: R_X86_64_PC32	.rodata-0x4
    1e62:	48 89 d6             	mov    %rdx,%rsi
    1e65:	89 c7                	mov    %eax,%edi
    1e67:	e8 9e ff ff ff       	call   1e0a <Serial_Write>
    1e6c:	90                   	nop
    1e6d:	48 83 c4 08          	add    $0x8,%rsp
    1e71:	c3                   	ret

0000000000001e72 <Exception_Debug>:
    1e72:	48 83 ec 08          	sub    $0x8,%rsp
    1e76:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1e7d <Exception_Debug+0xb>	1e79: R_X86_64_PC32	.bss+0x814
    1e7d:	0f b7 c0             	movzwl %ax,%eax
    1e80:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e87 <Exception_Debug+0x15>	1e83: R_X86_64_PC32	.rodata-0x4
    1e87:	48 89 d6             	mov    %rdx,%rsi
    1e8a:	89 c7                	mov    %eax,%edi
    1e8c:	e8 79 ff ff ff       	call   1e0a <Serial_Write>
    1e91:	90                   	nop
    1e92:	48 83 c4 08          	add    $0x8,%rsp
    1e96:	c3                   	ret

0000000000001e97 <Exception_NonMaskableInterrupt>:
    1e97:	48 83 ec 08          	sub    $0x8,%rsp
    1e9b:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1ea2 <Exception_NonMaskableInterrupt+0xb>	1e9e: R_X86_64_PC32	.bss+0x814
    1ea2:	0f b7 c0             	movzwl %ax,%eax
    1ea5:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1eac <Exception_NonMaskableInterrupt+0x15>	1ea8: R_X86_64_PC32	.rodata-0x4
    1eac:	48 89 d6             	mov    %rdx,%rsi
    1eaf:	89 c7                	mov    %eax,%edi
    1eb1:	e8 54 ff ff ff       	call   1e0a <Serial_Write>
    1eb6:	90                   	nop
    1eb7:	48 83 c4 08          	add    $0x8,%rsp
    1ebb:	c3                   	ret

0000000000001ebc <Exception_Breakpoint>:
    1ebc:	48 83 ec 08          	sub    $0x8,%rsp
    1ec0:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1ec7 <Exception_Breakpoint+0xb>	1ec3: R_X86_64_PC32	.bss+0x814
    1ec7:	0f b7 c0             	movzwl %ax,%eax
    1eca:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1ed1 <Exception_Breakpoint+0x15>	1ecd: R_X86_64_PC32	.rodata-0x4
    1ed1:	48 89 d6             	mov    %rdx,%rsi
    1ed4:	89 c7                	mov    %eax,%edi
    1ed6:	e8 2f ff ff ff       	call   1e0a <Serial_Write>
    1edb:	90                   	nop
    1edc:	48 83 c4 08          	add    $0x8,%rsp
    1ee0:	c3                   	ret

0000000000001ee1 <Exception_Overflow>:
    1ee1:	48 83 ec 08          	sub    $0x8,%rsp
    1ee5:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1eec <Exception_Overflow+0xb>	1ee8: R_X86_64_PC32	.bss+0x814
    1eec:	0f b7 c0             	movzwl %ax,%eax
    1eef:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1ef6 <Exception_Overflow+0x15>	1ef2: R_X86_64_PC32	.rodata-0x4
    1ef6:	48 89 d6             	mov    %rdx,%rsi
    1ef9:	89 c7                	mov    %eax,%edi
    1efb:	e8 0a ff ff ff       	call   1e0a <Serial_Write>
    1f00:	90                   	nop
    1f01:	48 83 c4 08          	add    $0x8,%rsp
    1f05:	c3                   	ret

0000000000001f06 <Exception_BoundsCheck>:
    1f06:	48 83 ec 08          	sub    $0x8,%rsp
    1f0a:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f11 <Exception_BoundsCheck+0xb>	1f0d: R_X86_64_PC32	.bss+0x814
    1f11:	0f b7 c0             	movzwl %ax,%eax
    1f14:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f1b <Exception_BoundsCheck+0x15>	1f17: R_X86_64_PC32	.rodata-0x4
    1f1b:	48 89 d6             	mov    %rdx,%rsi
    1f1e:	89 c7                	mov    %eax,%edi
    1f20:	e8 e5 fe ff ff       	call   1e0a <Serial_Write>
    1f25:	90                   	nop
    1f26:	48 83 c4 08          	add    $0x8,%rsp
    1f2a:	c3                   	ret

0000000000001f2b <Exception_InvalidOpcode>:
    1f2b:	48 83 ec 08          	sub    $0x8,%rsp
    1f2f:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f36 <Exception_InvalidOpcode+0xb>	1f32: R_X86_64_PC32	.bss+0x814
    1f36:	0f b7 c0             	movzwl %ax,%eax
    1f39:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f40 <Exception_InvalidOpcode+0x15>	1f3c: R_X86_64_PC32	.rodata-0x4
    1f40:	48 89 d6             	mov    %rdx,%rsi
    1f43:	89 c7                	mov    %eax,%edi
    1f45:	e8 c0 fe ff ff       	call   1e0a <Serial_Write>
    1f4a:	90                   	nop
    1f4b:	48 83 c4 08          	add    $0x8,%rsp
    1f4f:	c3                   	ret

0000000000001f50 <Exception_DeviceNotAvailable>:
    1f50:	48 83 ec 08          	sub    $0x8,%rsp
    1f54:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f5b <Exception_DeviceNotAvailable+0xb>	1f57: R_X86_64_PC32	.bss+0x814
    1f5b:	0f b7 c0             	movzwl %ax,%eax
    1f5e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f65 <Exception_DeviceNotAvailable+0x15>	1f61: R_X86_64_PC32	.rodata-0x4
    1f65:	48 89 d6             	mov    %rdx,%rsi
    1f68:	89 c7                	mov    %eax,%edi
    1f6a:	e8 9b fe ff ff       	call   1e0a <Serial_Write>
    1f6f:	90                   	nop
    1f70:	48 83 c4 08          	add    $0x8,%rsp
    1f74:	c3                   	ret

0000000000001f75 <Exception_DoubleFault>:
    1f75:	48 83 ec 18          	sub    $0x18,%rsp
    1f79:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1f7d:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f84 <Exception_DoubleFault+0xf>	1f80: R_X86_64_PC32	.bss+0x814
    1f84:	0f b7 c0             	movzwl %ax,%eax
    1f87:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f8e <Exception_DoubleFault+0x19>	1f8a: R_X86_64_PC32	.rodata-0x4
    1f8e:	48 89 d6             	mov    %rdx,%rsi
    1f91:	89 c7                	mov    %eax,%edi
    1f93:	e8 72 fe ff ff       	call   1e0a <Serial_Write>
    1f98:	90                   	nop
    1f99:	48 83 c4 18          	add    $0x18,%rsp
    1f9d:	c3                   	ret

0000000000001f9e <Exception_InvalidTSS>:
    1f9e:	48 83 ec 18          	sub    $0x18,%rsp
    1fa2:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1fa6:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fad <Exception_InvalidTSS+0xf>	1fa9: R_X86_64_PC32	.bss+0x814
    1fad:	0f b7 c0             	movzwl %ax,%eax
    1fb0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1fb7 <Exception_InvalidTSS+0x19>	1fb3: R_X86_64_PC32	.rodata-0x4
    1fb7:	48 89 d6             	mov    %rdx,%rsi
    1fba:	89 c7                	mov    %eax,%edi
    1fbc:	e8 49 fe ff ff       	call   1e0a <Serial_Write>
    1fc1:	90                   	nop
    1fc2:	48 83 c4 18          	add    $0x18,%rsp
    1fc6:	c3                   	ret

0000000000001fc7 <Exception_SegmentNotPresent>:
    1fc7:	48 83 ec 18          	sub    $0x18,%rsp
    1fcb:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1fcf:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fd6 <Exception_SegmentNotPresent+0xf>	1fd2: R_X86_64_PC32	.bss+0x814
    1fd6:	0f b7 c0             	movzwl %ax,%eax
    1fd9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1fe0 <Exception_SegmentNotPresent+0x19>	1fdc: R_X86_64_PC32	.rodata-0x4
    1fe0:	48 89 d6             	mov    %rdx,%rsi
    1fe3:	89 c7                	mov    %eax,%edi
    1fe5:	e8 20 fe ff ff       	call   1e0a <Serial_Write>
    1fea:	90                   	nop
    1feb:	48 83 c4 18          	add    $0x18,%rsp
    1fef:	c3                   	ret

0000000000001ff0 <Exception_StackSegmentFault>:
    1ff0:	48 83 ec 18          	sub    $0x18,%rsp
    1ff4:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1ff8:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fff <Exception_StackSegmentFault+0xf>	1ffb: R_X86_64_PC32	.bss+0x814
    1fff:	0f b7 c0             	movzwl %ax,%eax
    2002:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2009 <Exception_StackSegmentFault+0x19>	2005: R_X86_64_PC32	.rodata-0x4
    2009:	48 89 d6             	mov    %rdx,%rsi
    200c:	89 c7                	mov    %eax,%edi
    200e:	e8 f7 fd ff ff       	call   1e0a <Serial_Write>
    2013:	90                   	nop
    2014:	48 83 c4 18          	add    $0x18,%rsp
    2018:	c3                   	ret

0000000000002019 <Exception_GeneralProtection>:
    2019:	48 83 ec 18          	sub    $0x18,%rsp
    201d:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2021:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2028 <Exception_GeneralProtection+0xf>	2024: R_X86_64_PC32	.bss+0x814
    2028:	0f b7 c0             	movzwl %ax,%eax
    202b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2032 <Exception_GeneralProtection+0x19>	202e: R_X86_64_PC32	.rodata-0x4
    2032:	48 89 d6             	mov    %rdx,%rsi
    2035:	89 c7                	mov    %eax,%edi
    2037:	e8 ce fd ff ff       	call   1e0a <Serial_Write>
    203c:	90                   	nop
    203d:	48 83 c4 18          	add    $0x18,%rsp
    2041:	c3                   	ret

0000000000002042 <Exception_PageFault>:
    2042:	48 83 ec 18          	sub    $0x18,%rsp
    2046:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    204a:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2051 <Exception_PageFault+0xf>	204d: R_X86_64_PC32	.bss+0x814
    2051:	0f b7 c0             	movzwl %ax,%eax
    2054:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 205b <Exception_PageFault+0x19>	2057: R_X86_64_PC32	.rodata-0x4
    205b:	48 89 d6             	mov    %rdx,%rsi
    205e:	89 c7                	mov    %eax,%edi
    2060:	e8 a5 fd ff ff       	call   1e0a <Serial_Write>
    2065:	90                   	nop
    2066:	48 83 c4 18          	add    $0x18,%rsp
    206a:	c3                   	ret

000000000000206b <Exception_FloatingPoint>:
    206b:	48 83 ec 08          	sub    $0x8,%rsp
    206f:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2076 <Exception_FloatingPoint+0xb>	2072: R_X86_64_PC32	.bss+0x814
    2076:	0f b7 c0             	movzwl %ax,%eax
    2079:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2080 <Exception_FloatingPoint+0x15>	207c: R_X86_64_PC32	.rodata-0x4
    2080:	48 89 d6             	mov    %rdx,%rsi
    2083:	89 c7                	mov    %eax,%edi
    2085:	e8 80 fd ff ff       	call   1e0a <Serial_Write>
    208a:	90                   	nop
    208b:	48 83 c4 08          	add    $0x8,%rsp
    208f:	c3                   	ret

0000000000002090 <Exception_AlignmentCheck>:
    2090:	48 83 ec 18          	sub    $0x18,%rsp
    2094:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2098:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 209f <Exception_AlignmentCheck+0xf>	209b: R_X86_64_PC32	.bss+0x814
    209f:	0f b7 c0             	movzwl %ax,%eax
    20a2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20a9 <Exception_AlignmentCheck+0x19>	20a5: R_X86_64_PC32	.rodata-0x4
    20a9:	48 89 d6             	mov    %rdx,%rsi
    20ac:	89 c7                	mov    %eax,%edi
    20ae:	e8 57 fd ff ff       	call   1e0a <Serial_Write>
    20b3:	90                   	nop
    20b4:	48 83 c4 18          	add    $0x18,%rsp
    20b8:	c3                   	ret

00000000000020b9 <Exception_MachineCheck>:
    20b9:	48 83 ec 08          	sub    $0x8,%rsp
    20bd:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 20c4 <Exception_MachineCheck+0xb>	20c0: R_X86_64_PC32	.bss+0x814
    20c4:	0f b7 c0             	movzwl %ax,%eax
    20c7:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20ce <Exception_MachineCheck+0x15>	20ca: R_X86_64_PC32	.rodata-0x4
    20ce:	48 89 d6             	mov    %rdx,%rsi
    20d1:	89 c7                	mov    %eax,%edi
    20d3:	e8 32 fd ff ff       	call   1e0a <Serial_Write>
    20d8:	90                   	nop
    20d9:	48 83 c4 08          	add    $0x8,%rsp
    20dd:	c3                   	ret

00000000000020de <Exception_SIMDFloatingPoint>:
    20de:	48 83 ec 08          	sub    $0x8,%rsp
    20e2:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 20e9 <Exception_SIMDFloatingPoint+0xb>	20e5: R_X86_64_PC32	.bss+0x814
    20e9:	0f b7 c0             	movzwl %ax,%eax
    20ec:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20f3 <Exception_SIMDFloatingPoint+0x15>	20ef: R_X86_64_PC32	.rodata-0x4
    20f3:	48 89 d6             	mov    %rdx,%rsi
    20f6:	89 c7                	mov    %eax,%edi
    20f8:	e8 0d fd ff ff       	call   1e0a <Serial_Write>
    20fd:	90                   	nop
    20fe:	48 83 c4 08          	add    $0x8,%rsp
    2102:	c3                   	ret

0000000000002103 <Exception_Virtualization>:
    2103:	48 83 ec 08          	sub    $0x8,%rsp
    2107:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 210e <Exception_Virtualization+0xb>	210a: R_X86_64_PC32	.bss+0x814
    210e:	0f b7 c0             	movzwl %ax,%eax
    2111:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2118 <Exception_Virtualization+0x15>	2114: R_X86_64_PC32	.rodata-0x4
    2118:	48 89 d6             	mov    %rdx,%rsi
    211b:	89 c7                	mov    %eax,%edi
    211d:	e8 e8 fc ff ff       	call   1e0a <Serial_Write>
    2122:	90                   	nop
    2123:	48 83 c4 08          	add    $0x8,%rsp
    2127:	c3                   	ret

0000000000002128 <Exception_ControlProtection>:
    2128:	48 83 ec 18          	sub    $0x18,%rsp
    212c:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2130:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2137 <Exception_ControlProtection+0xf>	2133: R_X86_64_PC32	.bss+0x814
    2137:	0f b7 c0             	movzwl %ax,%eax
    213a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2141 <Exception_ControlProtection+0x19>	213d: R_X86_64_PC32	.rodata-0x4
    2141:	48 89 d6             	mov    %rdx,%rsi
    2144:	89 c7                	mov    %eax,%edi
    2146:	e8 bf fc ff ff       	call   1e0a <Serial_Write>
    214b:	90                   	nop
    214c:	48 83 c4 18          	add    $0x18,%rsp
    2150:	c3                   	ret

0000000000002151 <Exception_HypervisorInjection>:
    2151:	48 83 ec 08          	sub    $0x8,%rsp
    2155:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 215c <Exception_HypervisorInjection+0xb>	2158: R_X86_64_PC32	.bss+0x814
    215c:	0f b7 c0             	movzwl %ax,%eax
    215f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2166 <Exception_HypervisorInjection+0x15>	2162: R_X86_64_PC32	.rodata-0x4
    2166:	48 89 d6             	mov    %rdx,%rsi
    2169:	89 c7                	mov    %eax,%edi
    216b:	e8 9a fc ff ff       	call   1e0a <Serial_Write>
    2170:	90                   	nop
    2171:	48 83 c4 08          	add    $0x8,%rsp
    2175:	c3                   	ret

0000000000002176 <Exception_VMMCommunication>:
    2176:	48 83 ec 18          	sub    $0x18,%rsp
    217a:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    217e:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2185 <Exception_VMMCommunication+0xf>	2181: R_X86_64_PC32	.bss+0x814
    2185:	0f b7 c0             	movzwl %ax,%eax
    2188:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 218f <Exception_VMMCommunication+0x19>	218b: R_X86_64_PC32	.rodata-0x4
    218f:	48 89 d6             	mov    %rdx,%rsi
    2192:	89 c7                	mov    %eax,%edi
    2194:	e8 71 fc ff ff       	call   1e0a <Serial_Write>
    2199:	90                   	nop
    219a:	48 83 c4 18          	add    $0x18,%rsp
    219e:	c3                   	ret

000000000000219f <Exception_Security>:
    219f:	48 83 ec 18          	sub    $0x18,%rsp
    21a3:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    21a7:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 21ae <Exception_Security+0xf>	21aa: R_X86_64_PC32	.bss+0x814
    21ae:	0f b7 c0             	movzwl %ax,%eax
    21b1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 21b8 <Exception_Security+0x19>	21b4: R_X86_64_PC32	.rodata-0x4
    21b8:	48 89 d6             	mov    %rdx,%rsi
    21bb:	89 c7                	mov    %eax,%edi
    21bd:	e8 48 fc ff ff       	call   1e0a <Serial_Write>
    21c2:	90                   	nop
    21c3:	48 83 c4 18          	add    $0x18,%rsp
    21c7:	c3                   	ret

00000000000021c8 <GDT_Init>:
    21c8:	48 83 ec 38          	sub    $0x38,%rsp
    21cc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    21d1:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    21d6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    21db:	48 89 0c 24          	mov    %rcx,(%rsp)
    21df:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    21e4:	ba 28 00 00 00       	mov    $0x28,%edx
    21e9:	be 00 00 00 00       	mov    $0x0,%esi
    21ee:	48 89 c7             	mov    %rax,%rdi
    21f1:	e8 50 e7 ff ff       	call   946 <Mem_Set>
    21f6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    21fb:	c6 40 0d 9a          	movb   $0x9a,0xd(%rax)
    21ff:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2204:	c6 40 0e 20          	movb   $0x20,0xe(%rax)
    2208:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    220d:	c6 40 15 92          	movb   $0x92,0x15(%rax)
    2211:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2216:	c6 40 16 00          	movb   $0x0,0x16(%rax)
    221a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    221f:	66 c7 40 18 6a 00    	movw   $0x6a,0x18(%rax)
    2225:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    222a:	c6 40 1d 89          	movb   $0x89,0x1d(%rax)
    222e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2233:	c6 40 1e 10          	movb   $0x10,0x1e(%rax)
    2237:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    223c:	89 c2                	mov    %eax,%edx
    223e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2243:	66 89 50 1a          	mov    %dx,0x1a(%rax)
    2247:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    224c:	48 c1 e8 10          	shr    $0x10,%rax
    2250:	89 c2                	mov    %eax,%edx
    2252:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2257:	88 50 1c             	mov    %dl,0x1c(%rax)
    225a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    225f:	48 c1 e8 18          	shr    $0x18,%rax
    2263:	89 c2                	mov    %eax,%edx
    2265:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    226a:	88 50 1f             	mov    %dl,0x1f(%rax)
    226d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2272:	48 83 c0 20          	add    $0x20,%rax
    2276:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    227b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2280:	48 c1 e8 20          	shr    $0x20,%rax
    2284:	89 c2                	mov    %eax,%edx
    2286:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    228b:	89 10                	mov    %edx,(%rax)
    228d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2292:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2298:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    229d:	48 8b 00             	mov    (%rax),%rax
    22a0:	89 c2                	mov    %eax,%edx
    22a2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22a7:	89 50 04             	mov    %edx,0x4(%rax)
    22aa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22af:	48 8b 00             	mov    (%rax),%rax
    22b2:	48 c1 f8 20          	sar    $0x20,%rax
    22b6:	89 c2                	mov    %eax,%edx
    22b8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22bd:	89 50 08             	mov    %edx,0x8(%rax)
    22c0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22c5:	48 83 c0 08          	add    $0x8,%rax
    22c9:	48 8b 00             	mov    (%rax),%rax
    22cc:	89 c2                	mov    %eax,%edx
    22ce:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22d3:	89 50 0c             	mov    %edx,0xc(%rax)
    22d6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22db:	48 83 c0 08          	add    $0x8,%rax
    22df:	48 8b 00             	mov    (%rax),%rax
    22e2:	48 c1 f8 20          	sar    $0x20,%rax
    22e6:	89 c2                	mov    %eax,%edx
    22e8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22ed:	89 50 10             	mov    %edx,0x10(%rax)
    22f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22f5:	48 83 c0 10          	add    $0x10,%rax
    22f9:	48 8b 00             	mov    (%rax),%rax
    22fc:	89 c2                	mov    %eax,%edx
    22fe:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2303:	89 50 14             	mov    %edx,0x14(%rax)
    2306:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    230b:	48 83 c0 10          	add    $0x10,%rax
    230f:	48 8b 00             	mov    (%rax),%rax
    2312:	48 c1 f8 20          	sar    $0x20,%rax
    2316:	89 c2                	mov    %eax,%edx
    2318:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    231d:	89 50 18             	mov    %edx,0x18(%rax)
    2320:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2325:	48 c7 40 1c 00 00 00 00 	movq   $0x0,0x1c(%rax)
    232d:	48 8b 04 24          	mov    (%rsp),%rax
    2331:	48 8b 00             	mov    (%rax),%rax
    2334:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    233a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    233f:	89 50 24             	mov    %edx,0x24(%rax)
    2342:	48 8b 04 24          	mov    (%rsp),%rax
    2346:	48 8b 00             	mov    (%rax),%rax
    2349:	48 05 00 10 00 00    	add    $0x1000,%rax
    234f:	48 c1 f8 20          	sar    $0x20,%rax
    2353:	89 c2                	mov    %eax,%edx
    2355:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    235a:	89 50 28             	mov    %edx,0x28(%rax)
    235d:	48 8b 04 24          	mov    (%rsp),%rax
    2361:	48 83 c0 08          	add    $0x8,%rax
    2365:	48 8b 00             	mov    (%rax),%rax
    2368:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    236e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2373:	89 50 2c             	mov    %edx,0x2c(%rax)
    2376:	48 8b 04 24          	mov    (%rsp),%rax
    237a:	48 83 c0 08          	add    $0x8,%rax
    237e:	48 8b 00             	mov    (%rax),%rax
    2381:	48 05 00 10 00 00    	add    $0x1000,%rax
    2387:	48 c1 f8 20          	sar    $0x20,%rax
    238b:	89 c2                	mov    %eax,%edx
    238d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2392:	89 50 30             	mov    %edx,0x30(%rax)
    2395:	48 8b 04 24          	mov    (%rsp),%rax
    2399:	48 83 c0 10          	add    $0x10,%rax
    239d:	48 8b 00             	mov    (%rax),%rax
    23a0:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    23a6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23ab:	89 50 34             	mov    %edx,0x34(%rax)
    23ae:	48 8b 04 24          	mov    (%rsp),%rax
    23b2:	48 83 c0 10          	add    $0x10,%rax
    23b6:	48 8b 00             	mov    (%rax),%rax
    23b9:	48 05 00 10 00 00    	add    $0x1000,%rax
    23bf:	48 c1 f8 20          	sar    $0x20,%rax
    23c3:	89 c2                	mov    %eax,%edx
    23c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23ca:	89 50 38             	mov    %edx,0x38(%rax)
    23cd:	48 8b 04 24          	mov    (%rsp),%rax
    23d1:	48 83 c0 18          	add    $0x18,%rax
    23d5:	48 8b 00             	mov    (%rax),%rax
    23d8:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    23de:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23e3:	89 50 3c             	mov    %edx,0x3c(%rax)
    23e6:	48 8b 04 24          	mov    (%rsp),%rax
    23ea:	48 83 c0 18          	add    $0x18,%rax
    23ee:	48 8b 00             	mov    (%rax),%rax
    23f1:	48 05 00 10 00 00    	add    $0x1000,%rax
    23f7:	48 c1 f8 20          	sar    $0x20,%rax
    23fb:	89 c2                	mov    %eax,%edx
    23fd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2402:	89 50 40             	mov    %edx,0x40(%rax)
    2405:	48 8b 04 24          	mov    (%rsp),%rax
    2409:	48 83 c0 20          	add    $0x20,%rax
    240d:	48 8b 00             	mov    (%rax),%rax
    2410:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    2416:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    241b:	89 50 44             	mov    %edx,0x44(%rax)
    241e:	48 8b 04 24          	mov    (%rsp),%rax
    2422:	48 83 c0 20          	add    $0x20,%rax
    2426:	48 8b 00             	mov    (%rax),%rax
    2429:	48 05 00 10 00 00    	add    $0x1000,%rax
    242f:	48 c1 f8 20          	sar    $0x20,%rax
    2433:	89 c2                	mov    %eax,%edx
    2435:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    243a:	89 50 48             	mov    %edx,0x48(%rax)
    243d:	48 8b 04 24          	mov    (%rsp),%rax
    2441:	48 83 c0 28          	add    $0x28,%rax
    2445:	48 8b 00             	mov    (%rax),%rax
    2448:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    244e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2453:	89 50 4c             	mov    %edx,0x4c(%rax)
    2456:	48 8b 04 24          	mov    (%rsp),%rax
    245a:	48 83 c0 28          	add    $0x28,%rax
    245e:	48 8b 00             	mov    (%rax),%rax
    2461:	48 05 00 10 00 00    	add    $0x1000,%rax
    2467:	48 c1 f8 20          	sar    $0x20,%rax
    246b:	89 c2                	mov    %eax,%edx
    246d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2472:	89 50 50             	mov    %edx,0x50(%rax)
    2475:	48 8b 04 24          	mov    (%rsp),%rax
    2479:	48 83 c0 30          	add    $0x30,%rax
    247d:	48 8b 00             	mov    (%rax),%rax
    2480:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    2486:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    248b:	89 50 54             	mov    %edx,0x54(%rax)
    248e:	48 8b 04 24          	mov    (%rsp),%rax
    2492:	48 83 c0 30          	add    $0x30,%rax
    2496:	48 8b 00             	mov    (%rax),%rax
    2499:	48 05 00 10 00 00    	add    $0x1000,%rax
    249f:	48 c1 f8 20          	sar    $0x20,%rax
    24a3:	89 c2                	mov    %eax,%edx
    24a5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24aa:	89 50 58             	mov    %edx,0x58(%rax)
    24ad:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24b2:	48 c7 40 5c 00 00 00 00 	movq   $0x0,0x5c(%rax)
    24ba:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24bf:	66 c7 40 64 00 00    	movw   $0x0,0x64(%rax)
    24c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24ca:	66 c7 40 66 68 00    	movw   $0x68,0x66(%rax)
    24d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24d5:	66 c7 40 68 ff ff    	movw   $0xffff,0x68(%rax)
    24db:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    24e0:	be 27 00 00 00       	mov    $0x27,%esi
    24e5:	48 89 c7             	mov    %rax,%rdi
    24e8:	e8 00 00 00 00       	call   24ed <GDT_Init+0x325>	24e9: R_X86_64_PLT32	SetGDTR-0x4
    24ed:	bf 18 00 00 00       	mov    $0x18,%edi
    24f2:	e8 00 00 00 00       	call   24f7 <GDT_Init+0x32f>	24f3: R_X86_64_PLT32	SetTR-0x4
    24f7:	90                   	nop
    24f8:	48 83 c4 38          	add    $0x38,%rsp
    24fc:	c3                   	ret

00000000000024fd <IDT_SetEntry>:
    24fd:	48 83 ec 38          	sub    $0x38,%rsp
    2501:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2506:	89 74 24 14          	mov    %esi,0x14(%rsp)
    250a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    250f:	8b 44 24 14          	mov    0x14(%rsp),%eax
    2513:	48 8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%rcx
    251b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2522 <IDT_SetEntry+0x25>	251e: R_X86_64_PC32	InterruptHandlers-0x4
    2522:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2527:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    252b:	e8 00 00 00 00       	call   2530 <IDT_SetEntry+0x33>	252c: R_X86_64_PLT32	GetInterruptStep-0x4
    2530:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2535:	8b 44 24 14          	mov    0x14(%rsp),%eax
    2539:	48 0f af 44 24 28    	imul   0x28(%rsp),%rax
    253f:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2546 <IDT_SetEntry+0x49>	2542: R_X86_64_REX_GOTPCRELX	InterruptSwitch-0x4
    2546:	48 01 d0             	add    %rdx,%rax
    2549:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    254e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2553:	89 c1                	mov    %eax,%ecx
    2555:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    255a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    255e:	48 c1 e2 04          	shl    $0x4,%rdx
    2562:	48 01 d0             	add    %rdx,%rax
    2565:	66 89 08             	mov    %cx,(%rax)
    2568:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    256d:	48 c1 e8 10          	shr    $0x10,%rax
    2571:	89 c1                	mov    %eax,%ecx
    2573:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2578:	8b 54 24 14          	mov    0x14(%rsp),%edx
    257c:	48 c1 e2 04          	shl    $0x4,%rdx
    2580:	48 01 d0             	add    %rdx,%rax
    2583:	48 83 c0 06          	add    $0x6,%rax
    2587:	66 89 08             	mov    %cx,(%rax)
    258a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    258f:	48 c1 e8 20          	shr    $0x20,%rax
    2593:	89 c1                	mov    %eax,%ecx
    2595:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    259a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    259e:	48 c1 e2 04          	shl    $0x4,%rdx
    25a2:	48 01 d0             	add    %rdx,%rax
    25a5:	48 83 c0 08          	add    $0x8,%rax
    25a9:	89 08                	mov    %ecx,(%rax)
    25ab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25b0:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25b4:	48 c1 e2 04          	shl    $0x4,%rdx
    25b8:	48 01 d0             	add    %rdx,%rax
    25bb:	48 83 c0 02          	add    $0x2,%rax
    25bf:	66 c7 00 08 00       	movw   $0x8,(%rax)
    25c4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25c9:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25cd:	48 c1 e2 04          	shl    $0x4,%rdx
    25d1:	48 01 d0             	add    %rdx,%rax
    25d4:	48 83 c0 04          	add    $0x4,%rax
    25d8:	c6 00 00             	movb   $0x0,(%rax)
    25db:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25e0:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25e4:	48 c1 e2 04          	shl    $0x4,%rdx
    25e8:	48 01 d0             	add    %rdx,%rax
    25eb:	48 83 c0 05          	add    $0x5,%rax
    25ef:	c6 00 8e             	movb   $0x8e,(%rax)
    25f2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25f7:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25fb:	48 c1 e2 04          	shl    $0x4,%rdx
    25ff:	48 01 d0             	add    %rdx,%rax
    2602:	48 83 c0 0c          	add    $0xc,%rax
    2606:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    260c:	90                   	nop
    260d:	48 83 c4 38          	add    $0x38,%rsp
    2611:	c3                   	ret

0000000000002612 <IDT_Init>:
    2612:	48 83 ec 18          	sub    $0x18,%rsp
    2616:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    261b:	ba 00 08 00 00       	mov    $0x800,%edx
    2620:	be 00 00 00 00       	mov    $0x0,%esi
    2625:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 262c <IDT_Init+0x1a>	2628: R_X86_64_PC32	InterruptHandlers-0x4
    262c:	48 89 c7             	mov    %rax,%rdi
    262f:	e8 12 e3 ff ff       	call   946 <Mem_Set>
    2634:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2639:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2640 <IDT_Init+0x2e>	263c: R_X86_64_PC32	Exception_DivideByZero-0x4
    2640:	be 00 00 00 00       	mov    $0x0,%esi
    2645:	48 89 c7             	mov    %rax,%rdi
    2648:	e8 b0 fe ff ff       	call   24fd <IDT_SetEntry>
    264d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2652:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2659 <IDT_Init+0x47>	2655: R_X86_64_PC32	Exception_Debug-0x4
    2659:	be 01 00 00 00       	mov    $0x1,%esi
    265e:	48 89 c7             	mov    %rax,%rdi
    2661:	e8 97 fe ff ff       	call   24fd <IDT_SetEntry>
    2666:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    266b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2672 <IDT_Init+0x60>	266e: R_X86_64_PC32	Exception_NonMaskableInterrupt-0x4
    2672:	be 02 00 00 00       	mov    $0x2,%esi
    2677:	48 89 c7             	mov    %rax,%rdi
    267a:	e8 7e fe ff ff       	call   24fd <IDT_SetEntry>
    267f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2684:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 268b <IDT_Init+0x79>	2687: R_X86_64_PC32	Exception_Breakpoint-0x4
    268b:	be 03 00 00 00       	mov    $0x3,%esi
    2690:	48 89 c7             	mov    %rax,%rdi
    2693:	e8 65 fe ff ff       	call   24fd <IDT_SetEntry>
    2698:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    269d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26a4 <IDT_Init+0x92>	26a0: R_X86_64_PC32	Exception_Overflow-0x4
    26a4:	be 04 00 00 00       	mov    $0x4,%esi
    26a9:	48 89 c7             	mov    %rax,%rdi
    26ac:	e8 4c fe ff ff       	call   24fd <IDT_SetEntry>
    26b1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26b6:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26bd <IDT_Init+0xab>	26b9: R_X86_64_PC32	Exception_BoundsCheck-0x4
    26bd:	be 05 00 00 00       	mov    $0x5,%esi
    26c2:	48 89 c7             	mov    %rax,%rdi
    26c5:	e8 33 fe ff ff       	call   24fd <IDT_SetEntry>
    26ca:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26cf:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26d6 <IDT_Init+0xc4>	26d2: R_X86_64_PC32	Exception_InvalidOpcode-0x4
    26d6:	be 06 00 00 00       	mov    $0x6,%esi
    26db:	48 89 c7             	mov    %rax,%rdi
    26de:	e8 1a fe ff ff       	call   24fd <IDT_SetEntry>
    26e3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26e8:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26ef <IDT_Init+0xdd>	26eb: R_X86_64_PC32	Exception_DeviceNotAvailable-0x4
    26ef:	be 07 00 00 00       	mov    $0x7,%esi
    26f4:	48 89 c7             	mov    %rax,%rdi
    26f7:	e8 01 fe ff ff       	call   24fd <IDT_SetEntry>
    26fc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2701:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2708 <IDT_Init+0xf6>	2704: R_X86_64_PC32	Exception_DoubleFault-0x4
    2708:	be 08 00 00 00       	mov    $0x8,%esi
    270d:	48 89 c7             	mov    %rax,%rdi
    2710:	e8 e8 fd ff ff       	call   24fd <IDT_SetEntry>
    2715:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    271a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2721 <IDT_Init+0x10f>	271d: R_X86_64_PC32	Exception_InvalidTSS-0x4
    2721:	be 0a 00 00 00       	mov    $0xa,%esi
    2726:	48 89 c7             	mov    %rax,%rdi
    2729:	e8 cf fd ff ff       	call   24fd <IDT_SetEntry>
    272e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2733:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 273a <IDT_Init+0x128>	2736: R_X86_64_PC32	Exception_SegmentNotPresent-0x4
    273a:	be 0b 00 00 00       	mov    $0xb,%esi
    273f:	48 89 c7             	mov    %rax,%rdi
    2742:	e8 b6 fd ff ff       	call   24fd <IDT_SetEntry>
    2747:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    274c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2753 <IDT_Init+0x141>	274f: R_X86_64_PC32	Exception_StackSegmentFault-0x4
    2753:	be 0c 00 00 00       	mov    $0xc,%esi
    2758:	48 89 c7             	mov    %rax,%rdi
    275b:	e8 9d fd ff ff       	call   24fd <IDT_SetEntry>
    2760:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2765:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 276c <IDT_Init+0x15a>	2768: R_X86_64_PC32	Exception_GeneralProtection-0x4
    276c:	be 0d 00 00 00       	mov    $0xd,%esi
    2771:	48 89 c7             	mov    %rax,%rdi
    2774:	e8 84 fd ff ff       	call   24fd <IDT_SetEntry>
    2779:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    277e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2785 <IDT_Init+0x173>	2781: R_X86_64_PC32	Exception_PageFault-0x4
    2785:	be 0e 00 00 00       	mov    $0xe,%esi
    278a:	48 89 c7             	mov    %rax,%rdi
    278d:	e8 6b fd ff ff       	call   24fd <IDT_SetEntry>
    2792:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2797:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 279e <IDT_Init+0x18c>	279a: R_X86_64_PC32	Exception_FloatingPoint-0x4
    279e:	be 10 00 00 00       	mov    $0x10,%esi
    27a3:	48 89 c7             	mov    %rax,%rdi
    27a6:	e8 52 fd ff ff       	call   24fd <IDT_SetEntry>
    27ab:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27b0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27b7 <IDT_Init+0x1a5>	27b3: R_X86_64_PC32	Exception_AlignmentCheck-0x4
    27b7:	be 11 00 00 00       	mov    $0x11,%esi
    27bc:	48 89 c7             	mov    %rax,%rdi
    27bf:	e8 39 fd ff ff       	call   24fd <IDT_SetEntry>
    27c4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27c9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27d0 <IDT_Init+0x1be>	27cc: R_X86_64_PC32	Exception_MachineCheck-0x4
    27d0:	be 12 00 00 00       	mov    $0x12,%esi
    27d5:	48 89 c7             	mov    %rax,%rdi
    27d8:	e8 20 fd ff ff       	call   24fd <IDT_SetEntry>
    27dd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27e2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27e9 <IDT_Init+0x1d7>	27e5: R_X86_64_PC32	Exception_SIMDFloatingPoint-0x4
    27e9:	be 13 00 00 00       	mov    $0x13,%esi
    27ee:	48 89 c7             	mov    %rax,%rdi
    27f1:	e8 07 fd ff ff       	call   24fd <IDT_SetEntry>
    27f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27fb:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2802 <IDT_Init+0x1f0>	27fe: R_X86_64_PC32	Exception_Virtualization-0x4
    2802:	be 14 00 00 00       	mov    $0x14,%esi
    2807:	48 89 c7             	mov    %rax,%rdi
    280a:	e8 ee fc ff ff       	call   24fd <IDT_SetEntry>
    280f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2814:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 281b <IDT_Init+0x209>	2817: R_X86_64_PC32	Exception_ControlProtection-0x4
    281b:	be 15 00 00 00       	mov    $0x15,%esi
    2820:	48 89 c7             	mov    %rax,%rdi
    2823:	e8 d5 fc ff ff       	call   24fd <IDT_SetEntry>
    2828:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    282d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2834 <IDT_Init+0x222>	2830: R_X86_64_PC32	Exception_HypervisorInjection-0x4
    2834:	be 1c 00 00 00       	mov    $0x1c,%esi
    2839:	48 89 c7             	mov    %rax,%rdi
    283c:	e8 bc fc ff ff       	call   24fd <IDT_SetEntry>
    2841:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2846:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 284d <IDT_Init+0x23b>	2849: R_X86_64_PC32	Exception_VMMCommunication-0x4
    284d:	be 1d 00 00 00       	mov    $0x1d,%esi
    2852:	48 89 c7             	mov    %rax,%rdi
    2855:	e8 a3 fc ff ff       	call   24fd <IDT_SetEntry>
    285a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    285f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2866 <IDT_Init+0x254>	2862: R_X86_64_PC32	Exception_Security-0x4
    2866:	be 1e 00 00 00       	mov    $0x1e,%esi
    286b:	48 89 c7             	mov    %rax,%rdi
    286e:	e8 8a fc ff ff       	call   24fd <IDT_SetEntry>
    2873:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2878:	be ff 0f 00 00       	mov    $0xfff,%esi
    287d:	48 89 c7             	mov    %rax,%rdi
    2880:	e8 00 00 00 00       	call   2885 <IDT_Init+0x273>	2881: R_X86_64_PLT32	SetIDTR-0x4
    2885:	90                   	nop
    2886:	48 83 c4 18          	add    $0x18,%rsp
    288a:	c3                   	ret

000000000000288b <ValidateRSDP>:
    288b:	48 83 ec 18          	sub    $0x18,%rsp
    288f:	48 89 3c 24          	mov    %rdi,(%rsp)
    2893:	48 8b 04 24          	mov    (%rsp),%rax
    2897:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    289b:	3c 02                	cmp    $0x2,%al
    289d:	74 07                	je     28a6 <ValidateRSDP+0x1b>
    289f:	b8 00 00 00 00       	mov    $0x0,%eax
    28a4:	eb 40                	jmp    28e6 <ValidateRSDP+0x5b>
    28a6:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    28ab:	c7 44 24 10 00 00 00 00 	movl   $0x0,0x10(%rsp)
    28b3:	eb 17                	jmp    28cc <ValidateRSDP+0x41>
    28b5:	8b 54 24 10          	mov    0x10(%rsp),%edx
    28b9:	48 8b 04 24          	mov    (%rsp),%rax
    28bd:	48 01 d0             	add    %rdx,%rax
    28c0:	0f b6 00             	movzbl (%rax),%eax
    28c3:	00 44 24 17          	add    %al,0x17(%rsp)
    28c7:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
    28cc:	83 7c 24 10 23       	cmpl   $0x23,0x10(%rsp)
    28d1:	76 e2                	jbe    28b5 <ValidateRSDP+0x2a>
    28d3:	80 7c 24 17 00       	cmpb   $0x0,0x17(%rsp)
    28d8:	74 07                	je     28e1 <ValidateRSDP+0x56>
    28da:	b8 00 00 00 00       	mov    $0x0,%eax
    28df:	eb 05                	jmp    28e6 <ValidateRSDP+0x5b>
    28e1:	b8 01 00 00 00       	mov    $0x1,%eax
    28e6:	48 83 c4 18          	add    $0x18,%rsp
    28ea:	c3                   	ret

00000000000028eb <ValidateSDT>:
    28eb:	48 83 ec 18          	sub    $0x18,%rsp
    28ef:	48 89 3c 24          	mov    %rdi,(%rsp)
    28f3:	48 8b 04 24          	mov    (%rsp),%rax
    28f7:	8b 40 04             	mov    0x4(%rax),%eax
    28fa:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    28fe:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    2903:	c7 44 24 10 00 00 00 00 	movl   $0x0,0x10(%rsp)
    290b:	eb 17                	jmp    2924 <ValidateSDT+0x39>
    290d:	8b 54 24 10          	mov    0x10(%rsp),%edx
    2911:	48 8b 04 24          	mov    (%rsp),%rax
    2915:	48 01 d0             	add    %rdx,%rax
    2918:	0f b6 00             	movzbl (%rax),%eax
    291b:	00 44 24 17          	add    %al,0x17(%rsp)
    291f:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
    2924:	8b 44 24 10          	mov    0x10(%rsp),%eax
    2928:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
    292c:	72 df                	jb     290d <ValidateSDT+0x22>
    292e:	80 7c 24 17 00       	cmpb   $0x0,0x17(%rsp)
    2933:	74 07                	je     293c <ValidateSDT+0x51>
    2935:	b8 00 00 00 00       	mov    $0x0,%eax
    293a:	eb 05                	jmp    2941 <ValidateSDT+0x56>
    293c:	b8 01 00 00 00       	mov    $0x1,%eax
    2941:	48 83 c4 18          	add    $0x18,%rsp
    2945:	c3                   	ret

0000000000002946 <InitACPI>:
    2946:	48 83 ec 48          	sub    $0x48,%rsp
    294a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    294f:	48 89 34 24          	mov    %rsi,(%rsp)
    2953:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2957:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    295c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    2961:	48 8b 04 24          	mov    (%rsp),%rax
    2965:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    296a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    296f:	48 89 c7             	mov    %rax,%rdi
    2972:	e8 14 ff ff ff       	call   288b <ValidateRSDP>
    2977:	48 8b 04 24          	mov    (%rsp),%rax
    297b:	48 8b 40 18          	mov    0x18(%rax),%rax
    297f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2984:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2989:	48 89 c7             	mov    %rax,%rdi
    298c:	e8 5a ff ff ff       	call   28eb <ValidateSDT>
    2991:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2996:	8b 40 04             	mov    0x4(%rax),%eax
    2999:	89 c0                	mov    %eax,%eax
    299b:	48 83 e8 24          	sub    $0x24,%rax
    299f:	48 c1 e8 03          	shr    $0x3,%rax
    29a3:	89 44 24 38          	mov    %eax,0x38(%rsp)
    29a7:	c7 44 24 3c 00 00 00 00 	movl   $0x0,0x3c(%rsp)
    29af:	e9 8c 00 00 00       	jmp    2a40 <InitACPI+0xfa>
    29b4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    29b9:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    29bd:	48 83 c2 04          	add    $0x4,%rdx
    29c1:	48 8b 44 d0 04       	mov    0x4(%rax,%rdx,8),%rax
    29c6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    29cb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    29d0:	ba 04 00 00 00       	mov    $0x4,%edx
    29d5:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 29dc <InitACPI+0x96>	29d8: R_X86_64_PC32	.rodata+0xd
    29dc:	48 89 ce             	mov    %rcx,%rsi
    29df:	48 89 c7             	mov    %rax,%rdi
    29e2:	e8 35 e1 ff ff       	call   b1c <Mem_Cmp>
    29e7:	85 c0                	test   %eax,%eax
    29e9:	75 19                	jne    2a04 <InitACPI+0xbe>
    29eb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    29f0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    29f5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    29fa:	48 89 c7             	mov    %rax,%rdi
    29fd:	e8 e9 fe ff ff       	call   28eb <ValidateSDT>
    2a02:	eb 37                	jmp    2a3b <InitACPI+0xf5>
    2a04:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2a09:	ba 04 00 00 00       	mov    $0x4,%edx
    2a0e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2a15 <InitACPI+0xcf>	2a11: R_X86_64_PC32	.rodata+0x12
    2a15:	48 89 ce             	mov    %rcx,%rsi
    2a18:	48 89 c7             	mov    %rax,%rdi
    2a1b:	e8 fc e0 ff ff       	call   b1c <Mem_Cmp>
    2a20:	85 c0                	test   %eax,%eax
    2a22:	75 17                	jne    2a3b <InitACPI+0xf5>
    2a24:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2a29:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    2a2e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2a33:	48 89 c7             	mov    %rax,%rdi
    2a36:	e8 b0 fe ff ff       	call   28eb <ValidateSDT>
    2a3b:	83 44 24 3c 01       	addl   $0x1,0x3c(%rsp)
    2a40:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    2a44:	3b 44 24 38          	cmp    0x38(%rsp),%eax
    2a48:	0f 82 66 ff ff ff    	jb     29b4 <InitACPI+0x6e>
    2a4e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2a53:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2a58:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2a5d:	48 89 01             	mov    %rax,(%rcx)
    2a60:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    2a64:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2a69:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    2a6e:	48 89 41 10          	mov    %rax,0x10(%rcx)
    2a72:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    2a76:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2a7b:	48 83 c4 48          	add    $0x48,%rsp
    2a7f:	c3                   	ret

0000000000002a80 <InitAPIC>:
    2a80:	48 83 ec 38          	sub    $0x38,%rsp
    2a84:	be 11 00 00 00       	mov    $0x11,%esi
    2a89:	bf 20 00 00 00       	mov    $0x20,%edi
    2a8e:	e8 00 00 00 00       	call   2a93 <InitAPIC+0x13>	2a8f: R_X86_64_PLT32	PortOut08-0x4
    2a93:	be 11 00 00 00       	mov    $0x11,%esi
    2a98:	bf a0 00 00 00       	mov    $0xa0,%edi
    2a9d:	e8 00 00 00 00       	call   2aa2 <InitAPIC+0x22>	2a9e: R_X86_64_PLT32	PortOut08-0x4
    2aa2:	be e0 00 00 00       	mov    $0xe0,%esi
    2aa7:	bf 21 00 00 00       	mov    $0x21,%edi
    2aac:	e8 00 00 00 00       	call   2ab1 <InitAPIC+0x31>	2aad: R_X86_64_PLT32	PortOut08-0x4
    2ab1:	be e8 00 00 00       	mov    $0xe8,%esi
    2ab6:	bf a1 00 00 00       	mov    $0xa1,%edi
    2abb:	e8 00 00 00 00       	call   2ac0 <InitAPIC+0x40>	2abc: R_X86_64_PLT32	PortOut08-0x4
    2ac0:	be 04 00 00 00       	mov    $0x4,%esi
    2ac5:	bf 21 00 00 00       	mov    $0x21,%edi
    2aca:	e8 00 00 00 00       	call   2acf <InitAPIC+0x4f>	2acb: R_X86_64_PLT32	PortOut08-0x4
    2acf:	be 02 00 00 00       	mov    $0x2,%esi
    2ad4:	bf a1 00 00 00       	mov    $0xa1,%edi
    2ad9:	e8 00 00 00 00       	call   2ade <InitAPIC+0x5e>	2ada: R_X86_64_PLT32	PortOut08-0x4
    2ade:	be 01 00 00 00       	mov    $0x1,%esi
    2ae3:	bf 21 00 00 00       	mov    $0x21,%edi
    2ae8:	e8 00 00 00 00       	call   2aed <InitAPIC+0x6d>	2ae9: R_X86_64_PLT32	PortOut08-0x4
    2aed:	be 01 00 00 00       	mov    $0x1,%esi
    2af2:	bf a1 00 00 00       	mov    $0xa1,%edi
    2af7:	e8 00 00 00 00       	call   2afc <InitAPIC+0x7c>	2af8: R_X86_64_PLT32	PortOut08-0x4
    2afc:	be ff 00 00 00       	mov    $0xff,%esi
    2b01:	bf 21 00 00 00       	mov    $0x21,%edi
    2b06:	e8 00 00 00 00       	call   2b0b <InitAPIC+0x8b>	2b07: R_X86_64_PLT32	PortOut08-0x4
    2b0b:	be ff 00 00 00       	mov    $0xff,%esi
    2b10:	bf a1 00 00 00       	mov    $0xa1,%edi
    2b15:	e8 00 00 00 00       	call   2b1a <InitAPIC+0x9a>	2b16: R_X86_64_PLT32	PortOut08-0x4
    2b1a:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    2b1f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2b24:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b29:	8b 40 24             	mov    0x24(%rax),%eax
    2b2c:	89 c0                	mov    %eax,%eax
    2b2e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2b33:	c7 44 24 24 00 00 00 00 	movl   $0x0,0x24(%rsp)
    2b3b:	eb 44                	jmp    2b81 <InitAPIC+0x101>
    2b3d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b42:	48 8d 50 2c          	lea    0x2c(%rax),%rdx
    2b46:	8b 44 24 24          	mov    0x24(%rsp),%eax
    2b4a:	48 01 d0             	add    %rdx,%rax
    2b4d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2b52:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b57:	0f b6 00             	movzbl (%rax),%eax
    2b5a:	0f b6 c0             	movzbl %al,%eax
    2b5d:	83 f8 05             	cmp    $0x5,%eax
    2b60:	75 0f                	jne    2b71 <InitAPIC+0xf1>
    2b62:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b67:	48 8b 40 04          	mov    0x4(%rax),%rax
    2b6b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2b70:	90                   	nop
    2b71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b76:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    2b7a:	0f b6 c0             	movzbl %al,%eax
    2b7d:	01 44 24 24          	add    %eax,0x24(%rsp)
    2b81:	8b 54 24 24          	mov    0x24(%rsp),%edx
    2b85:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b8a:	8b 40 04             	mov    0x4(%rax),%eax
    2b8d:	89 c0                	mov    %eax,%eax
    2b8f:	48 83 e8 24          	sub    $0x24,%rax
    2b93:	48 39 c2             	cmp    %rax,%rdx
    2b96:	72 a5                	jb     2b3d <InitAPIC+0xbd>
    2b98:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2b9d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 2ba4 <InitAPIC+0x124>	2ba0: R_X86_64_PC32	APICBase-0x4
    2ba4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2ba9:	48 05 f0 00 00 00    	add    $0xf0,%rax
    2baf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2bb4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bb9:	8b 00                	mov    (%rax),%eax
    2bbb:	80 cc 01             	or     $0x1,%ah
    2bbe:	89 c2                	mov    %eax,%edx
    2bc0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bc5:	89 10                	mov    %edx,(%rax)
    2bc7:	b8 00 00 00 00       	mov    $0x0,%eax
    2bcc:	48 83 c4 38          	add    $0x38,%rsp
    2bd0:	c3                   	ret

0000000000002bd1 <GetPAllocTableMapAddr>:
    2bd1:	48 83 ec 18          	sub    $0x18,%rsp
    2bd5:	48 89 3c 24          	mov    %rdi,(%rsp)
    2bd9:	48 c7 44 24 10 00 00 00 00 	movq   $0x0,0x10(%rsp)
    2be2:	c7 44 24 0c 00 00 00 00 	movl   $0x0,0xc(%rsp)
    2bea:	eb 2d                	jmp    2c19 <GetPAllocTableMapAddr+0x48>
    2bec:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bf1:	48 8d 0c 85 00 00 00 00 	lea    0x0(,%rax,4),%rcx
    2bf9:	48 8b 04 24          	mov    (%rsp),%rax
    2bfd:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    2c01:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2c05:	48 c1 e8 0a          	shr    $0xa,%rax
    2c09:	83 e0 03             	and    $0x3,%eax
    2c0c:	48 09 c8             	or     %rcx,%rax
    2c0f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2c14:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    2c19:	83 7c 24 0c 1f       	cmpl   $0x1f,0xc(%rsp)
    2c1e:	76 cc                	jbe    2bec <GetPAllocTableMapAddr+0x1b>
    2c20:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2c25:	48 83 c4 18          	add    $0x18,%rsp
    2c29:	c3                   	ret

0000000000002c2a <SetPAllocTableMapAddr>:
    2c2a:	48 83 ec 20          	sub    $0x20,%rsp
    2c2e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2c33:	48 89 34 24          	mov    %rsi,(%rsp)
    2c37:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    2c3f:	eb 52                	jmp    2c93 <SetPAllocTableMapAddr+0x69>
    2c41:	b8 1f 00 00 00       	mov    $0x1f,%eax
    2c46:	2b 44 24 1c          	sub    0x1c(%rsp),%eax
    2c4a:	01 c0                	add    %eax,%eax
    2c4c:	48 8b 14 24          	mov    (%rsp),%rdx
    2c50:	89 c1                	mov    %eax,%ecx
    2c52:	48 d3 ea             	shr    %cl,%rdx
    2c55:	48 89 d0             	mov    %rdx,%rax
    2c58:	83 e0 03             	and    $0x3,%eax
    2c5b:	89 44 24 18          	mov    %eax,0x18(%rsp)
    2c5f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2c64:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    2c68:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2c6c:	80 e4 f3             	and    $0xf3,%ah
    2c6f:	48 89 c2             	mov    %rax,%rdx
    2c72:	8b 44 24 18          	mov    0x18(%rsp),%eax
    2c76:	c1 e0 0a             	shl    $0xa,%eax
    2c79:	89 c0                	mov    %eax,%eax
    2c7b:	48 09 d0             	or     %rdx,%rax
    2c7e:	48 89 c1             	mov    %rax,%rcx
    2c81:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2c86:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    2c8a:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    2c8e:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    2c93:	83 7c 24 1c 1f       	cmpl   $0x1f,0x1c(%rsp)
    2c98:	76 a7                	jbe    2c41 <SetPAllocTableMapAddr+0x17>
    2c9a:	90                   	nop
    2c9b:	90                   	nop
    2c9c:	48 83 c4 20          	add    $0x20,%rsp
    2ca0:	c3                   	ret

0000000000002ca1 <AllocateVirtualPage>:
    2ca1:	b8 00 00 00 00       	mov    $0x0,%eax
    2ca6:	c3                   	ret

0000000000002ca7 <AllocatePhysicalPage>:
    2ca7:	b8 00 00 00 00       	mov    $0x0,%eax
    2cac:	c3                   	ret

0000000000002cad <MapPage>:
    2cad:	48 83 ec 48          	sub    $0x48,%rsp
    2cb1:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2cb6:	48 89 34 24          	mov    %rsi,(%rsp)
    2cba:	48 8b 04 24          	mov    (%rsp),%rax
    2cbe:	25 ff 0f 00 00       	and    $0xfff,%eax
    2cc3:	48 85 c0             	test   %rax,%rax
    2cc6:	75 0d                	jne    2cd5 <MapPage+0x28>
    2cc8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2ccd:	25 ff 0f 00 00       	and    $0xfff,%eax
    2cd2:	48 85 c0             	test   %rax,%rax
    2cd5:	e8 00 00 00 00       	call   2cda <MapPage+0x2d>	2cd6: R_X86_64_PLT32	GetCR4-0x4
    2cda:	25 00 20 00 00       	and    $0x2000,%eax
    2cdf:	48 85 c0             	test   %rax,%rax
    2ce2:	0f 95 c0             	setne  %al
    2ce5:	88 44 24 27          	mov    %al,0x27(%rsp)
    2ce9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2cee:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2cf3:	48 c7 44 24 38 f8 ff ff ff 	movq   $0xfffffffffffffff8,0x38(%rsp)
    2cfc:	0f be 44 24 27       	movsbl 0x27(%rsp),%eax
    2d01:	83 c0 04             	add    $0x4,%eax
    2d04:	89 44 24 34          	mov    %eax,0x34(%rsp)
    2d08:	e9 eb 00 00 00       	jmp    2df8 <MapPage+0x14b>
    2d0d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2d12:	48 c1 e0 09          	shl    $0x9,%rax
    2d16:	48 89 c6             	mov    %rax,%rsi
    2d19:	8b 54 24 34          	mov    0x34(%rsp),%edx
    2d1d:	89 d0                	mov    %edx,%eax
    2d1f:	c1 e0 03             	shl    $0x3,%eax
    2d22:	01 d0                	add    %edx,%eax
    2d24:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2d29:	89 c1                	mov    %eax,%ecx
    2d2b:	48 d3 ea             	shr    %cl,%rdx
    2d2e:	48 89 d0             	mov    %rdx,%rax
    2d31:	25 f8 0f 00 00       	and    $0xff8,%eax
    2d36:	48 09 f0             	or     %rsi,%rax
    2d39:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2d3e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2d43:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2d48:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2d4d:	48 8b 00             	mov    (%rax),%rax
    2d50:	83 e0 01             	and    $0x1,%eax
    2d53:	48 85 c0             	test   %rax,%rax
    2d56:	0f 85 97 00 00 00    	jne    2df3 <MapPage+0x146>
    2d5c:	83 7c 24 34 01       	cmpl   $0x1,0x34(%rsp)
    2d61:	7e 0c                	jle    2d6f <MapPage+0xc2>
    2d63:	e8 3f ff ff ff       	call   2ca7 <AllocatePhysicalPage>
    2d68:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2d6d:	eb 5f                	jmp    2dce <MapPage+0x121>
    2d6f:	48 8b 04 24          	mov    (%rsp),%rax
    2d73:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2d78:	80 7c 24 27 00       	cmpb   $0x0,0x27(%rsp)
    2d7d:	74 25                	je     2da4 <MapPage+0xf7>
    2d7f:	48 b8 00 00 00 00 00 80 00 00 	movabs $0x800000000000,%rax
    2d89:	48 23 44 24 38       	and    0x38(%rsp),%rax
    2d8e:	48 85 c0             	test   %rax,%rax
    2d91:	75 11                	jne    2da4 <MapPage+0xf7>
    2d93:	48 b8 ff ff ff ff ff 7f 00 00 	movabs $0x7fffffffffff,%rax
    2d9d:	48 21 44 24 38       	and    %rax,0x38(%rsp)
    2da2:	eb 2a                	jmp    2dce <MapPage+0x121>
    2da4:	80 7c 24 27 00       	cmpb   $0x0,0x27(%rsp)
    2da9:	75 23                	jne    2dce <MapPage+0x121>
    2dab:	48 b8 00 00 00 00 40 00 00 00 	movabs $0x4000000000,%rax
    2db5:	48 23 44 24 38       	and    0x38(%rsp),%rax
    2dba:	48 85 c0             	test   %rax,%rax
    2dbd:	75 0f                	jne    2dce <MapPage+0x121>
    2dbf:	48 b8 ff ff ff ff 3f 00 00 00 	movabs $0x3fffffffff,%rax
    2dc9:	48 21 44 24 38       	and    %rax,0x38(%rsp)
    2dce:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2dd3:	48 83 c8 01          	or     $0x1,%rax
    2dd7:	48 89 c2             	mov    %rax,%rdx
    2dda:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ddf:	48 89 10             	mov    %rdx,(%rax)
    2de2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2de7:	48 c1 e0 09          	shl    $0x9,%rax
    2deb:	48 89 c7             	mov    %rax,%rdi
    2dee:	e8 00 00 00 00       	call   2df3 <MapPage+0x146>	2def: R_X86_64_PLT32	InvalidateTLBEntry-0x4
    2df3:	83 6c 24 34 01       	subl   $0x1,0x34(%rsp)
    2df8:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
    2dfd:	0f 8f 0a ff ff ff    	jg     2d0d <MapPage+0x60>
    2e03:	90                   	nop
    2e04:	90                   	nop
    2e05:	48 83 c4 48          	add    $0x48,%rsp
    2e09:	c3                   	ret

0000000000002e0a <GetOrCreatePAllocDir>:
    2e0a:	48 83 ec 28          	sub    $0x28,%rsp
    2e0e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2e13:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e1a <GetOrCreatePAllocDir+0x10>	2e16: R_X86_64_PC32	.bss+0x81c
    2e1a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2e1f:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2e23:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2e27:	83 e0 01             	and    $0x1,%eax
    2e2a:	48 85 c0             	test   %rax,%rax
    2e2d:	74 1c                	je     2e4b <GetOrCreatePAllocDir+0x41>
    2e2f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e36 <GetOrCreatePAllocDir+0x2c>	2e32: R_X86_64_PC32	.bss+0x81c
    2e36:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2e3b:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2e3f:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2e43:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2e49:	eb 72                	jmp    2ebd <GetOrCreatePAllocDir+0xb3>
    2e4b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2e50:	48 c1 e0 2c          	shl    $0x2c,%rax
    2e54:	48 05 00 30 00 00    	add    $0x3000,%rax
    2e5a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2e5f:	e8 3d fe ff ff       	call   2ca1 <AllocateVirtualPage>
    2e64:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2e69:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2e6e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e73:	48 89 d6             	mov    %rdx,%rsi
    2e76:	48 89 c7             	mov    %rax,%rdi
    2e79:	e8 2f fe ff ff       	call   2cad <MapPage>
    2e7e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e83:	ba 00 10 00 00       	mov    $0x1000,%edx
    2e88:	be 00 00 00 00       	mov    $0x0,%esi
    2e8d:	48 89 c7             	mov    %rax,%rdi
    2e90:	e8 b1 da ff ff       	call   946 <Mem_Set>
    2e95:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e9a:	48 83 c8 01          	or     $0x1,%rax
    2e9e:	48 89 c2             	mov    %rax,%rdx
    2ea1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2ea8 <GetOrCreatePAllocDir+0x9e>	2ea4: R_X86_64_PC32	.bss+0x81c
    2ea8:	48 89 d1             	mov    %rdx,%rcx
    2eab:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2eb0:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2eb4:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    2eb8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ebd:	48 83 c4 28          	add    $0x28,%rsp
    2ec1:	c3                   	ret

0000000000002ec2 <GetOrCreatePAllocTableMap>:
    2ec2:	48 83 ec 48          	sub    $0x48,%rsp
    2ec6:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2ecb:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    2ed0:	89 d0                	mov    %edx,%eax
    2ed2:	88 44 24 0c          	mov    %al,0xc(%rsp)
    2ed6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2edb:	48 89 c7             	mov    %rax,%rdi
    2ede:	e8 ee fc ff ff       	call   2bd1 <GetPAllocTableMapAddr>
    2ee3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2ee8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2eed:	83 e0 01             	and    $0x1,%eax
    2ef0:	48 85 c0             	test   %rax,%rax
    2ef3:	74 10                	je     2f05 <GetOrCreatePAllocTableMap+0x43>
    2ef5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2efa:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2f00:	e9 8b 00 00 00       	jmp    2f90 <GetOrCreatePAllocTableMap+0xce>
    2f05:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2f0a:	48 c1 e0 28          	shl    $0x28,%rax
    2f0e:	48 05 00 20 00 00    	add    $0x2000,%rax
    2f14:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    2f19:	e8 83 fd ff ff       	call   2ca1 <AllocateVirtualPage>
    2f1e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2f23:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    2f28:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f2d:	48 89 d6             	mov    %rdx,%rsi
    2f30:	48 89 c7             	mov    %rax,%rdi
    2f33:	e8 75 fd ff ff       	call   2cad <MapPage>
    2f38:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    2f3d:	74 19                	je     2f58 <GetOrCreatePAllocTableMap+0x96>
    2f3f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f44:	ba 00 10 00 00       	mov    $0x1000,%edx
    2f49:	be 00 00 00 00       	mov    $0x0,%esi
    2f4e:	48 89 c7             	mov    %rax,%rdi
    2f51:	e8 f0 d9 ff ff       	call   946 <Mem_Set>
    2f56:	eb 17                	jmp    2f6f <GetOrCreatePAllocTableMap+0xad>
    2f58:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f5d:	ba 00 10 00 00       	mov    $0x1000,%edx
    2f62:	be ff 00 00 00       	mov    $0xff,%esi
    2f67:	48 89 c7             	mov    %rax,%rdi
    2f6a:	e8 d7 d9 ff ff       	call   946 <Mem_Set>
    2f6f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f74:	48 83 c8 01          	or     $0x1,%rax
    2f78:	48 89 c2             	mov    %rax,%rdx
    2f7b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2f80:	48 89 d6             	mov    %rdx,%rsi
    2f83:	48 89 c7             	mov    %rax,%rdi
    2f86:	e8 9f fc ff ff       	call   2c2a <SetPAllocTableMapAddr>
    2f8b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f90:	48 83 c4 48          	add    $0x48,%rsp
    2f94:	c3                   	ret

0000000000002f95 <GetOrCreatePAllocTable>:
    2f95:	48 83 ec 38          	sub    $0x38,%rsp
    2f99:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2f9e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    2fa3:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2fa8:	48 81 7c 24 18 ff 0f 00 00 	cmpq   $0xfff,0x18(%rsp)
    2fb1:	77 06                	ja     2fb9 <GetOrCreatePAllocTable+0x24>
    2fb3:	48 83 7c 24 10 1f    	cmpq   $0x1f,0x10(%rsp)
    2fb9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2fbe:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    2fc3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2fc7:	83 e0 01             	and    $0x1,%eax
    2fca:	48 85 c0             	test   %rax,%rax
    2fcd:	74 16                	je     2fe5 <GetOrCreatePAllocTable+0x50>
    2fcf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2fd4:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    2fd9:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2fdd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2fe3:	eb 78                	jmp    305d <GetOrCreatePAllocTable+0xc8>
    2fe5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2fea:	48 c1 e0 28          	shl    $0x28,%rax
    2fee:	48 89 c2             	mov    %rax,%rdx
    2ff1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ff6:	48 c1 e0 23          	shl    $0x23,%rax
    2ffa:	48 09 d0             	or     %rdx,%rax
    2ffd:	48 05 00 10 00 00    	add    $0x1000,%rax
    3003:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3008:	e8 94 fc ff ff       	call   2ca1 <AllocateVirtualPage>
    300d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3012:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    3017:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    301c:	48 89 d6             	mov    %rdx,%rsi
    301f:	48 89 c7             	mov    %rax,%rdi
    3022:	e8 86 fc ff ff       	call   2cad <MapPage>
    3027:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    302c:	ba 00 10 00 00       	mov    $0x1000,%edx
    3031:	be 00 00 00 00       	mov    $0x0,%esi
    3036:	48 89 c7             	mov    %rax,%rdi
    3039:	e8 08 d9 ff ff       	call   946 <Mem_Set>
    303e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3043:	48 83 c8 01          	or     $0x1,%rax
    3047:	48 89 c1             	mov    %rax,%rcx
    304a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    304f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3054:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    3058:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    305d:	48 83 c4 38          	add    $0x38,%rsp
    3061:	c3                   	ret

0000000000003062 <GetOrCreatePAllocPageMap>:
    3062:	48 83 ec 48          	sub    $0x48,%rsp
    3066:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    306b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3070:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3075:	89 c8                	mov    %ecx,%eax
    3077:	88 44 24 04          	mov    %al,0x4(%rsp)
    307b:	48 81 7c 24 18 ff 0f 00 00 	cmpq   $0xfff,0x18(%rsp)
    3084:	77 09                	ja     308f <GetOrCreatePAllocPageMap+0x2d>
    3086:	48 81 7c 24 10 ff 3f 00 00 	cmpq   $0x3fff,0x10(%rsp)
    308f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3094:	25 ff 01 00 00       	and    $0x1ff,%eax
    3099:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    309e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    30a3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    30a8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    30ac:	83 e0 01             	and    $0x1,%eax
    30af:	48 85 c0             	test   %rax,%rax
    30b2:	74 19                	je     30cd <GetOrCreatePAllocPageMap+0x6b>
    30b4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    30b9:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    30be:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    30c2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    30c8:	e9 92 00 00 00       	jmp    315f <GetOrCreatePAllocPageMap+0xfd>
    30cd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    30d2:	48 c1 e0 28          	shl    $0x28,%rax
    30d6:	48 89 c2             	mov    %rax,%rdx
    30d9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    30de:	48 c1 e0 1a          	shl    $0x1a,%rax
    30e2:	48 09 d0             	or     %rdx,%rax
    30e5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    30ea:	e8 b2 fb ff ff       	call   2ca1 <AllocateVirtualPage>
    30ef:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    30f4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    30f9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    30fe:	48 89 d6             	mov    %rdx,%rsi
    3101:	48 89 c7             	mov    %rax,%rdi
    3104:	e8 a4 fb ff ff       	call   2cad <MapPage>
    3109:	80 7c 24 04 00       	cmpb   $0x0,0x4(%rsp)
    310e:	74 19                	je     3129 <GetOrCreatePAllocPageMap+0xc7>
    3110:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3115:	ba 00 10 00 00       	mov    $0x1000,%edx
    311a:	be 00 00 00 00       	mov    $0x0,%esi
    311f:	48 89 c7             	mov    %rax,%rdi
    3122:	e8 1f d8 ff ff       	call   946 <Mem_Set>
    3127:	eb 17                	jmp    3140 <GetOrCreatePAllocPageMap+0xde>
    3129:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    312e:	ba 00 10 00 00       	mov    $0x1000,%edx
    3133:	be ff 00 00 00       	mov    $0xff,%esi
    3138:	48 89 c7             	mov    %rax,%rdi
    313b:	e8 06 d8 ff ff       	call   946 <Mem_Set>
    3140:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3145:	48 83 c8 01          	or     $0x1,%rax
    3149:	48 89 c1             	mov    %rax,%rcx
    314c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3151:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    3156:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    315a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    315f:	48 83 c4 48          	add    $0x48,%rsp
    3163:	c3                   	ret

0000000000003164 <FreePhysicalPage>:
    3164:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    316b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    3170:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3175:	48 c1 e8 2c          	shr    $0x2c,%rax
    3179:	25 ff 00 00 00       	and    $0xff,%eax
    317e:	48 89 84 24 a8 00 00 00 	mov    %rax,0xa8(%rsp)
    3186:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    318b:	48 c1 e8 28          	shr    $0x28,%rax
    318f:	83 e0 0f             	and    $0xf,%eax
    3192:	48 89 84 24 a0 00 00 00 	mov    %rax,0xa0(%rsp)
    319a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    319f:	48 c1 e8 23          	shr    $0x23,%rax
    31a3:	83 e0 1f             	and    $0x1f,%eax
    31a6:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    31ae:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31b3:	48 c1 e8 1a          	shr    $0x1a,%rax
    31b7:	25 ff 01 00 00       	and    $0x1ff,%eax
    31bc:	48 89 84 24 90 00 00 00 	mov    %rax,0x90(%rsp)
    31c4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31c9:	48 c1 e8 0c          	shr    $0xc,%rax
    31cd:	25 ff 3f 00 00       	and    $0x3fff,%eax
    31d2:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    31da:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31df:	48 c1 e8 28          	shr    $0x28,%rax
    31e3:	25 ff 0f 00 00       	and    $0xfff,%eax
    31e8:	48 89 84 24 80 00 00 00 	mov    %rax,0x80(%rsp)
    31f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31f5:	48 c1 e8 1a          	shr    $0x1a,%rax
    31f9:	25 ff 3f 00 00       	and    $0x3fff,%eax
    31fe:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    3203:	48 8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%rax
    320b:	48 89 c7             	mov    %rax,%rdi
    320e:	e8 f7 fb ff ff       	call   2e0a <GetOrCreatePAllocDir>
    3213:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    3218:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 321f <FreePhysicalPage+0xbb>	321b: R_X86_64_PC32	.bss+0x81c
    321f:	48 8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%rdx
    3227:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    322b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    322f:	83 e0 01             	and    $0x1,%eax
    3232:	48 85 c0             	test   %rax,%rax
    3235:	75 29                	jne    3260 <FreePhysicalPage+0xfc>
    3237:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 323e <FreePhysicalPage+0xda>	323a: R_X86_64_PC32	.bss+0x81c
    323e:	48 8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%rdx
    3246:	48 c1 ea 03          	shr    $0x3,%rdx
    324a:	0f b6 44 10 20       	movzbl 0x20(%rax,%rdx,1),%eax
    324f:	0f b6 c0             	movzbl %al,%eax
    3252:	48 23 84 24 a8 00 00 00 	and    0xa8(%rsp),%rax
    325a:	83 e0 07             	and    $0x7,%eax
    325d:	48 85 c0             	test   %rax,%rax
    3260:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    3265:	48 8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%rdx
    326d:	48 c1 e2 08          	shl    $0x8,%rdx
    3271:	48 01 d0             	add    %rdx,%rax
    3274:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3279:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    327e:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    3286:	ba 00 00 00 00       	mov    $0x0,%edx
    328b:	48 89 ce             	mov    %rcx,%rsi
    328e:	48 89 c7             	mov    %rax,%rdi
    3291:	e8 2c fc ff ff       	call   2ec2 <GetOrCreatePAllocTableMap>
    3296:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    329b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    32a0:	48 89 c7             	mov    %rax,%rdi
    32a3:	e8 29 f9 ff ff       	call   2bd1 <GetPAllocTableMapAddr>
    32a8:	83 e0 01             	and    $0x1,%eax
    32ab:	48 85 c0             	test   %rax,%rax
    32ae:	75 2c                	jne    32dc <FreePhysicalPage+0x178>
    32b0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 32b7 <FreePhysicalPage+0x153>	32b3: R_X86_64_PC32	.bss+0x81c
    32b7:	48 8b 94 24 80 00 00 00 	mov    0x80(%rsp),%rdx
    32bf:	48 c1 ea 03          	shr    $0x3,%rdx
    32c3:	0f b6 84 10 00 02 00 00 	movzbl 0x200(%rax,%rdx,1),%eax
    32cb:	0f b6 c0             	movzbl %al,%eax
    32ce:	48 23 84 24 80 00 00 00 	and    0x80(%rsp),%rax
    32d6:	83 e0 07             	and    $0x7,%eax
    32d9:	48 85 c0             	test   %rax,%rax
    32dc:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    32e1:	48 8b 8c 24 98 00 00 00 	mov    0x98(%rsp),%rcx
    32e9:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    32f1:	48 89 ce             	mov    %rcx,%rsi
    32f4:	48 89 c7             	mov    %rax,%rdi
    32f7:	e8 99 fc ff ff       	call   2f95 <GetOrCreatePAllocTable>
    32fc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3301:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3306:	48 8b 94 24 98 00 00 00 	mov    0x98(%rsp),%rdx
    330e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    3312:	83 e0 01             	and    $0x1,%eax
    3315:	48 85 c0             	test   %rax,%rax
    3318:	75 2a                	jne    3344 <FreePhysicalPage+0x1e0>
    331a:	48 8b 84 24 98 00 00 00 	mov    0x98(%rsp),%rax
    3322:	48 c1 e8 03          	shr    $0x3,%rax
    3326:	48 89 c2             	mov    %rax,%rdx
    3329:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    332e:	0f b6 44 10 04       	movzbl 0x4(%rax,%rdx,1),%eax
    3333:	0f b6 c0             	movzbl %al,%eax
    3336:	48 23 84 24 98 00 00 00 	and    0x98(%rsp),%rax
    333e:	83 e0 07             	and    $0x7,%eax
    3341:	48 85 c0             	test   %rax,%rax
    3344:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3349:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    334e:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    3356:	b9 00 00 00 00       	mov    $0x0,%ecx
    335b:	48 89 c7             	mov    %rax,%rdi
    335e:	e8 ff fc ff ff       	call   3062 <GetOrCreatePAllocPageMap>
    3363:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    3368:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    336d:	48 8b 94 24 90 00 00 00 	mov    0x90(%rsp),%rdx
    3375:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    3379:	83 e0 01             	and    $0x1,%eax
    337c:	48 85 c0             	test   %rax,%rax
    337f:	75 24                	jne    33a5 <FreePhysicalPage+0x241>
    3381:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3386:	48 c1 e8 03          	shr    $0x3,%rax
    338a:	48 89 c2             	mov    %rax,%rdx
    338d:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3392:	0f b6 44 10 04       	movzbl 0x4(%rax,%rdx,1),%eax
    3397:	0f b6 c0             	movzbl %al,%eax
    339a:	48 23 44 24 78       	and    0x78(%rsp),%rax
    339f:	83 e0 07             	and    $0x7,%eax
    33a2:	48 85 c0             	test   %rax,%rax
    33a5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    33aa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    33af:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    33b7:	80 cc 40             	or     $0x40,%ah
    33ba:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    33c1:	c7 84 24 b8 00 00 00 00 00 00 00 	movl   $0x0,0xb8(%rsp)
    33cc:	e9 86 00 00 00       	jmp    3457 <FreePhysicalPage+0x2f3>
    33d1:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    33d8:	c1 e8 03             	shr    $0x3,%eax
    33db:	89 c2                	mov    %eax,%edx
    33dd:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    33e2:	48 01 d0             	add    %rdx,%rax
    33e5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    33ea:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    33f1:	83 e0 07             	and    $0x7,%eax
    33f4:	ba 01 00 00 00       	mov    $0x1,%edx
    33f9:	89 c1                	mov    %eax,%ecx
    33fb:	d3 e2                	shl    %cl,%edx
    33fd:	89 d0                	mov    %edx,%eax
    33ff:	88 44 24 3f          	mov    %al,0x3f(%rsp)
    3403:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    340a:	83 e0 06             	and    $0x6,%eax
    340d:	ba 03 00 00 00       	mov    $0x3,%edx
    3412:	89 c1                	mov    %eax,%ecx
    3414:	d3 e2                	shl    %cl,%edx
    3416:	89 d0                	mov    %edx,%eax
    3418:	88 44 24 3e          	mov    %al,0x3e(%rsp)
    341c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3421:	0f b6 00             	movzbl (%rax),%eax
    3424:	89 c2                	mov    %eax,%edx
    3426:	0f b6 44 24 3f       	movzbl 0x3f(%rsp),%eax
    342b:	f7 d0                	not    %eax
    342d:	21 d0                	and    %edx,%eax
    342f:	89 c2                	mov    %eax,%edx
    3431:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3436:	88 10                	mov    %dl,(%rax)
    3438:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    343d:	0f b6 00             	movzbl (%rax),%eax
    3440:	22 44 24 3e          	and    0x3e(%rsp),%al
    3444:	84 c0                	test   %al,%al
    3446:	74 1f                	je     3467 <FreePhysicalPage+0x303>
    3448:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    344f:	83 84 24 b8 00 00 00 01 	addl   $0x1,0xb8(%rsp)
    3457:	83 bc 24 b8 00 00 00 0e 	cmpl   $0xe,0xb8(%rsp)
    345f:	0f 86 6c ff ff ff    	jbe    33d1 <FreePhysicalPage+0x26d>
    3465:	eb 01                	jmp    3468 <FreePhysicalPage+0x304>
    3467:	90                   	nop
    3468:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    346d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3472:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3477:	80 cc 40             	or     $0x40,%ah
    347a:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    3481:	c7 84 24 b4 00 00 00 00 00 00 00 	movl   $0x0,0xb4(%rsp)
    348c:	e9 86 00 00 00       	jmp    3517 <FreePhysicalPage+0x3b3>
    3491:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    3498:	c1 e8 03             	shr    $0x3,%eax
    349b:	89 c2                	mov    %eax,%edx
    349d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    34a2:	48 01 d0             	add    %rdx,%rax
    34a5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34aa:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    34b1:	83 e0 07             	and    $0x7,%eax
    34b4:	ba 01 00 00 00       	mov    $0x1,%edx
    34b9:	89 c1                	mov    %eax,%ecx
    34bb:	d3 e2                	shl    %cl,%edx
    34bd:	89 d0                	mov    %edx,%eax
    34bf:	88 44 24 2f          	mov    %al,0x2f(%rsp)
    34c3:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    34ca:	83 e0 06             	and    $0x6,%eax
    34cd:	ba 03 00 00 00       	mov    $0x3,%edx
    34d2:	89 c1                	mov    %eax,%ecx
    34d4:	d3 e2                	shl    %cl,%edx
    34d6:	89 d0                	mov    %edx,%eax
    34d8:	88 44 24 2e          	mov    %al,0x2e(%rsp)
    34dc:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34e1:	0f b6 00             	movzbl (%rax),%eax
    34e4:	89 c2                	mov    %eax,%edx
    34e6:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
    34eb:	f7 d0                	not    %eax
    34ed:	21 d0                	and    %edx,%eax
    34ef:	89 c2                	mov    %eax,%edx
    34f1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34f6:	88 10                	mov    %dl,(%rax)
    34f8:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34fd:	0f b6 00             	movzbl (%rax),%eax
    3500:	22 44 24 2e          	and    0x2e(%rsp),%al
    3504:	84 c0                	test   %al,%al
    3506:	74 1f                	je     3527 <FreePhysicalPage+0x3c3>
    3508:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    350f:	83 84 24 b4 00 00 00 01 	addl   $0x1,0xb4(%rsp)
    3517:	83 bc 24 b4 00 00 00 0e 	cmpl   $0xe,0xb4(%rsp)
    351f:	0f 86 6c ff ff ff    	jbe    3491 <FreePhysicalPage+0x32d>
    3525:	eb 01                	jmp    3528 <FreePhysicalPage+0x3c4>
    3527:	90                   	nop
    3528:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 352f <FreePhysicalPage+0x3cb>	352b: R_X86_64_PC32	.bss+0x81c
    352f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3534:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    353c:	80 cc 10             	or     $0x10,%ah
    353f:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    3546:	c7 84 24 b0 00 00 00 00 00 00 00 	movl   $0x0,0xb0(%rsp)
    3551:	e9 86 00 00 00       	jmp    35dc <FreePhysicalPage+0x478>
    3556:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    355d:	c1 e8 03             	shr    $0x3,%eax
    3560:	89 c2                	mov    %eax,%edx
    3562:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    3567:	48 01 d0             	add    %rdx,%rax
    356a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    356f:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    3576:	83 e0 07             	and    $0x7,%eax
    3579:	ba 01 00 00 00       	mov    $0x1,%edx
    357e:	89 c1                	mov    %eax,%ecx
    3580:	d3 e2                	shl    %cl,%edx
    3582:	89 d0                	mov    %edx,%eax
    3584:	88 44 24 1f          	mov    %al,0x1f(%rsp)
    3588:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    358f:	83 e0 06             	and    $0x6,%eax
    3592:	ba 03 00 00 00       	mov    $0x3,%edx
    3597:	89 c1                	mov    %eax,%ecx
    3599:	d3 e2                	shl    %cl,%edx
    359b:	89 d0                	mov    %edx,%eax
    359d:	88 44 24 1e          	mov    %al,0x1e(%rsp)
    35a1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35a6:	0f b6 00             	movzbl (%rax),%eax
    35a9:	89 c2                	mov    %eax,%edx
    35ab:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
    35b0:	f7 d0                	not    %eax
    35b2:	21 d0                	and    %edx,%eax
    35b4:	89 c2                	mov    %eax,%edx
    35b6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35bb:	88 10                	mov    %dl,(%rax)
    35bd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35c2:	0f b6 00             	movzbl (%rax),%eax
    35c5:	22 44 24 1e          	and    0x1e(%rsp),%al
    35c9:	84 c0                	test   %al,%al
    35cb:	74 1f                	je     35ec <FreePhysicalPage+0x488>
    35cd:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    35d4:	83 84 24 b0 00 00 00 01 	addl   $0x1,0xb0(%rsp)
    35dc:	83 bc 24 b0 00 00 00 0c 	cmpl   $0xc,0xb0(%rsp)
    35e4:	0f 86 6c ff ff ff    	jbe    3556 <FreePhysicalPage+0x3f2>
    35ea:	eb 01                	jmp    35ed <FreePhysicalPage+0x489>
    35ec:	90                   	nop
    35ed:	90                   	nop
    35ee:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    35f5:	c3                   	ret

00000000000035f6 <FreeMapPages>:
    35f6:	48 83 ec 48          	sub    $0x48,%rsp
    35fa:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    35fe:	48 89 34 24          	mov    %rsi,(%rsp)
    3602:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    3607:	0f 84 e5 00 00 00    	je     36f2 <FreeMapPages+0xfc>
    360d:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    3611:	89 d0                	mov    %edx,%eax
    3613:	c1 e0 03             	shl    $0x3,%eax
    3616:	01 d0                	add    %edx,%eax
    3618:	83 c0 0c             	add    $0xc,%eax
    361b:	89 c0                	mov    %eax,%eax
    361d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3622:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3627:	ba 01 00 00 00       	mov    $0x1,%edx
    362c:	89 c1                	mov    %eax,%ecx
    362e:	d3 e2                	shl    %cl,%edx
    3630:	89 d0                	mov    %edx,%eax
    3632:	48 98                	cltq
    3634:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3639:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    363e:	48 f7 d8             	neg    %rax
    3641:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3646:	c7 44 24 3c 00 00 00 00 	movl   $0x0,0x3c(%rsp)
    364e:	e9 8f 00 00 00       	jmp    36e2 <FreeMapPages+0xec>
    3653:	48 b8 00 00 00 00 00 00 00 fe 	movabs $0xfe00000000000000,%rax
    365d:	48 0b 04 24          	or     (%rsp),%rax
    3661:	48 89 c2             	mov    %rax,%rdx
    3664:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3669:	83 e8 03             	sub    $0x3,%eax
    366c:	89 c1                	mov    %eax,%ecx
    366e:	48 d3 fa             	sar    %cl,%rdx
    3671:	48 89 d0             	mov    %rdx,%rax
    3674:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    3678:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    367d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3682:	48 8b 00             	mov    (%rax),%rax
    3685:	83 e0 01             	and    $0x1,%eax
    3688:	48 85 c0             	test   %rax,%rax
    368b:	74 50                	je     36dd <FreeMapPages+0xe7>
    368d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3692:	83 e8 09             	sub    $0x9,%eax
    3695:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    3699:	89 c1                	mov    %eax,%ecx
    369b:	d3 e2                	shl    %cl,%edx
    369d:	89 d0                	mov    %edx,%eax
    369f:	89 c0                	mov    %eax,%eax
    36a1:	48 0b 04 24          	or     (%rsp),%rax
    36a5:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    36a9:	83 ea 01             	sub    $0x1,%edx
    36ac:	48 89 c6             	mov    %rax,%rsi
    36af:	89 d7                	mov    %edx,%edi
    36b1:	e8 40 ff ff ff       	call   35f6 <FreeMapPages>
    36b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    36bb:	48 8b 00             	mov    (%rax),%rax
    36be:	48 ba 00 f0 ff ff ff ff 0f 00 	movabs $0xffffffffff000,%rdx
    36c8:	48 21 d0             	and    %rdx,%rax
    36cb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    36d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    36d5:	48 89 c7             	mov    %rax,%rdi
    36d8:	e8 87 fa ff ff       	call   3164 <FreePhysicalPage>
    36dd:	83 44 24 3c 01       	addl   $0x1,0x3c(%rsp)
    36e2:	81 7c 24 3c ff 01 00 00 	cmpl   $0x1ff,0x3c(%rsp)
    36ea:	0f 86 63 ff ff ff    	jbe    3653 <FreeMapPages+0x5d>
    36f0:	eb 01                	jmp    36f3 <FreeMapPages+0xfd>
    36f2:	90                   	nop
    36f3:	48 83 c4 48          	add    $0x48,%rsp
    36f7:	c3                   	ret

00000000000036f8 <FreeMapLvl>:
    36f8:	48 83 ec 78          	sub    $0x78,%rsp
    36fc:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    3700:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3705:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    370a:	83 7c 24 1c 04       	cmpl   $0x4,0x1c(%rsp)
    370f:	77 28                	ja     3739 <FreeMapLvl+0x41>
    3711:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3716:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    371b:	72 1c                	jb     3739 <FreeMapLvl+0x41>
    371d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3722:	25 ff 0f 00 00       	and    $0xfff,%eax
    3727:	48 85 c0             	test   %rax,%rax
    372a:	75 0d                	jne    3739 <FreeMapLvl+0x41>
    372c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3731:	25 ff 0f 00 00       	and    $0xfff,%eax
    3736:	48 85 c0             	test   %rax,%rax
    3739:	83 7c 24 1c 00       	cmpl   $0x0,0x1c(%rsp)
    373e:	75 50                	jne    3790 <FreeMapLvl+0x98>
    3740:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3745:	48 c1 f8 09          	sar    $0x9,%rax
    3749:	48 89 c2             	mov    %rax,%rdx
    374c:	48 b8 f8 ff ff ff ff ff 00 00 	movabs $0xfffffffffff8,%rax
    3756:	48 21 c2             	and    %rax,%rdx
    3759:	48 b8 00 00 00 00 00 00 ff ff 	movabs $0xffff000000000000,%rax
    3763:	48 09 d0             	or     %rdx,%rax
    3766:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    376b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3770:	48 2b 44 24 10       	sub    0x10(%rsp),%rax
    3775:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3779:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    377e:	be 00 00 00 00       	mov    $0x0,%esi
    3783:	48 89 c7             	mov    %rax,%rdi
    3786:	e8 bb d1 ff ff       	call   946 <Mem_Set>
    378b:	e9 61 01 00 00       	jmp    38f1 <FreeMapLvl+0x1f9>
    3790:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3794:	89 d0                	mov    %edx,%eax
    3796:	c1 e0 03             	shl    $0x3,%eax
    3799:	01 d0                	add    %edx,%eax
    379b:	83 c0 0c             	add    $0xc,%eax
    379e:	89 c0                	mov    %eax,%eax
    37a0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    37a5:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37aa:	ba 01 00 00 00       	mov    $0x1,%edx
    37af:	89 c1                	mov    %eax,%ecx
    37b1:	d3 e2                	shl    %cl,%edx
    37b3:	89 d0                	mov    %edx,%eax
    37b5:	48 98                	cltq
    37b7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    37bc:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    37c1:	48 f7 d8             	neg    %rax
    37c4:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    37c9:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37ce:	89 c2                	mov    %eax,%edx
    37d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    37d5:	89 d1                	mov    %edx,%ecx
    37d7:	48 d3 e8             	shr    %cl,%rax
    37da:	25 ff 01 00 00       	and    $0x1ff,%eax
    37df:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    37e4:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37e9:	89 c2                	mov    %eax,%edx
    37eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    37f0:	89 d1                	mov    %edx,%ecx
    37f2:	48 d3 e8             	shr    %cl,%rax
    37f5:	25 ff 01 00 00       	and    $0x1ff,%eax
    37fa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    37ff:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    3804:	48 3b 44 24 48       	cmp    0x48(%rsp),%rax
    3809:	75 20                	jne    382b <FreeMapLvl+0x133>
    380b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    380f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    3812:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3817:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    381c:	48 89 c6             	mov    %rax,%rsi
    381f:	89 cf                	mov    %ecx,%edi
    3821:	e8 d2 fe ff ff       	call   36f8 <FreeMapLvl>
    3826:	e9 c6 00 00 00       	jmp    38f1 <FreeMapLvl+0x1f9>
    382b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3830:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3835:	48 01 d0             	add    %rdx,%rax
    3838:	48 23 44 24 58       	and    0x58(%rsp),%rax
    383d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3842:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3847:	48 23 44 24 58       	and    0x58(%rsp),%rax
    384c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3851:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3855:	8d 48 ff             	lea    -0x1(%rax),%ecx
    3858:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    385d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3862:	48 89 c6             	mov    %rax,%rsi
    3865:	89 cf                	mov    %ecx,%edi
    3867:	e8 8c fe ff ff       	call   36f8 <FreeMapLvl>
    386c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3871:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3875:	48 89 d6             	mov    %rdx,%rsi
    3878:	89 c7                	mov    %eax,%edi
    387a:	e8 77 fd ff ff       	call   35f6 <FreeMapPages>
    387f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3884:	48 c1 f8 09          	sar    $0x9,%rax
    3888:	48 89 c2             	mov    %rax,%rdx
    388b:	48 b8 f8 ff ff ff ff ff 00 00 	movabs $0xfffffffffff8,%rax
    3895:	48 21 c2             	and    %rax,%rdx
    3898:	48 b8 00 00 00 00 00 00 ff ff 	movabs $0xffff000000000000,%rax
    38a2:	48 09 d0             	or     %rdx,%rax
    38a5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    38aa:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    38af:	48 2b 44 24 40       	sub    0x40(%rsp),%rax
    38b4:	48 89 c2             	mov    %rax,%rdx
    38b7:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    38bc:	83 e8 03             	sub    $0x3,%eax
    38bf:	89 c1                	mov    %eax,%ecx
    38c1:	48 d3 ea             	shr    %cl,%rdx
    38c4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    38c9:	be 00 00 00 00       	mov    $0x0,%esi
    38ce:	48 89 c7             	mov    %rax,%rdi
    38d1:	e8 70 d0 ff ff       	call   946 <Mem_Set>
    38d6:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    38da:	8d 48 ff             	lea    -0x1(%rax),%ecx
    38dd:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    38e2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    38e7:	48 89 c6             	mov    %rax,%rsi
    38ea:	89 cf                	mov    %ecx,%edi
    38ec:	e8 07 fe ff ff       	call   36f8 <FreeMapLvl>
    38f1:	48 83 c4 78          	add    $0x78,%rsp
    38f5:	c3                   	ret

00000000000038f6 <FreeVirtualPageRange>:
    38f6:	48 83 ec 48          	sub    $0x48,%rsp
    38fa:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    38ff:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3904:	89 d0                	mov    %edx,%eax
    3906:	88 44 24 0c          	mov    %al,0xc(%rsp)
    390a:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    3910:	0f 84 9e 00 00 00    	je     39b4 <FreeVirtualPageRange+0xbe>
    3916:	e8 00 00 00 00       	call   391b <FreeVirtualPageRange+0x25>	3917: R_X86_64_PLT32	GetCR4-0x4
    391b:	25 00 20 00 00       	and    $0x2000,%eax
    3920:	48 85 c0             	test   %rax,%rax
    3923:	0f 95 c0             	setne  %al
    3926:	88 44 24 37          	mov    %al,0x37(%rsp)
    392a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    392f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3934:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3939:	48 83 e8 01          	sub    $0x1,%rax
    393d:	48 c1 e0 0c          	shl    $0xc,%rax
    3941:	48 89 c2             	mov    %rax,%rdx
    3944:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3949:	48 01 d0             	add    %rdx,%rax
    394c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3951:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3956:	25 ff 0f 00 00       	and    $0xfff,%eax
    395b:	48 85 c0             	test   %rax,%rax
    395e:	75 0a                	jne    396a <FreeVirtualPageRange+0x74>
    3960:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3965:	48 39 44 24 28       	cmp    %rax,0x28(%rsp)
    396a:	80 7c 24 37 00       	cmpb   $0x0,0x37(%rsp)
    396f:	75 0f                	jne    3980 <FreeVirtualPageRange+0x8a>
    3971:	48 b8 00 00 00 00 00 00 ff 01 	movabs $0x1ff000000000000,%rax
    397b:	48 09 44 24 38       	or     %rax,0x38(%rsp)
    3980:	0f be 44 24 37       	movsbl 0x37(%rsp),%eax
    3985:	83 c0 04             	add    $0x4,%eax
    3988:	89 c1                	mov    %eax,%ecx
    398a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    398f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3994:	48 89 c6             	mov    %rax,%rsi
    3997:	89 cf                	mov    %ecx,%edi
    3999:	e8 5a fd ff ff       	call   36f8 <FreeMapLvl>
    399e:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    39a3:	74 10                	je     39b5 <FreeVirtualPageRange+0xbf>
    39a5:	e8 00 00 00 00       	call   39aa <FreeVirtualPageRange+0xb4>	39a6: R_X86_64_PLT32	GetCR3-0x4
    39aa:	48 89 c7             	mov    %rax,%rdi
    39ad:	e8 00 00 00 00       	call   39b2 <FreeVirtualPageRange+0xbc>	39ae: R_X86_64_PLT32	SetCR3-0x4
    39b2:	eb 01                	jmp    39b5 <FreeVirtualPageRange+0xbf>
    39b4:	90                   	nop
    39b5:	48 83 c4 48          	add    $0x48,%rsp
    39b9:	c3                   	ret

00000000000039ba <FreePhysicalPageRange>:
    39ba:	48 83 ec 10          	sub    $0x10,%rsp
    39be:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    39c3:	48 89 34 24          	mov    %rsi,(%rsp)
    39c7:	90                   	nop
    39c8:	48 83 c4 10          	add    $0x10,%rsp
    39cc:	c3                   	ret

00000000000039cd <PCI_Read32>:
    39cd:	48 83 ec 28          	sub    $0x28,%rsp
    39d1:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    39d5:	89 74 24 08          	mov    %esi,0x8(%rsp)
    39d9:	89 54 24 04          	mov    %edx,0x4(%rsp)
    39dd:	89 0c 24             	mov    %ecx,(%rsp)
    39e0:	81 7c 24 0c ff 00 00 00 	cmpl   $0xff,0xc(%rsp)
    39e8:	77 15                	ja     39ff <PCI_Read32+0x32>
    39ea:	83 7c 24 08 1f       	cmpl   $0x1f,0x8(%rsp)
    39ef:	77 0e                	ja     39ff <PCI_Read32+0x32>
    39f1:	83 7c 24 04 07       	cmpl   $0x7,0x4(%rsp)
    39f6:	77 07                	ja     39ff <PCI_Read32+0x32>
    39f8:	81 3c 24 ff 00 00 00 	cmpl   $0xff,(%rsp)
    39ff:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a03:	c1 e0 10             	shl    $0x10,%eax
    3a06:	89 c2                	mov    %eax,%edx
    3a08:	8b 44 24 08          	mov    0x8(%rsp),%eax
    3a0c:	c1 e0 0b             	shl    $0xb,%eax
    3a0f:	09 c2                	or     %eax,%edx
    3a11:	8b 44 24 04          	mov    0x4(%rsp),%eax
    3a15:	c1 e0 08             	shl    $0x8,%eax
    3a18:	09 c2                	or     %eax,%edx
    3a1a:	8b 04 24             	mov    (%rsp),%eax
    3a1d:	25 fc 00 00 00       	and    $0xfc,%eax
    3a22:	09 d0                	or     %edx,%eax
    3a24:	0d 00 00 00 80       	or     $0x80000000,%eax
    3a29:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3a2d:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3a31:	89 c6                	mov    %eax,%esi
    3a33:	bf f8 0c 00 00       	mov    $0xcf8,%edi
    3a38:	e8 00 00 00 00       	call   3a3d <PCI_Read32+0x70>	3a39: R_X86_64_PLT32	PortOut32-0x4
    3a3d:	bf fc 0c 00 00       	mov    $0xcfc,%edi
    3a42:	e8 00 00 00 00       	call   3a47 <PCI_Read32+0x7a>	3a43: R_X86_64_PLT32	PortIn32-0x4
    3a47:	89 44 24 18          	mov    %eax,0x18(%rsp)
    3a4b:	8b 44 24 18          	mov    0x18(%rsp),%eax
    3a4f:	48 83 c4 28          	add    $0x28,%rsp
    3a53:	c3                   	ret

0000000000003a54 <PCI_Read16>:
    3a54:	48 83 ec 28          	sub    $0x28,%rsp
    3a58:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    3a5c:	89 74 24 08          	mov    %esi,0x8(%rsp)
    3a60:	89 54 24 04          	mov    %edx,0x4(%rsp)
    3a64:	89 0c 24             	mov    %ecx,(%rsp)
    3a67:	8b 0c 24             	mov    (%rsp),%ecx
    3a6a:	8b 54 24 04          	mov    0x4(%rsp),%edx
    3a6e:	8b 74 24 08          	mov    0x8(%rsp),%esi
    3a72:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a76:	89 c7                	mov    %eax,%edi
    3a78:	e8 50 ff ff ff       	call   39cd <PCI_Read32>
    3a7d:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3a81:	8b 04 24             	mov    (%rsp),%eax
    3a84:	83 e0 02             	and    $0x2,%eax
    3a87:	c1 e0 03             	shl    $0x3,%eax
    3a8a:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3a8e:	89 c1                	mov    %eax,%ecx
    3a90:	d3 ea                	shr    %cl,%edx
    3a92:	89 d0                	mov    %edx,%eax
    3a94:	48 83 c4 28          	add    $0x28,%rsp
    3a98:	c3                   	ret

0000000000003a99 <PCI_Read08>:
    3a99:	48 83 ec 28          	sub    $0x28,%rsp
    3a9d:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    3aa1:	89 74 24 08          	mov    %esi,0x8(%rsp)
    3aa5:	89 54 24 04          	mov    %edx,0x4(%rsp)
    3aa9:	89 0c 24             	mov    %ecx,(%rsp)
    3aac:	8b 0c 24             	mov    (%rsp),%ecx
    3aaf:	8b 54 24 04          	mov    0x4(%rsp),%edx
    3ab3:	8b 74 24 08          	mov    0x8(%rsp),%esi
    3ab7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3abb:	89 c7                	mov    %eax,%edi
    3abd:	e8 0b ff ff ff       	call   39cd <PCI_Read32>
    3ac2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3ac6:	8b 04 24             	mov    (%rsp),%eax
    3ac9:	83 e0 03             	and    $0x3,%eax
    3acc:	c1 e0 03             	shl    $0x3,%eax
    3acf:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3ad3:	89 c1                	mov    %eax,%ecx
    3ad5:	d3 ea                	shr    %cl,%edx
    3ad7:	89 d0                	mov    %edx,%eax
    3ad9:	48 83 c4 28          	add    $0x28,%rsp
    3add:	c3                   	ret

0000000000003ade <PCI_Init>:
    3ade:	48 83 ec 28          	sub    $0x28,%rsp
    3ae2:	c7 44 24 04 00 00 00 00 	movl   $0x0,0x4(%rsp)
    3aea:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    3af2:	e9 0b 01 00 00       	jmp    3c02 <PCI_Init+0x124>
    3af7:	c7 44 24 18 00 00 00 00 	movl   $0x0,0x18(%rsp)
    3aff:	e9 ee 00 00 00       	jmp    3bf2 <PCI_Init+0x114>
    3b04:	c7 44 24 14 00 00 00 00 	movl   $0x0,0x14(%rsp)
    3b0c:	e9 ce 00 00 00       	jmp    3bdf <PCI_Init+0x101>
    3b11:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b15:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b19:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b1d:	b9 00 00 00 00       	mov    $0x0,%ecx
    3b22:	89 c7                	mov    %eax,%edi
    3b24:	e8 2b ff ff ff       	call   3a54 <PCI_Read16>
    3b29:	66 89 44 24 12       	mov    %ax,0x12(%rsp)
    3b2e:	66 83 7c 24 12 ff    	cmpw   $0xffff,0x12(%rsp)
    3b34:	0f 84 9f 00 00 00    	je     3bd9 <PCI_Init+0xfb>
    3b3a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b3e:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b42:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b46:	b9 0d 00 00 00       	mov    $0xd,%ecx
    3b4b:	89 c7                	mov    %eax,%edi
    3b4d:	e8 47 ff ff ff       	call   3a99 <PCI_Read08>
    3b52:	88 44 24 11          	mov    %al,0x11(%rsp)
    3b56:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b5a:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b5e:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b62:	b9 08 00 00 00       	mov    $0x8,%ecx
    3b67:	89 c7                	mov    %eax,%edi
    3b69:	e8 5f fe ff ff       	call   39cd <PCI_Read32>
    3b6e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3b72:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b76:	c1 e8 18             	shr    $0x18,%eax
    3b79:	88 44 24 0b          	mov    %al,0xb(%rsp)
    3b7d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b81:	c1 e8 10             	shr    $0x10,%eax
    3b84:	88 44 24 0a          	mov    %al,0xa(%rsp)
    3b88:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b8c:	c1 e8 08             	shr    $0x8,%eax
    3b8f:	88 44 24 09          	mov    %al,0x9(%rsp)
    3b93:	80 7c 24 0b 0c       	cmpb   $0xc,0xb(%rsp)
    3b98:	75 2d                	jne    3bc7 <PCI_Init+0xe9>
    3b9a:	80 7c 24 0a 03       	cmpb   $0x3,0xa(%rsp)
    3b9f:	75 26                	jne    3bc7 <PCI_Init+0xe9>
    3ba1:	80 7c 24 09 30       	cmpb   $0x30,0x9(%rsp)
    3ba6:	75 1f                	jne    3bc7 <PCI_Init+0xe9>
    3ba8:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3bac:	c1 e0 10             	shl    $0x10,%eax
    3baf:	89 c2                	mov    %eax,%edx
    3bb1:	8b 44 24 18          	mov    0x18(%rsp),%eax
    3bb5:	c1 e0 08             	shl    $0x8,%eax
    3bb8:	09 d0                	or     %edx,%eax
    3bba:	0b 44 24 14          	or     0x14(%rsp),%eax
    3bbe:	0d 00 00 00 80       	or     $0x80000000,%eax
    3bc3:	89 44 24 04          	mov    %eax,0x4(%rsp)
    3bc7:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
    3bcc:	75 0c                	jne    3bda <PCI_Init+0xfc>
    3bce:	0f b6 44 24 11       	movzbl 0x11(%rsp),%eax
    3bd3:	84 c0                	test   %al,%al
    3bd5:	79 15                	jns    3bec <PCI_Init+0x10e>
    3bd7:	eb 01                	jmp    3bda <PCI_Init+0xfc>
    3bd9:	90                   	nop
    3bda:	83 44 24 14 01       	addl   $0x1,0x14(%rsp)
    3bdf:	83 7c 24 14 07       	cmpl   $0x7,0x14(%rsp)
    3be4:	0f 86 27 ff ff ff    	jbe    3b11 <PCI_Init+0x33>
    3bea:	eb 01                	jmp    3bed <PCI_Init+0x10f>
    3bec:	90                   	nop
    3bed:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    3bf2:	83 7c 24 18 1f       	cmpl   $0x1f,0x18(%rsp)
    3bf7:	0f 86 07 ff ff ff    	jbe    3b04 <PCI_Init+0x26>
    3bfd:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    3c02:	81 7c 24 1c ff 00 00 00 	cmpl   $0xff,0x1c(%rsp)
    3c0a:	0f 86 e7 fe ff ff    	jbe    3af7 <PCI_Init+0x19>
    3c10:	8b 44 24 04          	mov    0x4(%rsp),%eax
    3c14:	48 83 c4 28          	add    $0x28,%rsp
    3c18:	c3                   	ret

0000000000003c19 <PCI_EnableMSI>:
    3c19:	48 83 ec 38          	sub    $0x38,%rsp
    3c1d:	89 f1                	mov    %esi,%ecx
    3c1f:	89 d0                	mov    %edx,%eax
    3c21:	89 fa                	mov    %edi,%edx
    3c23:	88 54 24 0c          	mov    %dl,0xc(%rsp)
    3c27:	89 ca                	mov    %ecx,%edx
    3c29:	88 54 24 08          	mov    %dl,0x8(%rsp)
    3c2d:	88 44 24 04          	mov    %al,0x4(%rsp)
    3c31:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3c36:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3c3b:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3c40:	b9 06 00 00 00       	mov    $0x6,%ecx
    3c45:	89 c7                	mov    %eax,%edi
    3c47:	e8 08 fe ff ff       	call   3a54 <PCI_Read16>
    3c4c:	66 89 44 24 2a       	mov    %ax,0x2a(%rsp)
    3c51:	0f b7 44 24 2a       	movzwl 0x2a(%rsp),%eax
    3c56:	83 e0 10             	and    $0x10,%eax
    3c59:	85 c0                	test   %eax,%eax
    3c5b:	75 0a                	jne    3c67 <PCI_EnableMSI+0x4e>
    3c5d:	b8 01 00 00 00       	mov    $0x1,%eax
    3c62:	e9 f2 00 00 00       	jmp    3d59 <PCI_EnableMSI+0x140>
    3c67:	c6 44 24 2f 00       	movb   $0x0,0x2f(%rsp)
    3c6c:	c6 44 24 29 00       	movb   $0x0,0x29(%rsp)
    3c71:	c6 44 24 2e 00       	movb   $0x0,0x2e(%rsp)
    3c76:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3c7b:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3c80:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3c85:	b9 34 00 00 00       	mov    $0x34,%ecx
    3c8a:	89 c7                	mov    %eax,%edi
    3c8c:	e8 08 fe ff ff       	call   3a99 <PCI_Read08>
    3c91:	88 44 24 2d          	mov    %al,0x2d(%rsp)
    3c95:	80 64 24 2d fc       	andb   $0xfc,0x2d(%rsp)
    3c9a:	eb 4c                	jmp    3ce8 <PCI_EnableMSI+0xcf>
    3c9c:	0f b6 4c 24 2d       	movzbl 0x2d(%rsp),%ecx
    3ca1:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3ca6:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3cab:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3cb0:	89 c7                	mov    %eax,%edi
    3cb2:	e8 16 fd ff ff       	call   39cd <PCI_Read32>
    3cb7:	89 44 24 24          	mov    %eax,0x24(%rsp)
    3cbb:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3cbf:	88 44 24 23          	mov    %al,0x23(%rsp)
    3cc3:	80 7c 24 23 05       	cmpb   $0x5,0x23(%rsp)
    3cc8:	75 10                	jne    3cda <PCI_EnableMSI+0xc1>
    3cca:	c6 44 24 2f 01       	movb   $0x1,0x2f(%rsp)
    3ccf:	0f b6 44 24 2d       	movzbl 0x2d(%rsp),%eax
    3cd4:	88 44 24 2e          	mov    %al,0x2e(%rsp)
    3cd8:	eb 15                	jmp    3cef <PCI_EnableMSI+0xd6>
    3cda:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3cde:	c1 e8 08             	shr    $0x8,%eax
    3ce1:	83 e0 fc             	and    $0xfffffffc,%eax
    3ce4:	88 44 24 2d          	mov    %al,0x2d(%rsp)
    3ce8:	80 7c 24 2d 00       	cmpb   $0x0,0x2d(%rsp)
    3ced:	75 ad                	jne    3c9c <PCI_EnableMSI+0x83>
    3cef:	0f b6 4c 24 2e       	movzbl 0x2e(%rsp),%ecx
    3cf4:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3cf9:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3cfe:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3d03:	89 c7                	mov    %eax,%edi
    3d05:	e8 c3 fc ff ff       	call   39cd <PCI_Read32>
    3d0a:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3d0e:	80 7c 24 29 00       	cmpb   $0x0,0x29(%rsp)
    3d13:	74 07                	je     3d1c <PCI_EnableMSI+0x103>
    3d15:	b8 00 00 00 00       	mov    $0x0,%eax
    3d1a:	eb 3d                	jmp    3d59 <PCI_EnableMSI+0x140>
    3d1c:	80 7c 24 2f 00       	cmpb   $0x0,0x2f(%rsp)
    3d21:	74 31                	je     3d54 <PCI_EnableMSI+0x13b>
    3d23:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d27:	c1 e8 11             	shr    $0x11,%eax
    3d2a:	83 e0 07             	and    $0x7,%eax
    3d2d:	88 44 24 1b          	mov    %al,0x1b(%rsp)
    3d31:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d35:	c1 e8 17             	shr    $0x17,%eax
    3d38:	83 e0 01             	and    $0x1,%eax
    3d3b:	88 44 24 1a          	mov    %al,0x1a(%rsp)
    3d3f:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d43:	c1 e8 18             	shr    $0x18,%eax
    3d46:	83 e0 01             	and    $0x1,%eax
    3d49:	88 44 24 19          	mov    %al,0x19(%rsp)
    3d4d:	b8 00 00 00 00       	mov    $0x0,%eax
    3d52:	eb 05                	jmp    3d59 <PCI_EnableMSI+0x140>
    3d54:	b8 01 00 00 00       	mov    $0x1,%eax
    3d59:	48 83 c4 38          	add    $0x38,%rsp
    3d5d:	c3                   	ret

0000000000003d5e <InitTerminal>:
    3d5e:	53                   	push   %rbx
    3d5f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3d63:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    3d68:	89 74 24 24          	mov    %esi,0x24(%rsp)
    3d6c:	89 54 24 20          	mov    %edx,0x20(%rsp)
    3d70:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3d75:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    3d7a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    3d7f:	8b 44 24 20          	mov    0x20(%rsp),%eax
    3d83:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3d88:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3d8c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3d91:	48 c7 44 24 50 00 00 00 00 	movq   $0x0,0x50(%rsp)
    3d9a:	48 c7 44 24 38 01 00 00 00 	movq   $0x1,0x38(%rsp)
    3da3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3da8:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3dad:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3db2:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3db7:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3dbc:	c6 00 00             	movb   $0x0,(%rax)
    3dbf:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3dc4:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3dc9:	48 89 10             	mov    %rdx,(%rax)
    3dcc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3dd1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    3dd6:	48 8b 84 24 90 00 00 00 	mov    0x90(%rsp),%rax
    3dde:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3de3:	c7 44 24 70 00 00 00 00 	movl   $0x0,0x70(%rsp)
    3deb:	48 c7 44 24 78 00 00 00 00 	movq   $0x0,0x78(%rsp)
    3df4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3df9:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    3dfe:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3e03:	48 89 08             	mov    %rcx,(%rax)
    3e06:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3e0a:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    3e0f:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    3e14:	48 89 48 10          	mov    %rcx,0x10(%rax)
    3e18:	48 89 58 18          	mov    %rbx,0x18(%rax)
    3e1c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    3e21:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
    3e26:	48 89 48 20          	mov    %rcx,0x20(%rax)
    3e2a:	48 89 58 28          	mov    %rbx,0x28(%rax)
    3e2e:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
    3e33:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    3e38:	48 89 48 30          	mov    %rcx,0x30(%rax)
    3e3c:	48 89 58 38          	mov    %rbx,0x38(%rax)
    3e40:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    3e45:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    3e4a:	48 89 48 40          	mov    %rcx,0x40(%rax)
    3e4e:	48 89 58 48          	mov    %rbx,0x48(%rax)
    3e52:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3e57:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    3e5b:	5b                   	pop    %rbx
    3e5c:	c3                   	ret

0000000000003e5d <WriteToTerminal>:
    3e5d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    3e64:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    3e69:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3e6e:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    3e72:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    3e77:	75 2f                	jne    3ea8 <WriteToTerminal+0x4b>
    3e79:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3e7e:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    3e86:	eb 05                	jmp    3e8d <WriteToTerminal+0x30>
    3e88:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    3e8d:	48 8b 84 24 98 00 00 00 	mov    0x98(%rsp),%rax
    3e95:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3e99:	48 89 94 24 98 00 00 00 	mov    %rdx,0x98(%rsp)
    3ea1:	0f b6 00             	movzbl (%rax),%eax
    3ea4:	84 c0                	test   %al,%al
    3ea6:	75 e0                	jne    3e88 <WriteToTerminal+0x2b>
    3ea8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ead:	8b 40 40             	mov    0x40(%rax),%eax
    3eb0:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    3eb7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ebc:	48 8b 40 48          	mov    0x48(%rax),%rax
    3ec0:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    3ec8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ecd:	48 8b 40 30          	mov    0x30(%rax),%rax
    3ed1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    3ed6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3edb:	48 8b 40 30          	mov    0x30(%rax),%rax
    3edf:	48 83 c0 1c          	add    $0x1c,%rax
    3ee3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3ee8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3eed:	48 8b 40 20          	mov    0x20(%rax),%rax
    3ef1:	89 c2                	mov    %eax,%edx
    3ef3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3ef7:	01 d0                	add    %edx,%eax
    3ef9:	89 44 24 54          	mov    %eax,0x54(%rsp)
    3efd:	c7 84 24 84 00 00 00 00 00 00 00 	movl   $0x0,0x84(%rsp)
    3f08:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3f0d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    3f12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3f17:	48 8b 40 28          	mov    0x28(%rax),%rax
    3f1b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    3f20:	e9 dc 01 00 00       	jmp    4101 <WriteToTerminal+0x2a4>
    3f25:	c6 44 24 6f 00       	movb   $0x0,0x6f(%rsp)
    3f2a:	c7 44 24 68 00 00 00 00 	movl   $0x0,0x68(%rsp)
    3f32:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f37:	0f b6 00             	movzbl (%rax),%eax
    3f3a:	3c 09                	cmp    $0x9,%al
    3f3c:	75 11                	jne    3f4f <WriteToTerminal+0xf2>
    3f3e:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3f43:	8b 40 04             	mov    0x4(%rax),%eax
    3f46:	c1 e0 02             	shl    $0x2,%eax
    3f49:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f4d:	eb 4d                	jmp    3f9c <WriteToTerminal+0x13f>
    3f4f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f54:	0f b6 00             	movzbl (%rax),%eax
    3f57:	3c 0a                	cmp    $0xa,%al
    3f59:	75 0e                	jne    3f69 <WriteToTerminal+0x10c>
    3f5b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3f60:	8b 40 38             	mov    0x38(%rax),%eax
    3f63:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f67:	eb 33                	jmp    3f9c <WriteToTerminal+0x13f>
    3f69:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f6e:	0f b6 00             	movzbl (%rax),%eax
    3f71:	0f b6 d0             	movzbl %al,%edx
    3f74:	48 89 d0             	mov    %rdx,%rax
    3f77:	48 01 c0             	add    %rax,%rax
    3f7a:	48 01 d0             	add    %rdx,%rax
    3f7d:	48 c1 e0 04          	shl    $0x4,%rax
    3f81:	48 8d 90 00 fa ff ff 	lea    -0x600(%rax),%rdx
    3f88:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3f8d:	48 01 d0             	add    %rdx,%rax
    3f90:	8b 40 04             	mov    0x4(%rax),%eax
    3f93:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f97:	c6 44 24 6f 01       	movb   $0x1,0x6f(%rsp)
    3f9c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fa1:	0f b6 00             	movzbl (%rax),%eax
    3fa4:	3c 20                	cmp    $0x20,%al
    3fa6:	74 24                	je     3fcc <WriteToTerminal+0x16f>
    3fa8:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fad:	0f b6 00             	movzbl (%rax),%eax
    3fb0:	3c 09                	cmp    $0x9,%al
    3fb2:	74 18                	je     3fcc <WriteToTerminal+0x16f>
    3fb4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fb9:	0f b6 00             	movzbl (%rax),%eax
    3fbc:	3c 0a                	cmp    $0xa,%al
    3fbe:	74 0c                	je     3fcc <WriteToTerminal+0x16f>
    3fc0:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fc5:	0f b6 00             	movzbl (%rax),%eax
    3fc8:	3c 2d                	cmp    $0x2d,%al
    3fca:	75 35                	jne    4001 <WriteToTerminal+0x1a4>
    3fcc:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    3fd1:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    3fd9:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    3fde:	74 16                	je     3ff6 <WriteToTerminal+0x199>
    3fe0:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    3fe7:	8b 44 24 68          	mov    0x68(%rsp),%eax
    3feb:	01 d0                	add    %edx,%eax
    3fed:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
    3ff4:	eb 0b                	jmp    4001 <WriteToTerminal+0x1a4>
    3ff6:	c7 84 24 84 00 00 00 00 00 00 00 	movl   $0x0,0x84(%rsp)
    4001:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    4008:	8b 44 24 68          	mov    0x68(%rsp),%eax
    400c:	01 c2                	add    %eax,%edx
    400e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4013:	8b 40 38             	mov    0x38(%rax),%eax
    4016:	39 c2                	cmp    %eax,%edx
    4018:	0f 82 b7 00 00 00    	jb     40d5 <WriteToTerminal+0x278>
    401e:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    4023:	74 0d                	je     4032 <WriteToTerminal+0x1d5>
    4025:	8b 44 24 68          	mov    0x68(%rsp),%eax
    4029:	01 84 24 94 00 00 00 	add    %eax,0x94(%rsp)
    4030:	eb 0b                	jmp    403d <WriteToTerminal+0x1e0>
    4032:	c7 84 24 94 00 00 00 00 00 00 00 	movl   $0x0,0x94(%rsp)
    403d:	48 83 bc 24 88 00 00 00 00 	cmpq   $0x0,0x88(%rsp)
    4046:	75 3c                	jne    4084 <WriteToTerminal+0x227>
    4048:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    404d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    4051:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4056:	48 8b 40 08          	mov    0x8(%rax),%rax
    405a:	48 8d 48 01          	lea    0x1(%rax),%rcx
    405e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4063:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    4067:	48 c1 e0 03          	shl    $0x3,%rax
    406b:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    406f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    4074:	48 89 02             	mov    %rax,(%rdx)
    4077:	8b 44 24 68          	mov    0x68(%rsp),%eax
    407b:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    4082:	eb 5c                	jmp    40e0 <WriteToTerminal+0x283>
    4084:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4089:	48 8b 70 10          	mov    0x10(%rax),%rsi
    408d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4092:	48 8b 40 08          	mov    0x8(%rax),%rax
    4096:	48 8d 48 01          	lea    0x1(%rax),%rcx
    409a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    409f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    40a3:	48 c1 e0 03          	shl    $0x3,%rax
    40a7:	48 01 f0             	add    %rsi,%rax
    40aa:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    40b2:	48 83 c2 01          	add    $0x1,%rdx
    40b6:	48 89 10             	mov    %rdx,(%rax)
    40b9:	48 c7 84 24 88 00 00 00 00 00 00 00 	movq   $0x0,0x88(%rsp)
    40c5:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
    40cc:	29 84 24 94 00 00 00 	sub    %eax,0x94(%rsp)
    40d3:	eb 0b                	jmp    40e0 <WriteToTerminal+0x283>
    40d5:	8b 44 24 68          	mov    0x68(%rsp),%eax
    40d9:	01 84 24 94 00 00 00 	add    %eax,0x94(%rsp)
    40e0:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    40e5:	48 8d 42 01          	lea    0x1(%rdx),%rax
    40e9:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    40ee:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    40f3:	48 8d 48 01          	lea    0x1(%rax),%rcx
    40f7:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    40fc:	0f b6 12             	movzbl (%rdx),%edx
    40ff:	88 10                	mov    %dl,(%rax)
    4101:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    4106:	0f b6 00             	movzbl (%rax),%eax
    4109:	84 c0                	test   %al,%al
    410b:	0f 85 14 fe ff ff    	jne    3f25 <WriteToTerminal+0xc8>
    4111:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    4116:	c6 00 00             	movb   $0x0,(%rax)
    4119:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    411e:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    4123:	48 89 50 28          	mov    %rdx,0x28(%rax)
    4127:	8b 54 24 54          	mov    0x54(%rsp),%edx
    412b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4130:	48 89 50 20          	mov    %rdx,0x20(%rax)
    4134:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4139:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    4140:	89 50 40             	mov    %edx,0x40(%rax)
    4143:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4148:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    4150:	48 89 50 48          	mov    %rdx,0x48(%rax)
    4154:	90                   	nop
    4155:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    415c:	c3                   	ret

000000000000415d <DrawTerminal>:
    415d:	53                   	push   %rbx
    415e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    4165:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    416a:	48 89 34 24          	mov    %rsi,(%rsp)
    416e:	48 8b 04 24          	mov    (%rsp),%rax
    4172:	48 8b 40 38          	mov    0x38(%rax),%rax
    4176:	48 89 44 24 4c       	mov    %rax,0x4c(%rsp)
    417b:	48 8b 04 24          	mov    (%rsp),%rax
    417f:	48 8b 40 30          	mov    0x30(%rax),%rax
    4183:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    418b:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4193:	48 83 c0 1c          	add    $0x1c,%rax
    4197:	48 89 84 24 80 00 00 00 	mov    %rax,0x80(%rsp)
    419f:	8b 44 24 50          	mov    0x50(%rsp),%eax
    41a3:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    41ab:	8b 52 18             	mov    0x18(%rdx),%edx
    41ae:	89 d3                	mov    %edx,%ebx
    41b0:	ba 00 00 00 00       	mov    $0x0,%edx
    41b5:	f7 f3                	div    %ebx
    41b7:	89 84 24 ac 00 00 00 	mov    %eax,0xac(%rsp)
    41be:	48 8b 04 24          	mov    (%rsp),%rax
    41c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    41c6:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    41cd:	48 39 c2             	cmp    %rax,%rdx
    41d0:	73 0f                	jae    41e1 <DrawTerminal+0x84>
    41d2:	48 8b 04 24          	mov    (%rsp),%rax
    41d6:	48 8b 40 08          	mov    0x8(%rax),%rax
    41da:	89 84 24 ac 00 00 00 	mov    %eax,0xac(%rsp)
    41e1:	c7 44 24 44 00 00 00 00 	movl   $0x0,0x44(%rsp)
    41e9:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    41f1:	8b 40 08             	mov    0x8(%rax),%eax
    41f4:	89 44 24 48          	mov    %eax,0x48(%rsp)
    41f8:	48 8b 04 24          	mov    (%rsp),%rax
    41fc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4200:	48 8b 04 24          	mov    (%rsp),%rax
    4204:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4208:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    420f:	48 29 c1             	sub    %rax,%rcx
    4212:	48 8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%rax
    421a:	48 01 d0             	add    %rdx,%rax
    421d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    4222:	c7 84 24 a8 00 00 00 00 00 00 00 	movl   $0x0,0xa8(%rsp)
    422d:	e9 f2 02 00 00       	jmp    4524 <DrawTerminal+0x3c7>
    4232:	c7 44 24 44 00 00 00 00 	movl   $0x0,0x44(%rsp)
    423a:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    4241:	48 8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%rdx
    4249:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    424e:	48 01 d0             	add    %rdx,%rax
    4251:	48 8b 00             	mov    (%rax),%rax
    4254:	48 89 84 24 a0 00 00 00 	mov    %rax,0xa0(%rsp)
    425c:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    4263:	83 e8 01             	sub    $0x1,%eax
    4266:	39 84 24 a8 00 00 00 	cmp    %eax,0xa8(%rsp)
    426d:	75 15                	jne    4284 <DrawTerminal+0x127>
    426f:	48 8b 04 24          	mov    (%rsp),%rax
    4273:	48 8b 40 28          	mov    0x28(%rax),%rax
    4277:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    427f:	e9 6a 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    4284:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    428b:	83 c0 01             	add    $0x1,%eax
    428e:	89 c0                	mov    %eax,%eax
    4290:	48 8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%rdx
    4298:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    429d:	48 01 d0             	add    %rdx,%rax
    42a0:	48 8b 00             	mov    (%rax),%rax
    42a3:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    42ab:	e9 3e 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    42b0:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    42b8:	0f b6 00             	movzbl (%rax),%eax
    42bb:	3c 0a                	cmp    $0xa,%al
    42bd:	75 0e                	jne    42cd <DrawTerminal+0x170>
    42bf:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    42c8:	e9 21 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    42cd:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    42d5:	0f b6 00             	movzbl (%rax),%eax
    42d8:	3c 09                	cmp    $0x9,%al
    42da:	75 26                	jne    4302 <DrawTerminal+0x1a5>
    42dc:	8b 54 24 44          	mov    0x44(%rsp),%edx
    42e0:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    42e8:	8b 40 04             	mov    0x4(%rax),%eax
    42eb:	c1 e0 02             	shl    $0x2,%eax
    42ee:	01 d0                	add    %edx,%eax
    42f0:	89 44 24 44          	mov    %eax,0x44(%rsp)
    42f4:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    42fd:	e9 ec 01 00 00       	jmp    44ee <DrawTerminal+0x391>
    4302:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    430a:	0f b6 00             	movzbl (%rax),%eax
    430d:	0f b6 d0             	movzbl %al,%edx
    4310:	48 89 d0             	mov    %rdx,%rax
    4313:	48 01 c0             	add    %rax,%rax
    4316:	48 01 d0             	add    %rdx,%rax
    4319:	48 c1 e0 04          	shl    $0x4,%rax
    431d:	48 8d 90 00 fa ff ff 	lea    -0x600(%rax),%rdx
    4324:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    432c:	48 01 d0             	add    %rdx,%rax
    432f:	48 8b 08             	mov    (%rax),%rcx
    4332:	48 8b 58 08          	mov    0x8(%rax),%rbx
    4336:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    433b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    4340:	48 8b 48 10          	mov    0x10(%rax),%rcx
    4344:	48 8b 58 18          	mov    0x18(%rax),%rbx
    4348:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    434d:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    4352:	48 8b 50 28          	mov    0x28(%rax),%rdx
    4356:	48 8b 40 20          	mov    0x20(%rax),%rax
    435a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    435f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    4364:	8b 44 24 44          	mov    0x44(%rsp),%eax
    4368:	8b 54 24 14          	mov    0x14(%rsp),%edx
    436c:	01 c2                	add    %eax,%edx
    436e:	48 8b 04 24          	mov    (%rsp),%rax
    4372:	8b 40 38             	mov    0x38(%rax),%eax
    4375:	39 c2                	cmp    %eax,%edx
    4377:	0f 83 89 01 00 00    	jae    4506 <DrawTerminal+0x3a9>
    437d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4382:	48 85 c0             	test   %rax,%rax
    4385:	0f 84 4c 01 00 00    	je     44d7 <DrawTerminal+0x37a>
    438b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    4390:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4398:	48 01 d0             	add    %rdx,%rax
    439b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    43a0:	c7 84 24 94 00 00 00 00 00 00 00 	movl   $0x0,0x94(%rsp)
    43ab:	e9 14 01 00 00       	jmp    44c4 <DrawTerminal+0x367>
    43b0:	c7 84 24 90 00 00 00 00 00 00 00 	movl   $0x0,0x90(%rsp)
    43bb:	e9 e9 00 00 00       	jmp    44a9 <DrawTerminal+0x34c>
    43c0:	8b 44 24 44          	mov    0x44(%rsp),%eax
    43c4:	8b 54 24 18          	mov    0x18(%rsp),%edx
    43c8:	01 c2                	add    %eax,%edx
    43ca:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    43d1:	01 d0                	add    %edx,%eax
    43d3:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    43d7:	8b 44 24 48          	mov    0x48(%rsp),%eax
    43db:	8b 54 24 34          	mov    0x34(%rsp),%edx
    43df:	89 d1                	mov    %edx,%ecx
    43e1:	29 c8                	sub    %ecx,%eax
    43e3:	89 c2                	mov    %eax,%edx
    43e5:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    43e9:	29 c2                	sub    %eax,%edx
    43eb:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
    43f2:	01 d0                	add    %edx,%eax
    43f4:	89 44 24 68          	mov    %eax,0x68(%rsp)
    43f8:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
    43fc:	0f af 44 24 68       	imul   0x68(%rsp),%eax
    4401:	89 c2                	mov    %eax,%edx
    4403:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    4407:	01 d0                	add    %edx,%eax
    4409:	89 44 24 64          	mov    %eax,0x64(%rsp)
    440d:	8b 44 24 64          	mov    0x64(%rsp),%eax
    4411:	48 8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%rdx
    4419:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    441e:	48 01 d0             	add    %rdx,%rax
    4421:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4426:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    442e:	8b 10                	mov    (%rax),%edx
    4430:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
    4437:	0f af d0             	imul   %eax,%edx
    443a:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    4441:	01 d0                	add    %edx,%eax
    4443:	89 c2                	mov    %eax,%edx
    4445:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    444a:	48 01 d0             	add    %rdx,%rax
    444d:	0f b6 00             	movzbl (%rax),%eax
    4450:	88 44 24 57          	mov    %al,0x57(%rsp)
    4454:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    4459:	88 44 24 40          	mov    %al,0x40(%rsp)
    445d:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    4462:	88 44 24 41          	mov    %al,0x41(%rsp)
    4466:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    446b:	88 44 24 42          	mov    %al,0x42(%rsp)
    446f:	c6 44 24 43 00       	movb   $0x0,0x43(%rsp)
    4474:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
    4479:	0f b6 c0             	movzbl %al,%eax
    447c:	c1 e0 10             	shl    $0x10,%eax
    447f:	89 c2                	mov    %eax,%edx
    4481:	0f b6 44 24 41       	movzbl 0x41(%rsp),%eax
    4486:	0f b6 c0             	movzbl %al,%eax
    4489:	c1 e0 08             	shl    $0x8,%eax
    448c:	09 c2                	or     %eax,%edx
    448e:	0f b6 44 24 42       	movzbl 0x42(%rsp),%eax
    4493:	0f b6 c0             	movzbl %al,%eax
    4496:	09 d0                	or     %edx,%eax
    4498:	89 c2                	mov    %eax,%edx
    449a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    449f:	89 10                	mov    %edx,(%rax)
    44a1:	83 84 24 90 00 00 00 01 	addl   $0x1,0x90(%rsp)
    44a9:	8b 44 24 38          	mov    0x38(%rsp),%eax
    44ad:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
    44b4:	39 c2                	cmp    %eax,%edx
    44b6:	0f 82 04 ff ff ff    	jb     43c0 <DrawTerminal+0x263>
    44bc:	83 84 24 94 00 00 00 01 	addl   $0x1,0x94(%rsp)
    44c4:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    44c8:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    44cf:	39 c2                	cmp    %eax,%edx
    44d1:	0f 82 d9 fe ff ff    	jb     43b0 <DrawTerminal+0x253>
    44d7:	8b 44 24 44          	mov    0x44(%rsp),%eax
    44db:	8b 54 24 14          	mov    0x14(%rsp),%edx
    44df:	01 d0                	add    %edx,%eax
    44e1:	89 44 24 44          	mov    %eax,0x44(%rsp)
    44e5:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    44ee:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    44f6:	48 3b 84 24 98 00 00 00 	cmp    0x98(%rsp),%rax
    44fe:	0f 82 ac fd ff ff    	jb     42b0 <DrawTerminal+0x153>
    4504:	eb 01                	jmp    4507 <DrawTerminal+0x3aa>
    4506:	90                   	nop
    4507:	8b 54 24 48          	mov    0x48(%rsp),%edx
    450b:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4513:	8b 40 18             	mov    0x18(%rax),%eax
    4516:	01 d0                	add    %edx,%eax
    4518:	89 44 24 48          	mov    %eax,0x48(%rsp)
    451c:	83 84 24 a8 00 00 00 01 	addl   $0x1,0xa8(%rsp)
    4524:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    452b:	3b 84 24 ac 00 00 00 	cmp    0xac(%rsp),%eax
    4532:	0f 82 fa fc ff ff    	jb     4232 <DrawTerminal+0xd5>
    4538:	90                   	nop
    4539:	90                   	nop
    453a:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    4541:	5b                   	pop    %rbx
    4542:	c3                   	ret

0000000000004543 <InitGOP>:
    4543:	48 83 ec 38          	sub    $0x38,%rsp
    4547:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    454c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4551:	48 8b 30             	mov    (%rax),%rsi
    4554:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4559:	48 8b 40 18          	mov    0x18(%rax),%rax
    455d:	8b 50 04             	mov    0x4(%rax),%edx
    4560:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    4565:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    456a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    456f:	48 83 ec 20          	sub    $0x20,%rsp
    4573:	49 89 f9             	mov    %rdi,%r9
    4576:	49 89 c8             	mov    %rcx,%r8
    4579:	48 89 c1             	mov    %rax,%rcx
    457c:	ff d6                	call   *%rsi
    457e:	48 83 c4 20          	add    $0x20,%rsp
    4582:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    4586:	90                   	nop
    4587:	48 83 c4 38          	add    $0x38,%rsp
    458b:	c3                   	ret

000000000000458c <Kernel_Entry>:
    458c:	48 81 ec d8 b0 00 00 	sub    $0xb0d8,%rsp
    4593:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    4598:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    459d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    45a2:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    45a7:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    45ac:	4c 89 0c 24          	mov    %r9,(%rsp)
    45b0:	fa                   	cli
    45b1:	48 8d 8c 24 30 10 00 00 	lea    0x1030(%rsp),%rcx
    45b9:	48 8d 94 24 30 80 00 00 	lea    0x8030(%rsp),%rdx
    45c1:	48 8d b4 24 30 b0 00 00 	lea    0xb030(%rsp),%rsi
    45c9:	48 8d 84 24 a0 b0 00 00 	lea    0xb0a0(%rsp),%rax
    45d1:	48 89 c7             	mov    %rax,%rdi
    45d4:	e8 ef db ff ff       	call   21c8 <GDT_Init>
    45d9:	b8 00 00 e0 fe       	mov    $0xfee00000,%eax
    45de:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 45e5 <Kernel_Entry+0x59>	45e1: R_X86_64_PC32	APICBase-0x4
    45e5:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    45ea:	48 89 c7             	mov    %rax,%rdi
    45ed:	e8 20 e0 ff ff       	call   2612 <IDT_Init>
    45f2:	cd 0e                	int    $0xe
    45f4:	fb                   	sti
    45f5:	90                   	nop
    45f6:	eb fd                	jmp    45f5 <Kernel_Entry+0x69>
    45f8:	0f 1f 84 00 00 00 00 00 	nopl   0x0(%rax,%rax,1)

0000000000004600 <PortIn08>:
    4600:	48 89 fa             	mov    %rdi,%rdx
    4603:	48 31 c0             	xor    %rax,%rax
    4606:	ec                   	in     (%dx),%al
    4607:	c3                   	ret

0000000000004608 <PortIn32>:
    4608:	48 89 fa             	mov    %rdi,%rdx
    460b:	48 31 c0             	xor    %rax,%rax
    460e:	ed                   	in     (%dx),%eax
    460f:	c3                   	ret

0000000000004610 <PortOut08>:
    4610:	48 89 fa             	mov    %rdi,%rdx
    4613:	48 89 f0             	mov    %rsi,%rax
    4616:	ee                   	out    %al,(%dx)
    4617:	c3                   	ret

0000000000004618 <PortOut32>:
    4618:	48 89 fa             	mov    %rdi,%rdx
    461b:	48 89 f0             	mov    %rsi,%rax
    461e:	ef                   	out    %eax,(%dx)
    461f:	c3                   	ret

0000000000004620 <gdtr>:
	...

000000000000462a <SetGDTR>:
    462a:	48 89 3d f1 ff ff ff 	mov    %rdi,-0xf(%rip)        # 4622 <gdtr+0x2>
    4631:	66 89 35 e8 ff ff ff 	mov    %si,-0x18(%rip)        # 4620 <gdtr>
    4638:	0f 01 15 e1 ff ff ff 	lgdt   -0x1f(%rip)        # 4620 <gdtr>

000000000000463f <SetGDTR.L>:
    463f:	c3                   	ret

0000000000004640 <SetTR>:
    4640:	0f 00 df             	ltr    %di
    4643:	c3                   	ret

0000000000004644 <idtr>:
	...

000000000000464e <SetIDTR>:
    464e:	48 89 3d f1 ff ff ff 	mov    %rdi,-0xf(%rip)        # 4646 <idtr+0x2>
    4655:	66 89 35 e8 ff ff ff 	mov    %si,-0x18(%rip)        # 4644 <idtr>
    465c:	0f 01 1d e1 ff ff ff 	lidt   -0x1f(%rip)        # 4644 <idtr>
    4663:	c3                   	ret

0000000000004664 <GetMSR>:
    4664:	89 f9                	mov    %edi,%ecx
    4666:	0f 32                	rdmsr
    4668:	48 c1 e2 20          	shl    $0x20,%rdx
    466c:	48 09 d0             	or     %rdx,%rax
    466f:	c3                   	ret

0000000000004670 <SetMSR>:
    4670:	89 f9                	mov    %edi,%ecx
    4672:	89 f0                	mov    %esi,%eax
    4674:	48 c1 ee 20          	shr    $0x20,%rsi
    4678:	89 f2                	mov    %esi,%edx
    467a:	0f 30                	wrmsr
    467c:	c3                   	ret

000000000000467d <GetCR0>:
    467d:	0f 20 c0             	mov    %cr0,%rax
    4680:	c3                   	ret

0000000000004681 <GetCR3>:
    4681:	0f 20 d8             	mov    %cr3,%rax
    4684:	c3                   	ret

0000000000004685 <GetCR4>:
    4685:	0f 20 e0             	mov    %cr4,%rax
    4688:	c3                   	ret

0000000000004689 <SetCR3>:
    4689:	0f 22 df             	mov    %rdi,%cr3
    468c:	c3                   	ret

000000000000468d <DisableInterrupts>:
    468d:	fa                   	cli
    468e:	c3                   	ret

000000000000468f <EnableInterrupts>:
    468f:	fb                   	sti
    4690:	c3                   	ret

0000000000004691 <InvalidateTLBEntry>:
    4691:	0f 01 3f             	invlpg (%rdi)
    4694:	c3                   	ret

0000000000004695 <GetInterruptStep>:
    4695:	eb 04                	jmp    469b <GetInterruptStep.B>

0000000000004697 <GetInterruptStep.A>:
    4697:	6a 00                	push   $0x0
    4699:	eb 00                	jmp    469b <GetInterruptStep.B>

000000000000469b <GetInterruptStep.B>:
    469b:	48 b8 00 00 00 00 00 00 00 00 	movabs $0x0,%rax	469d: R_X86_64_64	.text+0x469b
    46a5:	48 2d 00 00 00 00    	sub    $0x0,%rax	46a7: R_X86_64_32S	.text+0x4697
    46ab:	c3                   	ret

00000000000046ac <InterruptSwitch>:
    46ac:	6a 00                	push   $0x0
    46ae:	eb 76                	jmp    4726 <InterruptSwitch.End>
    46b0:	6a 01                	push   $0x1
    46b2:	eb 72                	jmp    4726 <InterruptSwitch.End>
    46b4:	6a 02                	push   $0x2
    46b6:	eb 6e                	jmp    4726 <InterruptSwitch.End>
    46b8:	6a 03                	push   $0x3
    46ba:	eb 6a                	jmp    4726 <InterruptSwitch.End>
    46bc:	6a 04                	push   $0x4
    46be:	eb 66                	jmp    4726 <InterruptSwitch.End>
    46c0:	6a 05                	push   $0x5
    46c2:	eb 62                	jmp    4726 <InterruptSwitch.End>
    46c4:	6a 06                	push   $0x6
    46c6:	eb 5e                	jmp    4726 <InterruptSwitch.End>
    46c8:	6a 07                	push   $0x7
    46ca:	eb 5a                	jmp    4726 <InterruptSwitch.End>
    46cc:	6a 08                	push   $0x8
    46ce:	eb 56                	jmp    4726 <InterruptSwitch.End>
    46d0:	6a 09                	push   $0x9
    46d2:	eb 52                	jmp    4726 <InterruptSwitch.End>
    46d4:	6a 0a                	push   $0xa
    46d6:	eb 4e                	jmp    4726 <InterruptSwitch.End>
    46d8:	6a 0b                	push   $0xb
    46da:	eb 4a                	jmp    4726 <InterruptSwitch.End>
    46dc:	6a 0c                	push   $0xc
    46de:	eb 46                	jmp    4726 <InterruptSwitch.End>
    46e0:	6a 0d                	push   $0xd
    46e2:	eb 42                	jmp    4726 <InterruptSwitch.End>
    46e4:	6a 0e                	push   $0xe
    46e6:	eb 3e                	jmp    4726 <InterruptSwitch.End>
    46e8:	6a 0f                	push   $0xf
    46ea:	eb 3a                	jmp    4726 <InterruptSwitch.End>
    46ec:	6a 10                	push   $0x10
    46ee:	eb 36                	jmp    4726 <InterruptSwitch.End>
    46f0:	6a 11                	push   $0x11
    46f2:	eb 32                	jmp    4726 <InterruptSwitch.End>
    46f4:	6a 12                	push   $0x12
    46f6:	eb 2e                	jmp    4726 <InterruptSwitch.End>
    46f8:	6a 13                	push   $0x13
    46fa:	eb 2a                	jmp    4726 <InterruptSwitch.End>
    46fc:	6a 14                	push   $0x14
    46fe:	eb 26                	jmp    4726 <InterruptSwitch.End>
    4700:	6a 15                	push   $0x15
    4702:	eb 22                	jmp    4726 <InterruptSwitch.End>
    4704:	6a 16                	push   $0x16
    4706:	eb 1e                	jmp    4726 <InterruptSwitch.End>
    4708:	6a 17                	push   $0x17
    470a:	eb 1a                	jmp    4726 <InterruptSwitch.End>
    470c:	6a 18                	push   $0x18
    470e:	eb 16                	jmp    4726 <InterruptSwitch.End>
    4710:	6a 19                	push   $0x19
    4712:	eb 12                	jmp    4726 <InterruptSwitch.End>
    4714:	6a 1a                	push   $0x1a
    4716:	eb 0e                	jmp    4726 <InterruptSwitch.End>
    4718:	6a 1b                	push   $0x1b
    471a:	eb 0a                	jmp    4726 <InterruptSwitch.End>
    471c:	6a 1c                	push   $0x1c
    471e:	eb 06                	jmp    4726 <InterruptSwitch.End>
    4720:	6a 1d                	push   $0x1d
    4722:	eb 02                	jmp    4726 <InterruptSwitch.End>
    4724:	6a 1e                	push   $0x1e

0000000000004726 <InterruptSwitch.End>:
    4726:	9c                   	pushf
    4727:	41 57                	push   %r15
    4729:	41 56                	push   %r14
    472b:	41 55                	push   %r13
    472d:	41 54                	push   %r12
    472f:	41 53                	push   %r11
    4731:	41 52                	push   %r10
    4733:	41 51                	push   %r9
    4735:	41 50                	push   %r8
    4737:	55                   	push   %rbp
    4738:	57                   	push   %rdi
    4739:	56                   	push   %rsi
    473a:	52                   	push   %rdx
    473b:	51                   	push   %rcx
    473c:	53                   	push   %rbx
    473d:	50                   	push   %rax
    473e:	48 31 d2             	xor    %rdx,%rdx
    4741:	8a 94 24 80 00 00 00 	mov    0x80(%rsp),%dl
    4748:	89 d1                	mov    %edx,%ecx
    474a:	83 e1 1f             	and    $0x1f,%ecx
    474d:	48 8b 14 fd 00 00 00 00 	mov    0x0(,%rdi,8),%rdx	4751: R_X86_64_32S	InterruptHandlers
    4755:	ff d2                	call   *%rdx
    4757:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 475d <InterruptSwitch.End+0x37>	4759: R_X86_64_PC32	APICBase+0xfc
    475d:	bb 01 00 00 00       	mov    $0x1,%ebx
    4762:	d3 e3                	shl    %cl,%ebx
    4764:	21 d8                	and    %ebx,%eax
    4766:	83 f8 00             	cmp    $0x0,%eax
    4769:	74 0d                	je     4778 <InterruptSwitch.no_eoi>
    476b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4772 <InterruptSwitch.End+0x4c>	476e: R_X86_64_PC32	APICBase+0xac
    4772:	c7 00 01 00 00 00    	movl   $0x1,(%rax)

0000000000004778 <InterruptSwitch.no_eoi>:
    4778:	58                   	pop    %rax
    4779:	5b                   	pop    %rbx
    477a:	59                   	pop    %rcx
    477b:	5a                   	pop    %rdx
    477c:	5e                   	pop    %rsi
    477d:	5f                   	pop    %rdi
    477e:	5d                   	pop    %rbp
    477f:	41 58                	pop    %r8
    4781:	41 59                	pop    %r9
    4783:	41 5a                	pop    %r10
    4785:	41 5b                	pop    %r11
    4787:	41 5c                	pop    %r12
    4789:	41 5d                	pop    %r13
    478b:	41 5e                	pop    %r14
    478d:	41 5f                	pop    %r15
    478f:	9d                   	popf
    4790:	48 83 c4 01          	add    $0x1,%rsp
    4794:	48 cf                	iretq

build/kernel:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <KernelError>:
       0:	48 83 ec 18          	sub    $0x18,%rsp
       4:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
       9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
       d:	48 89 14 24          	mov    %rdx,(%rsp)
      11:	90                   	nop
      12:	48 83 c4 18          	add    $0x18,%rsp
      16:	c3                   	ret

0000000000000017 <V3r32>:
      17:	48 83 ec 48          	sub    $0x48,%rsp
      1b:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
      21:	f3 0f 11 4c 24 18    	movss  %xmm1,0x18(%rsp)
      27:	f3 0f 11 54 24 14    	movss  %xmm2,0x14(%rsp)
      2d:	f3 0f 10 44 24 1c    	movss  0x1c(%rsp),%xmm0
      33:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
      39:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
      3f:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
      45:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
      4b:	f3 0f 11 44 24 30    	movss  %xmm0,0x30(%rsp)
      51:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
      56:	48 89 44 24 34       	mov    %rax,0x34(%rsp)
      5b:	8b 44 24 30          	mov    0x30(%rsp),%eax
      5f:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
      63:	48 8b 54 24 34       	mov    0x34(%rsp),%rdx
      68:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
      6c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
      71:	66 48 0f 6e c8       	movq   %rax,%xmm1
      76:	48 83 c4 48          	add    $0x48,%rsp
      7a:	c3                   	ret

000000000000007b <V4u08>:
      7b:	48 83 ec 20          	sub    $0x20,%rsp
      7f:	89 c8                	mov    %ecx,%eax
      81:	89 f9                	mov    %edi,%ecx
      83:	88 4c 24 0c          	mov    %cl,0xc(%rsp)
      87:	89 f1                	mov    %esi,%ecx
      89:	88 4c 24 08          	mov    %cl,0x8(%rsp)
      8d:	88 54 24 04          	mov    %dl,0x4(%rsp)
      91:	88 04 24             	mov    %al,(%rsp)
      94:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
      99:	88 44 24 1c          	mov    %al,0x1c(%rsp)
      9d:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
      a2:	88 44 24 1d          	mov    %al,0x1d(%rsp)
      a6:	0f b6 44 24 04       	movzbl 0x4(%rsp),%eax
      ab:	88 44 24 1e          	mov    %al,0x1e(%rsp)
      af:	0f b6 04 24          	movzbl (%rsp),%eax
      b3:	88 44 24 1f          	mov    %al,0x1f(%rsp)
      b7:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
      bb:	48 83 c4 20          	add    $0x20,%rsp
      bf:	c3                   	ret

00000000000000c0 <V3r32_Add>:
      c0:	48 83 ec 58          	sub    $0x58,%rsp
      c4:	66 48 0f 7e c0       	movq   %xmm0,%rax
      c9:	66 48 0f 7e c9       	movq   %xmm1,%rcx
      ce:	66 0f 6f c2          	movdqa %xmm2,%xmm0
      d2:	66 48 0f 7e da       	movq   %xmm3,%rdx
      d7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
      dc:	8b 44 24 28          	mov    0x28(%rsp),%eax
      e0:	83 e0 00             	and    $0x0,%eax
      e3:	09 c8                	or     %ecx,%eax
      e5:	89 44 24 28          	mov    %eax,0x28(%rsp)
      e9:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
      ef:	8b 44 24 18          	mov    0x18(%rsp),%eax
      f3:	83 e0 00             	and    $0x0,%eax
      f6:	09 d0                	or     %edx,%eax
      f8:	89 44 24 18          	mov    %eax,0x18(%rsp)
      fc:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     102:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     108:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     10c:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     112:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     118:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     11e:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     122:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     128:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     12e:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     134:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     138:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     13e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     143:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     148:	8b 44 24 40          	mov    0x40(%rsp),%eax
     14c:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     150:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     155:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     159:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     15e:	66 48 0f 6e c8       	movq   %rax,%xmm1
     163:	48 83 c4 58          	add    $0x58,%rsp
     167:	c3                   	ret

0000000000000168 <V3u08_Add>:
     168:	48 83 ec 20          	sub    $0x20,%rsp
     16c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     171:	48 89 34 24          	mov    %rsi,(%rsp)
     175:	0f b6 54 24 08       	movzbl 0x8(%rsp),%edx
     17a:	0f b6 04 24          	movzbl (%rsp),%eax
     17e:	01 d0                	add    %edx,%eax
     180:	88 44 24 1a          	mov    %al,0x1a(%rsp)
     184:	0f b6 54 24 09       	movzbl 0x9(%rsp),%edx
     189:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
     18e:	01 d0                	add    %edx,%eax
     190:	88 44 24 1b          	mov    %al,0x1b(%rsp)
     194:	0f b6 54 24 0a       	movzbl 0xa(%rsp),%edx
     199:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
     19e:	01 d0                	add    %edx,%eax
     1a0:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     1a4:	0f b7 44 24 1a       	movzwl 0x1a(%rsp),%eax
     1a9:	66 89 44 24 1d       	mov    %ax,0x1d(%rsp)
     1ae:	0f b6 44 24 1c       	movzbl 0x1c(%rsp),%eax
     1b3:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     1b7:	b8 00 00 00 00       	mov    $0x0,%eax
     1bc:	0f b7 54 24 1d       	movzwl 0x1d(%rsp),%edx
     1c1:	0f b7 d2             	movzwl %dx,%edx
     1c4:	66 b8 00 00          	mov    $0x0,%ax
     1c8:	48 09 d0             	or     %rdx,%rax
     1cb:	0f b6 54 24 1f       	movzbl 0x1f(%rsp),%edx
     1d0:	0f b6 d2             	movzbl %dl,%edx
     1d3:	48 c1 e2 10          	shl    $0x10,%rdx
     1d7:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
     1dd:	48 09 d0             	or     %rdx,%rax
     1e0:	48 83 c4 20          	add    $0x20,%rsp
     1e4:	c3                   	ret

00000000000001e5 <V4u08_Add>:
     1e5:	48 83 ec 18          	sub    $0x18,%rsp
     1e9:	89 7c 24 04          	mov    %edi,0x4(%rsp)
     1ed:	89 34 24             	mov    %esi,(%rsp)
     1f0:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
     1f5:	0f b6 04 24          	movzbl (%rsp),%eax
     1f9:	01 d0                	add    %edx,%eax
     1fb:	88 44 24 14          	mov    %al,0x14(%rsp)
     1ff:	0f b6 54 24 05       	movzbl 0x5(%rsp),%edx
     204:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
     209:	01 d0                	add    %edx,%eax
     20b:	88 44 24 15          	mov    %al,0x15(%rsp)
     20f:	0f b6 54 24 06       	movzbl 0x6(%rsp),%edx
     214:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
     219:	01 d0                	add    %edx,%eax
     21b:	88 44 24 16          	mov    %al,0x16(%rsp)
     21f:	0f b6 54 24 07       	movzbl 0x7(%rsp),%edx
     224:	0f b6 44 24 03       	movzbl 0x3(%rsp),%eax
     229:	01 d0                	add    %edx,%eax
     22b:	88 44 24 17          	mov    %al,0x17(%rsp)
     22f:	8b 44 24 14          	mov    0x14(%rsp),%eax
     233:	48 83 c4 18          	add    $0x18,%rsp
     237:	c3                   	ret

0000000000000238 <V2u32_Add>:
     238:	48 83 ec 20          	sub    $0x20,%rsp
     23c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     241:	48 89 34 24          	mov    %rsi,(%rsp)
     245:	8b 54 24 08          	mov    0x8(%rsp),%edx
     249:	8b 04 24             	mov    (%rsp),%eax
     24c:	01 d0                	add    %edx,%eax
     24e:	89 44 24 18          	mov    %eax,0x18(%rsp)
     252:	8b 54 24 0c          	mov    0xc(%rsp),%edx
     256:	8b 44 24 04          	mov    0x4(%rsp),%eax
     25a:	01 d0                	add    %edx,%eax
     25c:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
     260:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     265:	48 83 c4 20          	add    $0x20,%rsp
     269:	c3                   	ret

000000000000026a <V3r32_Sub>:
     26a:	48 83 ec 58          	sub    $0x58,%rsp
     26e:	66 48 0f 7e c0       	movq   %xmm0,%rax
     273:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     278:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     27c:	66 48 0f 7e da       	movq   %xmm3,%rdx
     281:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     286:	8b 44 24 28          	mov    0x28(%rsp),%eax
     28a:	83 e0 00             	and    $0x0,%eax
     28d:	09 c8                	or     %ecx,%eax
     28f:	89 44 24 28          	mov    %eax,0x28(%rsp)
     293:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     299:	8b 44 24 18          	mov    0x18(%rsp),%eax
     29d:	83 e0 00             	and    $0x0,%eax
     2a0:	09 d0                	or     %edx,%eax
     2a2:	89 44 24 18          	mov    %eax,0x18(%rsp)
     2a6:	f3 0f 10 44 24 20    	movss  0x20(%rsp),%xmm0
     2ac:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
     2b2:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2b6:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     2bc:	f3 0f 10 44 24 24    	movss  0x24(%rsp),%xmm0
     2c2:	f3 0f 10 4c 24 14    	movss  0x14(%rsp),%xmm1
     2c8:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2cc:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     2d2:	f3 0f 10 44 24 28    	movss  0x28(%rsp),%xmm0
     2d8:	f3 0f 10 4c 24 18    	movss  0x18(%rsp),%xmm1
     2de:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     2e2:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     2e8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     2ed:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     2f2:	8b 44 24 40          	mov    0x40(%rsp),%eax
     2f6:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     2fa:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     2ff:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     303:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     308:	66 48 0f 6e c8       	movq   %rax,%xmm1
     30d:	48 83 c4 58          	add    $0x58,%rsp
     311:	c3                   	ret

0000000000000312 <V3r32_Mul_VS>:
     312:	48 83 ec 58          	sub    $0x58,%rsp
     316:	66 48 0f 7e c0       	movq   %xmm0,%rax
     31b:	66 48 0f 7e ca       	movq   %xmm1,%rdx
     320:	f3 0f 11 54 24 1c    	movss  %xmm2,0x1c(%rsp)
     326:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     32b:	8b 44 24 28          	mov    0x28(%rsp),%eax
     32f:	83 e0 00             	and    $0x0,%eax
     332:	09 d0                	or     %edx,%eax
     334:	89 44 24 28          	mov    %eax,0x28(%rsp)
     338:	f3 0f 10 44 24 20    	movss  0x20(%rsp),%xmm0
     33e:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     344:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     34a:	f3 0f 10 44 24 24    	movss  0x24(%rsp),%xmm0
     350:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     356:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     35c:	f3 0f 10 44 24 28    	movss  0x28(%rsp),%xmm0
     362:	f3 0f 59 44 24 1c    	mulss  0x1c(%rsp),%xmm0
     368:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     36e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     373:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     378:	8b 44 24 40          	mov    0x40(%rsp),%eax
     37c:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     380:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     385:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     389:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     38e:	66 48 0f 6e c8       	movq   %rax,%xmm1
     393:	48 83 c4 58          	add    $0x58,%rsp
     397:	c3                   	ret

0000000000000398 <V4r32_Mul_VS>:
     398:	53                   	push   %rbx
     399:	48 83 ec 30          	sub    $0x30,%rsp
     39d:	66 48 0f 7e c0       	movq   %xmm0,%rax
     3a2:	66 0f 6f c1          	movdqa %xmm1,%xmm0
     3a6:	66 48 0f 7e c2       	movq   %xmm0,%rdx
     3ab:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     3b0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
     3b5:	f3 0f 11 54 24 0c    	movss  %xmm2,0xc(%rsp)
     3bb:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     3c1:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3c7:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
     3cd:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     3d3:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3d9:	f3 0f 11 44 24 24    	movss  %xmm0,0x24(%rsp)
     3df:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     3e5:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3eb:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
     3f1:	f3 0f 10 44 24 1c    	movss  0x1c(%rsp),%xmm0
     3f7:	f3 0f 59 44 24 0c    	mulss  0xc(%rsp),%xmm0
     3fd:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
     403:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     408:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
     40d:	48 89 c1             	mov    %rax,%rcx
     410:	48 89 d3             	mov    %rdx,%rbx
     413:	48 89 d0             	mov    %rdx,%rax
     416:	66 48 0f 6e c1       	movq   %rcx,%xmm0
     41b:	66 48 0f 6e c8       	movq   %rax,%xmm1
     420:	48 83 c4 30          	add    $0x30,%rsp
     424:	5b                   	pop    %rbx
     425:	c3                   	ret

0000000000000426 <V3u08_Mul_VS>:
     426:	48 83 ec 20          	sub    $0x20,%rsp
     42a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     42f:	89 f0                	mov    %esi,%eax
     431:	88 44 24 04          	mov    %al,0x4(%rsp)
     435:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
     43a:	f6 64 24 04          	mulb   0x4(%rsp)
     43e:	88 44 24 1a          	mov    %al,0x1a(%rsp)
     442:	0f b6 44 24 09       	movzbl 0x9(%rsp),%eax
     447:	f6 64 24 04          	mulb   0x4(%rsp)
     44b:	88 44 24 1b          	mov    %al,0x1b(%rsp)
     44f:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
     454:	f6 64 24 04          	mulb   0x4(%rsp)
     458:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     45c:	0f b7 44 24 1a       	movzwl 0x1a(%rsp),%eax
     461:	66 89 44 24 1d       	mov    %ax,0x1d(%rsp)
     466:	0f b6 44 24 1c       	movzbl 0x1c(%rsp),%eax
     46b:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     46f:	b8 00 00 00 00       	mov    $0x0,%eax
     474:	0f b7 54 24 1d       	movzwl 0x1d(%rsp),%edx
     479:	0f b7 d2             	movzwl %dx,%edx
     47c:	66 b8 00 00          	mov    $0x0,%ax
     480:	48 09 d0             	or     %rdx,%rax
     483:	0f b6 54 24 1f       	movzbl 0x1f(%rsp),%edx
     488:	0f b6 d2             	movzbl %dl,%edx
     48b:	48 c1 e2 10          	shl    $0x10,%rdx
     48f:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
     495:	48 09 d0             	or     %rdx,%rax
     498:	48 83 c4 20          	add    $0x20,%rsp
     49c:	c3                   	ret

000000000000049d <V4u08_Mul_VS>:
     49d:	48 83 ec 18          	sub    $0x18,%rsp
     4a1:	89 7c 24 04          	mov    %edi,0x4(%rsp)
     4a5:	89 f0                	mov    %esi,%eax
     4a7:	88 04 24             	mov    %al,(%rsp)
     4aa:	0f b6 44 24 04       	movzbl 0x4(%rsp),%eax
     4af:	f6 24 24             	mulb   (%rsp)
     4b2:	88 44 24 14          	mov    %al,0x14(%rsp)
     4b6:	0f b6 44 24 05       	movzbl 0x5(%rsp),%eax
     4bb:	f6 24 24             	mulb   (%rsp)
     4be:	88 44 24 15          	mov    %al,0x15(%rsp)
     4c2:	0f b6 44 24 06       	movzbl 0x6(%rsp),%eax
     4c7:	f6 24 24             	mulb   (%rsp)
     4ca:	88 44 24 16          	mov    %al,0x16(%rsp)
     4ce:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
     4d3:	f6 24 24             	mulb   (%rsp)
     4d6:	88 44 24 17          	mov    %al,0x17(%rsp)
     4da:	8b 44 24 14          	mov    0x14(%rsp),%eax
     4de:	48 83 c4 18          	add    $0x18,%rsp
     4e2:	c3                   	ret

00000000000004e3 <V2r32_Mul_VV>:
     4e3:	48 83 ec 20          	sub    $0x20,%rsp
     4e7:	66 0f d6 44 24 08    	movq   %xmm0,0x8(%rsp)
     4ed:	66 0f d6 0c 24       	movq   %xmm1,(%rsp)
     4f2:	f3 0f 10 4c 24 08    	movss  0x8(%rsp),%xmm1
     4f8:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     4fd:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     501:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
     507:	f3 0f 10 4c 24 0c    	movss  0xc(%rsp),%xmm1
     50d:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     513:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     517:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
     51d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     522:	66 48 0f 6e c0       	movq   %rax,%xmm0
     527:	48 83 c4 20          	add    $0x20,%rsp
     52b:	c3                   	ret

000000000000052c <V3r32_Mul_VV>:
     52c:	48 83 ec 58          	sub    $0x58,%rsp
     530:	66 48 0f 7e c0       	movq   %xmm0,%rax
     535:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     53a:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     53e:	66 48 0f 7e da       	movq   %xmm3,%rdx
     543:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     548:	8b 44 24 28          	mov    0x28(%rsp),%eax
     54c:	83 e0 00             	and    $0x0,%eax
     54f:	09 c8                	or     %ecx,%eax
     551:	89 44 24 28          	mov    %eax,0x28(%rsp)
     555:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     55b:	8b 44 24 18          	mov    0x18(%rsp),%eax
     55f:	83 e0 00             	and    $0x0,%eax
     562:	09 d0                	or     %edx,%eax
     564:	89 44 24 18          	mov    %eax,0x18(%rsp)
     568:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     56e:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     574:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     578:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     57e:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     584:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     58a:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     58e:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     594:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     59a:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     5a0:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     5a4:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     5aa:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     5af:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     5b4:	8b 44 24 40          	mov    0x40(%rsp),%eax
     5b8:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     5bc:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     5c1:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     5c5:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     5ca:	66 48 0f 6e c8       	movq   %rax,%xmm1
     5cf:	48 83 c4 58          	add    $0x58,%rsp
     5d3:	c3                   	ret

00000000000005d4 <V3r32_Dot>:
     5d4:	48 83 ec 30          	sub    $0x30,%rsp
     5d8:	66 48 0f 7e c0       	movq   %xmm0,%rax
     5dd:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     5e2:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     5e6:	66 48 0f 7e da       	movq   %xmm3,%rdx
     5eb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     5f0:	8b 44 24 18          	mov    0x18(%rsp),%eax
     5f4:	83 e0 00             	and    $0x0,%eax
     5f7:	09 c8                	or     %ecx,%eax
     5f9:	89 44 24 18          	mov    %eax,0x18(%rsp)
     5fd:	66 0f d6 04 24       	movq   %xmm0,(%rsp)
     602:	8b 44 24 08          	mov    0x8(%rsp),%eax
     606:	83 e0 00             	and    $0x0,%eax
     609:	09 d0                	or     %edx,%eax
     60b:	89 44 24 08          	mov    %eax,0x8(%rsp)
     60f:	f3 0f 10 0c 24       	movss  (%rsp),%xmm1
     614:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     61a:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
     61e:	f3 0f 10 54 24 04    	movss  0x4(%rsp),%xmm2
     624:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     62a:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
     62e:	f3 0f 58 c8          	addss  %xmm0,%xmm1
     632:	f3 0f 10 54 24 08    	movss  0x8(%rsp),%xmm2
     638:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     63e:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
     642:	f3 0f 58 c1          	addss  %xmm1,%xmm0
     646:	f3 0f 11 44 24 2c    	movss  %xmm0,0x2c(%rsp)
     64c:	f3 0f 10 44 24 2c    	movss  0x2c(%rsp),%xmm0
     652:	48 83 c4 30          	add    $0x30,%rsp
     656:	c3                   	ret

0000000000000657 <V3r32_Cross>:
     657:	48 83 ec 58          	sub    $0x58,%rsp
     65b:	66 48 0f 7e c0       	movq   %xmm0,%rax
     660:	66 48 0f 7e c9       	movq   %xmm1,%rcx
     665:	66 0f 6f c2          	movdqa %xmm2,%xmm0
     669:	66 48 0f 7e da       	movq   %xmm3,%rdx
     66e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     673:	8b 44 24 28          	mov    0x28(%rsp),%eax
     677:	83 e0 00             	and    $0x0,%eax
     67a:	09 c8                	or     %ecx,%eax
     67c:	89 44 24 28          	mov    %eax,0x28(%rsp)
     680:	66 0f d6 44 24 10    	movq   %xmm0,0x10(%rsp)
     686:	8b 44 24 18          	mov    0x18(%rsp),%eax
     68a:	83 e0 00             	and    $0x0,%eax
     68d:	09 d0                	or     %edx,%eax
     68f:	89 44 24 18          	mov    %eax,0x18(%rsp)
     693:	f3 0f 10 4c 24 24    	movss  0x24(%rsp),%xmm1
     699:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
     69f:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6a3:	f3 0f 10 54 24 28    	movss  0x28(%rsp),%xmm2
     6a9:	f3 0f 10 4c 24 14    	movss  0x14(%rsp),%xmm1
     6af:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     6b3:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     6b7:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
     6bd:	f3 0f 10 4c 24 28    	movss  0x28(%rsp),%xmm1
     6c3:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
     6c9:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6cd:	f3 0f 10 54 24 20    	movss  0x20(%rsp),%xmm2
     6d3:	f3 0f 10 4c 24 18    	movss  0x18(%rsp),%xmm1
     6d9:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     6dd:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     6e1:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
     6e7:	f3 0f 10 4c 24 20    	movss  0x20(%rsp),%xmm1
     6ed:	f3 0f 10 44 24 14    	movss  0x14(%rsp),%xmm0
     6f3:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
     6f7:	f3 0f 10 54 24 24    	movss  0x24(%rsp),%xmm2
     6fd:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
     703:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
     707:	f3 0f 5c c1          	subss  %xmm1,%xmm0
     70b:	f3 0f 11 44 24 40    	movss  %xmm0,0x40(%rsp)
     711:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     716:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
     71b:	8b 44 24 40          	mov    0x40(%rsp),%eax
     71f:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
     723:	48 8b 54 24 44       	mov    0x44(%rsp),%rdx
     728:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
     72c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
     731:	66 48 0f 6e c8       	movq   %rax,%xmm1
     736:	48 83 c4 58          	add    $0x58,%rsp
     73a:	c3                   	ret

000000000000073b <V3r32_Len>:
     73b:	48 83 ec 28          	sub    $0x28,%rsp
     73f:	66 48 0f 7e c0       	movq   %xmm0,%rax
     744:	66 48 0f 7e ca       	movq   %xmm1,%rdx
     749:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
     74e:	8b 44 24 10          	mov    0x10(%rsp),%eax
     752:	83 e0 00             	and    $0x0,%eax
     755:	09 d0                	or     %edx,%eax
     757:	89 44 24 10          	mov    %eax,0x10(%rsp)
     75b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
     760:	66 0f 6e 44 24 10    	movd   0x10(%rsp),%xmm0
     766:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     76b:	66 0f 6e 4c 24 10    	movd   0x10(%rsp),%xmm1
     771:	66 48 0f 6e d2       	movq   %rdx,%xmm2
     776:	66 0f 6f d8          	movdqa %xmm0,%xmm3
     77a:	66 48 0f 6e c0       	movq   %rax,%xmm0
     77f:	e8 50 fe ff ff       	call   5d4 <V3r32_Dot>
     784:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
     788:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
     78e:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
     794:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
     799:	dd 04 24             	fldl   (%rsp)
     79c:	d9 fa                	fsqrt
     79e:	dd 5c 24 20          	fstpl  0x20(%rsp)
     7a2:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
     7a8:	66 48 0f 7e c0       	movq   %xmm0,%rax
     7ad:	66 48 0f 6e c0       	movq   %rax,%xmm0
     7b2:	48 83 c4 28          	add    $0x28,%rsp
     7b6:	c3                   	ret

00000000000007b7 <V2r32_ToV2u32>:
     7b7:	48 83 ec 18          	sub    $0x18,%rsp
     7bb:	66 0f d6 04 24       	movq   %xmm0,(%rsp)
     7c0:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     7c5:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
     7ca:	89 44 24 10          	mov    %eax,0x10(%rsp)
     7ce:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     7d4:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
     7d9:	89 44 24 14          	mov    %eax,0x14(%rsp)
     7dd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     7e2:	48 83 c4 18          	add    $0x18,%rsp
     7e6:	c3                   	ret

00000000000007e7 <V2u32_ToV2r32>:
     7e7:	48 83 ec 18          	sub    $0x18,%rsp
     7eb:	48 89 3c 24          	mov    %rdi,(%rsp)
     7ef:	8b 04 24             	mov    (%rsp),%eax
     7f2:	89 c0                	mov    %eax,%eax
     7f4:	48 85 c0             	test   %rax,%rax
     7f7:	78 0b                	js     804 <V2u32_ToV2r32+0x1d>
     7f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
     7fd:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
     802:	eb 19                	jmp    81d <V2u32_ToV2r32+0x36>
     804:	48 89 c2             	mov    %rax,%rdx
     807:	48 d1 ea             	shr    %rdx
     80a:	83 e0 01             	and    $0x1,%eax
     80d:	48 09 c2             	or     %rax,%rdx
     810:	66 0f ef c0          	pxor   %xmm0,%xmm0
     814:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
     819:	f3 0f 58 c0          	addss  %xmm0,%xmm0
     81d:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
     823:	8b 44 24 04          	mov    0x4(%rsp),%eax
     827:	89 c0                	mov    %eax,%eax
     829:	48 85 c0             	test   %rax,%rax
     82c:	78 0b                	js     839 <V2u32_ToV2r32+0x52>
     82e:	66 0f ef c0          	pxor   %xmm0,%xmm0
     832:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
     837:	eb 19                	jmp    852 <V2u32_ToV2r32+0x6b>
     839:	48 89 c2             	mov    %rax,%rdx
     83c:	48 d1 ea             	shr    %rdx
     83f:	83 e0 01             	and    $0x1,%eax
     842:	48 09 c2             	or     %rax,%rdx
     845:	66 0f ef c0          	pxor   %xmm0,%xmm0
     849:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
     84e:	f3 0f 58 c0          	addss  %xmm0,%xmm0
     852:	f3 0f 11 44 24 14    	movss  %xmm0,0x14(%rsp)
     858:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     85d:	66 48 0f 6e c0       	movq   %rax,%xmm0
     862:	48 83 c4 18          	add    $0x18,%rsp
     866:	c3                   	ret

0000000000000867 <V4u08_ToV4r32>:
     867:	53                   	push   %rbx
     868:	48 83 ec 20          	sub    $0x20,%rsp
     86c:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
     870:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
     875:	0f b6 c0             	movzbl %al,%eax
     878:	66 0f ef c0          	pxor   %xmm0,%xmm0
     87c:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     880:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
     886:	0f b6 44 24 0d       	movzbl 0xd(%rsp),%eax
     88b:	0f b6 c0             	movzbl %al,%eax
     88e:	66 0f ef c0          	pxor   %xmm0,%xmm0
     892:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     896:	f3 0f 11 44 24 14    	movss  %xmm0,0x14(%rsp)
     89c:	0f b6 44 24 0e       	movzbl 0xe(%rsp),%eax
     8a1:	0f b6 c0             	movzbl %al,%eax
     8a4:	66 0f ef c0          	pxor   %xmm0,%xmm0
     8a8:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     8ac:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
     8b2:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
     8b7:	0f b6 c0             	movzbl %al,%eax
     8ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
     8be:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
     8c2:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
     8c8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     8cd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     8d2:	48 89 c1             	mov    %rax,%rcx
     8d5:	48 89 d3             	mov    %rdx,%rbx
     8d8:	48 89 d0             	mov    %rdx,%rax
     8db:	66 48 0f 6e c1       	movq   %rcx,%xmm0
     8e0:	66 48 0f 6e c8       	movq   %rax,%xmm1
     8e5:	48 83 c4 20          	add    $0x20,%rsp
     8e9:	5b                   	pop    %rbx
     8ea:	c3                   	ret

00000000000008eb <V4r32_ToV4u08>:
     8eb:	48 83 ec 28          	sub    $0x28,%rsp
     8ef:	66 48 0f 7e c0       	movq   %xmm0,%rax
     8f4:	66 0f 6f c1          	movdqa %xmm1,%xmm0
     8f8:	66 48 0f 7e c2       	movq   %xmm0,%rdx
     8fd:	48 89 04 24          	mov    %rax,(%rsp)
     901:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
     906:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
     90b:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     90f:	88 44 24 1c          	mov    %al,0x1c(%rsp)
     913:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
     919:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     91d:	88 44 24 1d          	mov    %al,0x1d(%rsp)
     921:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
     927:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     92b:	88 44 24 1e          	mov    %al,0x1e(%rsp)
     92f:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
     935:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
     939:	88 44 24 1f          	mov    %al,0x1f(%rsp)
     93d:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
     941:	48 83 c4 28          	add    $0x28,%rsp
     945:	c3                   	ret

0000000000000946 <Mem_Set>:
     946:	48 83 ec 48          	sub    $0x48,%rsp
     94a:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     94f:	89 f0                	mov    %esi,%eax
     951:	48 89 14 24          	mov    %rdx,(%rsp)
     955:	88 44 24 0c          	mov    %al,0xc(%rsp)
     959:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     95e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
     963:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     968:	83 e0 07             	and    $0x7,%eax
     96b:	ba 08 00 00 00       	mov    $0x8,%edx
     970:	48 29 c2             	sub    %rax,%rdx
     973:	48 89 d0             	mov    %rdx,%rax
     976:	83 e0 08             	and    $0x8,%eax
     979:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
     97e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
     983:	48 29 04 24          	sub    %rax,(%rsp)
     987:	eb 1b                	jmp    9a4 <Mem_Set+0x5e>
     989:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
     98e:	48 8d 50 01          	lea    0x1(%rax),%rdx
     992:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
     997:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     99c:	88 10                	mov    %dl,(%rax)
     99e:	48 83 6c 24 38 01    	subq   $0x1,0x38(%rsp)
     9a4:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
     9aa:	75 dd                	jne    989 <Mem_Set+0x43>
     9ac:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     9b1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
     9b6:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     9bb:	89 d0                	mov    %edx,%eax
     9bd:	c1 e0 08             	shl    $0x8,%eax
     9c0:	01 d0                	add    %edx,%eax
     9c2:	66 89 44 24 2e       	mov    %ax,0x2e(%rsp)
     9c7:	0f b7 54 24 2e       	movzwl 0x2e(%rsp),%edx
     9cc:	89 d0                	mov    %edx,%eax
     9ce:	c1 e0 10             	shl    $0x10,%eax
     9d1:	01 d0                	add    %edx,%eax
     9d3:	89 44 24 28          	mov    %eax,0x28(%rsp)
     9d7:	8b 54 24 28          	mov    0x28(%rsp),%edx
     9db:	48 89 d0             	mov    %rdx,%rax
     9de:	48 c1 e0 20          	shl    $0x20,%rax
     9e2:	48 01 d0             	add    %rdx,%rax
     9e5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     9ea:	eb 1b                	jmp    a07 <Mem_Set+0xc1>
     9ec:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     9f1:	48 8d 50 08          	lea    0x8(%rax),%rdx
     9f5:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
     9fa:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
     9ff:	48 89 10             	mov    %rdx,(%rax)
     a02:	48 83 2c 24 08       	subq   $0x8,(%rsp)
     a07:	48 83 3c 24 07       	cmpq   $0x7,(%rsp)
     a0c:	77 de                	ja     9ec <Mem_Set+0xa6>
     a0e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     a13:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
     a18:	eb 1a                	jmp    a34 <Mem_Set+0xee>
     a1a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
     a1f:	48 8d 50 01          	lea    0x1(%rax),%rdx
     a23:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
     a28:	0f b6 54 24 0c       	movzbl 0xc(%rsp),%edx
     a2d:	88 10                	mov    %dl,(%rax)
     a2f:	48 83 2c 24 01       	subq   $0x1,(%rsp)
     a34:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
     a39:	75 df                	jne    a1a <Mem_Set+0xd4>
     a3b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a40:	48 83 c4 48          	add    $0x48,%rsp
     a44:	c3                   	ret

0000000000000a45 <Mem_Cpy>:
     a45:	48 83 ec 28          	sub    $0x28,%rsp
     a49:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     a4e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     a53:	48 89 14 24          	mov    %rdx,(%rsp)
     a57:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a5c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     a61:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     a66:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     a6b:	eb 26                	jmp    a93 <Mem_Cpy+0x4e>
     a6d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     a72:	48 8d 42 01          	lea    0x1(%rdx),%rax
     a76:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     a7b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     a80:	48 8d 48 01          	lea    0x1(%rax),%rcx
     a84:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
     a89:	0f b6 12             	movzbl (%rdx),%edx
     a8c:	88 10                	mov    %dl,(%rax)
     a8e:	48 83 2c 24 01       	subq   $0x1,(%rsp)
     a93:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
     a98:	75 d3                	jne    a6d <Mem_Cpy+0x28>
     a9a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     a9f:	48 83 c4 28          	add    $0x28,%rsp
     aa3:	c3                   	ret

0000000000000aa4 <Mem_Tile>:
     aa4:	48 83 ec 30          	sub    $0x30,%rsp
     aa8:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
     aad:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
     ab2:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
     ab7:	48 89 0c 24          	mov    %rcx,(%rsp)
     abb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     ac0:	ba 00 00 00 00       	mov    $0x0,%edx
     ac5:	48 f7 34 24          	divq   (%rsp)
     ac9:	89 44 24 20          	mov    %eax,0x20(%rsp)
     acd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ad2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     ad7:	c7 44 24 24 00 00 00 00 	movl   $0x0,0x24(%rsp)
     adf:	eb 27                	jmp    b08 <Mem_Tile+0x64>
     ae1:	48 8b 14 24          	mov    (%rsp),%rdx
     ae5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
     aea:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     aef:	48 89 ce             	mov    %rcx,%rsi
     af2:	48 89 c7             	mov    %rax,%rdi
     af5:	e8 4b ff ff ff       	call   a45 <Mem_Cpy>
     afa:	48 8b 04 24          	mov    (%rsp),%rax
     afe:	48 01 44 24 28       	add    %rax,0x28(%rsp)
     b03:	83 44 24 24 01       	addl   $0x1,0x24(%rsp)
     b08:	8b 44 24 24          	mov    0x24(%rsp),%eax
     b0c:	3b 44 24 20          	cmp    0x20(%rsp),%eax
     b10:	72 cf                	jb     ae1 <Mem_Tile+0x3d>
     b12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     b17:	48 83 c4 30          	add    $0x30,%rsp
     b1b:	c3                   	ret

0000000000000b1c <Mem_Cmp>:
     b1c:	48 83 ec 38          	sub    $0x38,%rsp
     b20:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     b25:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     b2a:	48 89 14 24          	mov    %rdx,(%rsp)
     b2e:	48 c7 44 24 30 00 00 00 00 	movq   $0x0,0x30(%rsp)
     b37:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     b3c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     b41:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     b46:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     b4b:	eb 12                	jmp    b5f <Mem_Cmp+0x43>
     b4d:	48 83 44 24 28 01    	addq   $0x1,0x28(%rsp)
     b53:	48 83 44 24 20 01    	addq   $0x1,0x20(%rsp)
     b59:	48 83 44 24 30 01    	addq   $0x1,0x30(%rsp)
     b5f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     b64:	48 3b 04 24          	cmp    (%rsp),%rax
     b68:	73 14                	jae    b7e <Mem_Cmp+0x62>
     b6a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     b6f:	0f b6 10             	movzbl (%rax),%edx
     b72:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     b77:	0f b6 00             	movzbl (%rax),%eax
     b7a:	38 c2                	cmp    %al,%dl
     b7c:	74 cf                	je     b4d <Mem_Cmp+0x31>
     b7e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
     b83:	48 3b 04 24          	cmp    (%rsp),%rax
     b87:	75 07                	jne    b90 <Mem_Cmp+0x74>
     b89:	b8 00 00 00 00       	mov    $0x0,%eax
     b8e:	eb 18                	jmp    ba8 <Mem_Cmp+0x8c>
     b90:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     b95:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
     b9a:	73 07                	jae    ba3 <Mem_Cmp+0x87>
     b9c:	b8 01 00 00 00       	mov    $0x1,%eax
     ba1:	eb 05                	jmp    ba8 <Mem_Cmp+0x8c>
     ba3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     ba8:	48 83 c4 38          	add    $0x38,%rsp
     bac:	c3                   	ret

0000000000000bad <Mem_BytesUntil>:
     bad:	48 83 ec 20          	sub    $0x20,%rsp
     bb1:	89 f8                	mov    %edi,%eax
     bb3:	48 89 34 24          	mov    %rsi,(%rsp)
     bb7:	88 44 24 0c          	mov    %al,0xc(%rsp)
     bbb:	48 8b 04 24          	mov    (%rsp),%rax
     bbf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     bc4:	c7 44 24 14 00 00 00 00 	movl   $0x0,0x14(%rsp)
     bcc:	eb 0b                	jmp    bd9 <Mem_BytesUntil+0x2c>
     bce:	48 83 44 24 18 01    	addq   $0x1,0x18(%rsp)
     bd4:	83 44 24 14 01       	addl   $0x1,0x14(%rsp)
     bd9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     bde:	0f b6 00             	movzbl (%rax),%eax
     be1:	38 44 24 0c          	cmp    %al,0xc(%rsp)
     be5:	75 e7                	jne    bce <Mem_BytesUntil+0x21>
     be7:	8b 44 24 14          	mov    0x14(%rsp),%eax
     beb:	48 83 c4 20          	add    $0x20,%rsp
     bef:	c3                   	ret

0000000000000bf0 <Heap_GetHeap>:
     bf0:	48 83 ec 08          	sub    $0x8,%rsp
     bf4:	48 89 3c 24          	mov    %rdi,(%rsp)
     bf8:	48 8b 04 24          	mov    (%rsp),%rax
     bfc:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     c00:	0f b7 c0             	movzwl %ax,%eax
     c03:	48 c1 e0 05          	shl    $0x5,%rax
     c07:	48 f7 d8             	neg    %rax
     c0a:	48 89 c2             	mov    %rax,%rdx
     c0d:	48 8b 04 24          	mov    (%rsp),%rax
     c11:	48 01 d0             	add    %rdx,%rax
     c14:	48 83 c4 08          	add    $0x8,%rsp
     c18:	c3                   	ret

0000000000000c19 <Heap_GetHandle>:
     c19:	48 83 ec 08          	sub    $0x8,%rsp
     c1d:	48 89 3c 24          	mov    %rdi,(%rsp)
     c21:	48 8b 04 24          	mov    (%rsp),%rax
     c25:	48 8b 40 f8          	mov    -0x8(%rax),%rax
     c29:	48 83 c4 08          	add    $0x8,%rsp
     c2d:	c3                   	ret

0000000000000c2e <Heap_Init>:
     c2e:	48 83 ec 20          	sub    $0x20,%rsp
     c32:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
     c37:	48 89 34 24          	mov    %rsi,(%rsp)
     c3b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     c40:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     c45:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c4a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
     c4f:	48 89 10             	mov    %rdx,(%rax)
     c52:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c57:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%rax)
     c5e:	48 8b 04 24          	mov    (%rsp),%rax
     c62:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
     c66:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     c70:	48 89 d1             	mov    %rdx,%rcx
     c73:	48 21 c1             	and    %rax,%rcx
     c76:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     c7b:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     c85:	48 21 ca             	and    %rcx,%rdx
     c88:	48 c1 e2 10          	shl    $0x10,%rdx
     c8c:	48 8b 48 08          	mov    0x8(%rax),%rcx
     c90:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
     c9a:	48 21 f1             	and    %rsi,%rcx
     c9d:	48 09 ca             	or     %rcx,%rdx
     ca0:	48 89 50 08          	mov    %rdx,0x8(%rax)
     ca4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ca9:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)
     caf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cb4:	66 c7 40 14 00 00    	movw   $0x0,0x14(%rax)
     cba:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cbf:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
     cc5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cca:	66 c7 40 18 00 00    	movw   $0x0,0x18(%rax)
     cd0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cd5:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
     cdb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ce0:	66 c7 40 1c 00 00    	movw   $0x0,0x1c(%rax)
     ce6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ceb:	66 c7 40 1e 00 00    	movw   $0x0,0x1e(%rax)
     cf1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     cf6:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
     cfa:	83 ca 80             	or     $0xffffff80,%edx
     cfd:	88 50 0f             	mov    %dl,0xf(%rax)
     d00:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d05:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
     d09:	83 e2 bf             	and    $0xffffffbf,%edx
     d0c:	88 50 0f             	mov    %dl,0xf(%rax)
     d0f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     d14:	48 83 c4 20          	add    $0x20,%rsp
     d18:	c3                   	ret

0000000000000d19 <Heap_Defragment>:
     d19:	48 83 ec 28          	sub    $0x28,%rsp
     d1d:	48 89 3c 24          	mov    %rdi,(%rsp)
     d21:	48 8b 04 24          	mov    (%rsp),%rax
     d25:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     d2a:	48 c7 44 24 20 00 00 00 00 	movq   $0x0,0x20(%rsp)
     d33:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     d38:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     d3d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d42:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     d46:	0f b7 c0             	movzwl %ax,%eax
     d49:	48 c1 e0 05          	shl    $0x5,%rax
     d4d:	48 89 c2             	mov    %rax,%rdx
     d50:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     d55:	48 01 d0             	add    %rdx,%rax
     d58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     d5d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d62:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
     d66:	83 e0 80             	and    $0xffffff80,%eax
     d69:	84 c0                	test   %al,%al
     d6b:	74 71                	je     dde <Heap_Defragment+0xc5>
     d6d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     d72:	48 8b 40 08          	mov    0x8(%rax),%rax
     d76:	48 c1 e8 10          	shr    $0x10,%rax
     d7a:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     d84:	48 21 d0             	and    %rdx,%rax
     d87:	48 89 c2             	mov    %rax,%rdx
     d8a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     d8f:	48 01 c2             	add    %rax,%rdx
     d92:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     d9c:	48 89 d1             	mov    %rdx,%rcx
     d9f:	48 21 c1             	and    %rax,%rcx
     da2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     da7:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     db1:	48 21 ca             	and    %rcx,%rdx
     db4:	48 c1 e2 10          	shl    $0x10,%rdx
     db8:	48 8b 48 08          	mov    0x8(%rax),%rcx
     dbc:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
     dc6:	48 21 f1             	and    %rsi,%rcx
     dc9:	48 09 ca             	or     %rcx,%rdx
     dcc:	48 89 50 08          	mov    %rdx,0x8(%rax)
     dd0:	48 c7 44 24 20 00 00 00 00 	movq   $0x0,0x20(%rsp)
     dd9:	e9 89 00 00 00       	jmp    e67 <Heap_Defragment+0x14e>
     dde:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     de3:	48 8b 40 08          	mov    0x8(%rax),%rax
     de7:	48 c1 e8 10          	shr    $0x10,%rax
     deb:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
     df5:	48 21 d0             	and    %rdx,%rax
     df8:	48 01 44 24 20       	add    %rax,0x20(%rsp)
     dfd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e02:	48 8b 50 08          	mov    0x8(%rax),%rdx
     e06:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
     e10:	48 21 ca             	and    %rcx,%rdx
     e13:	48 89 50 08          	mov    %rdx,0x8(%rax)
     e17:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
     e1d:	74 48                	je     e67 <Heap_Defragment+0x14e>
     e1f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e24:	8b 40 10             	mov    0x10(%rax),%eax
     e27:	89 c6                	mov    %eax,%esi
     e29:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e2e:	48 8b 00             	mov    (%rax),%rax
     e31:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     e36:	48 8b 0a             	mov    (%rdx),%rcx
     e39:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
     e3e:	48 01 d1             	add    %rdx,%rcx
     e41:	48 89 f2             	mov    %rsi,%rdx
     e44:	48 89 c6             	mov    %rax,%rsi
     e47:	48 89 cf             	mov    %rcx,%rdi
     e4a:	e8 f6 fb ff ff       	call   a45 <Mem_Cpy>
     e4f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e54:	48 8b 10             	mov    (%rax),%rdx
     e57:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     e5c:	48 01 c2             	add    %rax,%rdx
     e5f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e64:	48 89 10             	mov    %rdx,(%rax)
     e67:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     e6c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     e70:	66 85 c0             	test   %ax,%ax
     e73:	0f 85 c4 fe ff ff    	jne    d3d <Heap_Defragment+0x24>
     e79:	90                   	nop
     e7a:	90                   	nop
     e7b:	48 83 c4 28          	add    $0x28,%rsp
     e7f:	c3                   	ret

0000000000000e80 <Heap_AllocateBlock>:
     e80:	48 83 ec 28          	sub    $0x28,%rsp
     e84:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     e89:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     e8e:	89 54 24 04          	mov    %edx,0x4(%rsp)
     e92:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     e97:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     e9c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ea1:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     ea5:	0f b7 c0             	movzwl %ax,%eax
     ea8:	48 c1 e0 05          	shl    $0x5,%rax
     eac:	48 89 c2             	mov    %rax,%rdx
     eaf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     eb4:	48 01 d0             	add    %rdx,%rax
     eb7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     ebc:	eb 20                	jmp    ede <Heap_AllocateBlock+0x5e>
     ebe:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ec3:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
     ec7:	0f b7 c0             	movzwl %ax,%eax
     eca:	48 c1 e0 05          	shl    $0x5,%rax
     ece:	48 89 c2             	mov    %rax,%rdx
     ed1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     ed6:	48 01 d0             	add    %rdx,%rax
     ed9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     ede:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ee3:	0f b7 40 08          	movzwl 0x8(%rax),%eax
     ee7:	66 85 c0             	test   %ax,%ax
     eea:	74 33                	je     f1f <Heap_AllocateBlock+0x9f>
     eec:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     ef1:	48 8b 40 08          	mov    0x8(%rax),%rax
     ef5:	48 c1 e8 10          	shr    $0x10,%rax
     ef9:	48 89 c2             	mov    %rax,%rdx
     efc:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     f06:	48 21 c2             	and    %rax,%rdx
     f09:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f0d:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     f17:	48 21 c8             	and    %rcx,%rax
     f1a:	48 39 c2             	cmp    %rax,%rdx
     f1d:	72 9f                	jb     ebe <Heap_AllocateBlock+0x3e>
     f1f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f24:	48 8b 40 08          	mov    0x8(%rax),%rax
     f28:	48 c1 e8 10          	shr    $0x10,%rax
     f2c:	48 89 c2             	mov    %rax,%rdx
     f2f:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     f39:	48 21 c2             	and    %rax,%rdx
     f3c:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f40:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     f4a:	48 21 c8             	and    %rcx,%rax
     f4d:	48 39 c2             	cmp    %rax,%rdx
     f50:	73 0d                	jae    f5f <Heap_AllocateBlock+0xdf>
     f52:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
     f57:	48 89 c7             	mov    %rax,%rdi
     f5a:	e8 ba fd ff ff       	call   d19 <Heap_Defragment>
     f5f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f64:	48 8b 10             	mov    (%rax),%rdx
     f67:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f6c:	8b 40 10             	mov    0x10(%rax),%eax
     f6f:	89 c1                	mov    %eax,%ecx
     f71:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     f76:	48 8b 40 08          	mov    0x8(%rax),%rax
     f7a:	48 c1 e8 10          	shr    $0x10,%rax
     f7e:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
     f88:	48 21 f0             	and    %rsi,%rax
     f8b:	48 01 c1             	add    %rax,%rcx
     f8e:	8b 44 24 04          	mov    0x4(%rsp),%eax
     f92:	48 29 c1             	sub    %rax,%rcx
     f95:	48 01 ca             	add    %rcx,%rdx
     f98:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
     f9d:	48 89 10             	mov    %rdx,(%rax)
     fa0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     fa5:	48 8b 40 08          	mov    0x8(%rax),%rax
     fa9:	48 c1 e8 10          	shr    $0x10,%rax
     fad:	48 89 c2             	mov    %rax,%rdx
     fb0:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     fba:	48 21 c2             	and    %rax,%rdx
     fbd:	8b 44 24 04          	mov    0x4(%rsp),%eax
     fc1:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     fcb:	48 21 c8             	and    %rcx,%rax
     fce:	48 29 c2             	sub    %rax,%rdx
     fd1:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
     fdb:	48 21 c2             	and    %rax,%rdx
     fde:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
     fe3:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
     fed:	48 21 ca             	and    %rcx,%rdx
     ff0:	48 c1 e2 10          	shl    $0x10,%rdx
     ff4:	48 8b 48 08          	mov    0x8(%rax),%rcx
     ff8:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    1002:	48 21 f1             	and    %rsi,%rcx
    1005:	48 09 ca             	or     %rcx,%rdx
    1008:	48 89 50 08          	mov    %rdx,0x8(%rax)
    100c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1011:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    1015:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    101a:	66 89 50 1c          	mov    %dx,0x1c(%rax)
    101e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1023:	0f b7 50 1e          	movzwl 0x1e(%rax),%edx
    1027:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    102c:	66 89 50 1e          	mov    %dx,0x1e(%rax)
    1030:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1035:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    1039:	0f b7 c0             	movzwl %ax,%eax
    103c:	48 c1 e0 05          	shl    $0x5,%rax
    1040:	48 89 c2             	mov    %rax,%rdx
    1043:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1048:	48 01 c2             	add    %rax,%rdx
    104b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1050:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1054:	66 89 42 1c          	mov    %ax,0x1c(%rdx)
    1058:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    105d:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    1061:	0f b7 c0             	movzwl %ax,%eax
    1064:	48 c1 e0 05          	shl    $0x5,%rax
    1068:	48 89 c2             	mov    %rax,%rdx
    106b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1070:	48 01 c2             	add    %rax,%rdx
    1073:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1078:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    107c:	66 89 42 1e          	mov    %ax,0x1e(%rdx)
    1080:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1085:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1089:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
    1093:	48 21 ca             	and    %rcx,%rdx
    1096:	48 89 50 08          	mov    %rdx,0x8(%rax)
    109a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    109f:	8b 54 24 04          	mov    0x4(%rsp),%edx
    10a3:	89 50 10             	mov    %edx,0x10(%rax)
    10a6:	90                   	nop
    10a7:	48 83 c4 28          	add    $0x28,%rsp
    10ab:	c3                   	ret

00000000000010ac <Heap_FreeBlock>:
    10ac:	48 83 ec 20          	sub    $0x20,%rsp
    10b0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    10b5:	48 89 34 24          	mov    %rsi,(%rsp)
    10b9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    10be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    10c3:	48 8b 04 24          	mov    (%rsp),%rax
    10c7:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    10cb:	0f b7 c0             	movzwl %ax,%eax
    10ce:	48 c1 e0 05          	shl    $0x5,%rax
    10d2:	48 89 c2             	mov    %rax,%rdx
    10d5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    10da:	48 01 d0             	add    %rdx,%rax
    10dd:	48 8b 40 08          	mov    0x8(%rax),%rax
    10e1:	48 c1 e8 10          	shr    $0x10,%rax
    10e5:	48 89 c2             	mov    %rax,%rdx
    10e8:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    10f2:	48 21 c2             	and    %rax,%rdx
    10f5:	48 8b 04 24          	mov    (%rsp),%rax
    10f9:	8b 40 10             	mov    0x10(%rax),%eax
    10fc:	89 c1                	mov    %eax,%ecx
    10fe:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    1108:	48 21 c1             	and    %rax,%rcx
    110b:	48 8b 04 24          	mov    (%rsp),%rax
    110f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1113:	48 c1 e8 10          	shr    $0x10,%rax
    1117:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
    1121:	48 21 f0             	and    %rsi,%rax
    1124:	48 01 c8             	add    %rcx,%rax
    1127:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
    1131:	48 21 c8             	and    %rcx,%rax
    1134:	48 8b 0c 24          	mov    (%rsp),%rcx
    1138:	0f b7 49 1c          	movzwl 0x1c(%rcx),%ecx
    113c:	0f b7 c9             	movzwl %cx,%ecx
    113f:	48 89 ce             	mov    %rcx,%rsi
    1142:	48 c1 e6 05          	shl    $0x5,%rsi
    1146:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    114b:	48 01 f1             	add    %rsi,%rcx
    114e:	48 01 d0             	add    %rdx,%rax
    1151:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    115b:	48 21 d0             	and    %rdx,%rax
    115e:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1168:	48 21 d0             	and    %rdx,%rax
    116b:	48 c1 e0 10          	shl    $0x10,%rax
    116f:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    1173:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    117d:	48 21 f2             	and    %rsi,%rdx
    1180:	48 09 d0             	or     %rdx,%rax
    1183:	48 89 41 08          	mov    %rax,0x8(%rcx)
    1187:	48 8b 04 24          	mov    (%rsp),%rax
    118b:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    118f:	0f b7 c0             	movzwl %ax,%eax
    1192:	48 c1 e0 05          	shl    $0x5,%rax
    1196:	48 89 c2             	mov    %rax,%rdx
    1199:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    119e:	48 01 c2             	add    %rax,%rdx
    11a1:	48 8b 04 24          	mov    (%rsp),%rax
    11a5:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    11a9:	66 89 42 1e          	mov    %ax,0x1e(%rdx)
    11ad:	48 8b 04 24          	mov    (%rsp),%rax
    11b1:	0f b7 40 1e          	movzwl 0x1e(%rax),%eax
    11b5:	0f b7 c0             	movzwl %ax,%eax
    11b8:	48 c1 e0 05          	shl    $0x5,%rax
    11bc:	48 89 c2             	mov    %rax,%rdx
    11bf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    11c4:	48 01 c2             	add    %rax,%rdx
    11c7:	48 8b 04 24          	mov    (%rsp),%rax
    11cb:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
    11cf:	66 89 42 1c          	mov    %ax,0x1c(%rdx)
    11d3:	90                   	nop
    11d4:	48 83 c4 20          	add    $0x20,%rsp
    11d8:	c3                   	ret

00000000000011d9 <_Heap_Allocate>:
    11d9:	48 83 ec 30          	sub    $0x30,%rsp
    11dd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    11e2:	89 74 24 04          	mov    %esi,0x4(%rsp)
    11e6:	89 d0                	mov    %edx,%eax
    11e8:	88 04 24             	mov    %al,(%rsp)
    11eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    11f0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    11f5:	48 c7 44 24 28 00 00 00 00 	movq   $0x0,0x28(%rsp)
    11fe:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    1203:	80 3c 24 00          	cmpb   $0x0,(%rsp)
    1207:	74 05                	je     120e <_Heap_Allocate+0x35>
    1209:	83 44 24 04 08       	addl   $0x8,0x4(%rsp)
    120e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1213:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1217:	66 85 c0             	test   %ax,%ax
    121a:	0f 85 fd 00 00 00    	jne    131d <_Heap_Allocate+0x144>
    1220:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1225:	48 8b 40 08          	mov    0x8(%rax),%rax
    1229:	48 c1 e8 10          	shr    $0x10,%rax
    122d:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1237:	48 21 d0             	and    %rdx,%rax
    123a:	48 83 f8 1f          	cmp    $0x1f,%rax
    123e:	77 12                	ja     1252 <_Heap_Allocate+0x79>
    1240:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1245:	48 89 c7             	mov    %rax,%rdi
    1248:	e8 cc fa ff ff       	call   d19 <Heap_Defragment>
    124d:	c6 44 24 17 01       	movb   $0x1,0x17(%rsp)
    1252:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1257:	8b 40 10             	mov    0x10(%rax),%eax
    125a:	c1 e8 05             	shr    $0x5,%eax
    125d:	66 89 44 24 14       	mov    %ax,0x14(%rsp)
    1262:	0f b7 44 24 14       	movzwl 0x14(%rsp),%eax
    1267:	48 c1 e0 05          	shl    $0x5,%rax
    126b:	48 89 c2             	mov    %rax,%rdx
    126e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1273:	48 01 d0             	add    %rdx,%rax
    1276:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    127b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1280:	0f b7 54 24 14       	movzwl 0x14(%rsp),%edx
    1285:	66 89 50 08          	mov    %dx,0x8(%rax)
    1289:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    128e:	8b 40 10             	mov    0x10(%rax),%eax
    1291:	8d 50 20             	lea    0x20(%rax),%edx
    1294:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1299:	89 50 10             	mov    %edx,0x10(%rax)
    129c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12a1:	48 8b 40 08          	mov    0x8(%rax),%rax
    12a5:	48 c1 e8 10          	shr    $0x10,%rax
    12a9:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    12b3:	48 21 d0             	and    %rdx,%rax
    12b6:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    12ba:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    12c4:	48 89 d1             	mov    %rdx,%rcx
    12c7:	48 21 c1             	and    %rax,%rcx
    12ca:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12cf:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    12d9:	48 21 ca             	and    %rcx,%rdx
    12dc:	48 c1 e2 10          	shl    $0x10,%rdx
    12e0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    12e4:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    12ee:	48 21 f1             	and    %rsi,%rcx
    12f1:	48 09 ca             	or     %rcx,%rdx
    12f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    12f8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12fd:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1301:	0f b7 c0             	movzwl %ax,%eax
    1304:	48 c1 e0 05          	shl    $0x5,%rax
    1308:	48 89 c2             	mov    %rax,%rdx
    130b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1310:	48 01 d0             	add    %rdx,%rax
    1313:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1318:	e9 a0 00 00 00       	jmp    13bd <_Heap_Allocate+0x1e4>
    131d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1322:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1326:	0f b7 c0             	movzwl %ax,%eax
    1329:	48 c1 e0 05          	shl    $0x5,%rax
    132d:	48 89 c2             	mov    %rax,%rdx
    1330:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1335:	48 01 d0             	add    %rdx,%rax
    1338:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    133d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1342:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1346:	0f b7 c0             	movzwl %ax,%eax
    1349:	48 c1 e0 05          	shl    $0x5,%rax
    134d:	48 89 c2             	mov    %rax,%rdx
    1350:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1355:	48 01 c2             	add    %rax,%rdx
    1358:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    135d:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1361:	66 89 42 16          	mov    %ax,0x16(%rdx)
    1365:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    136a:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    136e:	0f b7 c0             	movzwl %ax,%eax
    1371:	48 c1 e0 05          	shl    $0x5,%rax
    1375:	48 89 c2             	mov    %rax,%rdx
    1378:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    137d:	48 01 c2             	add    %rax,%rdx
    1380:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1385:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1389:	66 89 42 14          	mov    %ax,0x14(%rdx)
    138d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1392:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1397:	eb 06                	jmp    139f <_Heap_Allocate+0x1c6>
    1399:	48 83 6c 24 20 20    	subq   $0x20,0x20(%rsp)
    139f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13a4:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    13a8:	66 85 c0             	test   %ax,%ax
    13ab:	74 10                	je     13bd <_Heap_Allocate+0x1e4>
    13ad:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13b2:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    13b6:	83 e0 40             	and    $0x40,%eax
    13b9:	84 c0                	test   %al,%al
    13bb:	75 dc                	jne    1399 <_Heap_Allocate+0x1c0>
    13bd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13c2:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    13c6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13cb:	66 89 50 18          	mov    %dx,0x18(%rax)
    13cf:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    13d4:	0f b7 50 1a          	movzwl 0x1a(%rax),%edx
    13d8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13dd:	66 89 50 1a          	mov    %dx,0x1a(%rax)
    13e1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13e6:	66 c7 40 14 00 00    	movw   $0x0,0x14(%rax)
    13ec:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13f1:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
    13f7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    13fc:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1400:	0f b7 c0             	movzwl %ax,%eax
    1403:	48 c1 e0 05          	shl    $0x5,%rax
    1407:	48 89 c2             	mov    %rax,%rdx
    140a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    140f:	48 01 c2             	add    %rax,%rdx
    1412:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1417:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    141b:	66 89 42 1a          	mov    %ax,0x1a(%rdx)
    141f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1424:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    1428:	0f b7 c0             	movzwl %ax,%eax
    142b:	48 c1 e0 05          	shl    $0x5,%rax
    142f:	48 89 c2             	mov    %rax,%rdx
    1432:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1437:	48 01 c2             	add    %rax,%rdx
    143a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    143f:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1443:	66 89 42 18          	mov    %ax,0x18(%rdx)
    1447:	0f b6 04 24          	movzbl (%rsp),%eax
    144b:	83 e0 01             	and    $0x1,%eax
    144e:	89 c2                	mov    %eax,%edx
    1450:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1455:	89 d1                	mov    %edx,%ecx
    1457:	c1 e1 07             	shl    $0x7,%ecx
    145a:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    145e:	83 e2 7f             	and    $0x7f,%edx
    1461:	09 ca                	or     %ecx,%edx
    1463:	88 50 0f             	mov    %dl,0xf(%rax)
    1466:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    146b:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    146f:	83 e2 bf             	and    $0xffffffbf,%edx
    1472:	88 50 0f             	mov    %dl,0xf(%rax)
    1475:	8b 54 24 04          	mov    0x4(%rsp),%edx
    1479:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    147e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1483:	48 89 ce             	mov    %rcx,%rsi
    1486:	48 89 c7             	mov    %rax,%rdi
    1489:	e8 f2 f9 ff ff       	call   e80 <Heap_AllocateBlock>
    148e:	80 3c 24 00          	cmpb   $0x0,(%rsp)
    1492:	74 10                	je     14a4 <_Heap_Allocate+0x2cb>
    1494:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1499:	48 8b 00             	mov    (%rax),%rax
    149c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    14a1:	48 89 10             	mov    %rdx,(%rax)
    14a4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    14a9:	48 83 c4 30          	add    $0x30,%rsp
    14ad:	c3                   	ret

00000000000014ae <Heap_Allocate>:
    14ae:	48 83 ec 10          	sub    $0x10,%rsp
    14b2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    14b7:	48 89 34 24          	mov    %rsi,(%rsp)
    14bb:	48 8b 04 24          	mov    (%rsp),%rax
    14bf:	89 c1                	mov    %eax,%ecx
    14c1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    14c6:	ba 00 00 00 00       	mov    $0x0,%edx
    14cb:	89 ce                	mov    %ecx,%esi
    14cd:	48 89 c7             	mov    %rax,%rdi
    14d0:	e8 04 fd ff ff       	call   11d9 <_Heap_Allocate>
    14d5:	48 83 c4 10          	add    $0x10,%rsp
    14d9:	c3                   	ret

00000000000014da <Heap_AllocateA>:
    14da:	48 83 ec 10          	sub    $0x10,%rsp
    14de:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    14e3:	48 89 34 24          	mov    %rsi,(%rsp)
    14e7:	48 8b 04 24          	mov    (%rsp),%rax
    14eb:	89 c1                	mov    %eax,%ecx
    14ed:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    14f2:	ba 01 00 00 00       	mov    $0x1,%edx
    14f7:	89 ce                	mov    %ecx,%esi
    14f9:	48 89 c7             	mov    %rax,%rdi
    14fc:	e8 d8 fc ff ff       	call   11d9 <_Heap_Allocate>
    1501:	48 8b 00             	mov    (%rax),%rax
    1504:	48 83 c0 08          	add    $0x8,%rax
    1508:	48 83 c4 10          	add    $0x10,%rsp
    150c:	c3                   	ret

000000000000150d <Heap_Resize>:
    150d:	48 83 ec 30          	sub    $0x30,%rsp
    1511:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    1516:	89 74 24 04          	mov    %esi,0x4(%rsp)
    151a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    151e:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1528:	48 21 d0             	and    %rdx,%rax
    152b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1530:	8b 52 10             	mov    0x10(%rdx),%edx
    1533:	89 d1                	mov    %edx,%ecx
    1535:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    153f:	48 21 d1             	and    %rdx,%rcx
    1542:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1547:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    154b:	48 c1 ea 10          	shr    $0x10,%rdx
    154f:	48 be ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rsi
    1559:	48 21 f2             	and    %rsi,%rdx
    155c:	48 01 ca             	add    %rcx,%rdx
    155f:	48 b9 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rcx
    1569:	48 21 ca             	and    %rcx,%rdx
    156c:	48 39 c2             	cmp    %rax,%rdx
    156f:	0f 82 80 00 00 00    	jb     15f5 <Heap_Resize+0xe8>
    1575:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    157a:	48 8b 40 08          	mov    0x8(%rax),%rax
    157e:	48 c1 e8 10          	shr    $0x10,%rax
    1582:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    158c:	48 21 d0             	and    %rdx,%rax
    158f:	48 89 c1             	mov    %rax,%rcx
    1592:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1597:	8b 40 10             	mov    0x10(%rax),%eax
    159a:	89 c2                	mov    %eax,%edx
    159c:	8b 44 24 04          	mov    0x4(%rsp),%eax
    15a0:	48 29 c2             	sub    %rax,%rdx
    15a3:	48 01 ca             	add    %rcx,%rdx
    15a6:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    15b0:	48 89 d1             	mov    %rdx,%rcx
    15b3:	48 21 c1             	and    %rax,%rcx
    15b6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15bb:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    15c5:	48 21 ca             	and    %rcx,%rdx
    15c8:	48 c1 e2 10          	shl    $0x10,%rdx
    15cc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    15d0:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    15da:	48 21 f1             	and    %rsi,%rcx
    15dd:	48 09 ca             	or     %rcx,%rdx
    15e0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    15e4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15e9:	8b 54 24 04          	mov    0x4(%rsp),%edx
    15ed:	89 50 10             	mov    %edx,0x10(%rax)
    15f0:	e9 86 00 00 00       	jmp    167b <Heap_Resize+0x16e>
    15f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15fa:	48 8b 00             	mov    (%rax),%rax
    15fd:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1602:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1607:	8b 40 10             	mov    0x10(%rax),%eax
    160a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    160e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1613:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    1617:	0f b7 c0             	movzwl %ax,%eax
    161a:	48 c1 e0 05          	shl    $0x5,%rax
    161e:	48 f7 d8             	neg    %rax
    1621:	48 89 c2             	mov    %rax,%rdx
    1624:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1629:	48 01 d0             	add    %rdx,%rax
    162c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1631:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1636:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    163b:	48 89 d6             	mov    %rdx,%rsi
    163e:	48 89 c7             	mov    %rax,%rdi
    1641:	e8 66 fa ff ff       	call   10ac <Heap_FreeBlock>
    1646:	8b 54 24 04          	mov    0x4(%rsp),%edx
    164a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    164f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1654:	48 89 ce             	mov    %rcx,%rsi
    1657:	48 89 c7             	mov    %rax,%rdi
    165a:	e8 21 f8 ff ff       	call   e80 <Heap_AllocateBlock>
    165f:	8b 54 24 24          	mov    0x24(%rsp),%edx
    1663:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1668:	48 8b 00             	mov    (%rax),%rax
    166b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    1670:	48 89 ce             	mov    %rcx,%rsi
    1673:	48 89 c7             	mov    %rax,%rdi
    1676:	e8 ca f3 ff ff       	call   a45 <Mem_Cpy>
    167b:	90                   	nop
    167c:	48 83 c4 30          	add    $0x30,%rsp
    1680:	c3                   	ret

0000000000001681 <Heap_ResizeA>:
    1681:	48 83 ec 20          	sub    $0x20,%rsp
    1685:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    168a:	89 74 24 04          	mov    %esi,0x4(%rsp)
    168e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1693:	48 8b 00             	mov    (%rax),%rax
    1696:	48 89 c7             	mov    %rax,%rdi
    1699:	e8 7b f5 ff ff       	call   c19 <Heap_GetHandle>
    169e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    16a3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    16a7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    16ac:	89 d6                	mov    %edx,%esi
    16ae:	48 89 c7             	mov    %rax,%rdi
    16b1:	e8 57 fe ff ff       	call   150d <Heap_Resize>
    16b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    16bb:	48 8b 10             	mov    (%rax),%rdx
    16be:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    16c3:	48 89 10             	mov    %rdx,(%rax)
    16c6:	90                   	nop
    16c7:	48 83 c4 20          	add    $0x20,%rsp
    16cb:	c3                   	ret

00000000000016cc <Heap_Free>:
    16cc:	48 83 ec 48          	sub    $0x48,%rsp
    16d0:	48 89 3c 24          	mov    %rdi,(%rsp)
    16d4:	48 8b 04 24          	mov    (%rsp),%rax
    16d8:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    16dc:	0f b7 c0             	movzwl %ax,%eax
    16df:	48 c1 e0 05          	shl    $0x5,%rax
    16e3:	48 f7 d8             	neg    %rax
    16e6:	48 89 c2             	mov    %rax,%rdx
    16e9:	48 8b 04 24          	mov    (%rsp),%rax
    16ed:	48 01 d0             	add    %rdx,%rax
    16f0:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    16f5:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    16fa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    16ff:	48 8b 14 24          	mov    (%rsp),%rdx
    1703:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1708:	48 89 d6             	mov    %rdx,%rsi
    170b:	48 89 c7             	mov    %rax,%rdi
    170e:	e8 99 f9 ff ff       	call   10ac <Heap_FreeBlock>
    1713:	48 8b 04 24          	mov    (%rsp),%rax
    1717:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    171b:	0f b7 c0             	movzwl %ax,%eax
    171e:	48 c1 e0 05          	shl    $0x5,%rax
    1722:	48 89 c2             	mov    %rax,%rdx
    1725:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    172a:	48 01 c2             	add    %rax,%rdx
    172d:	48 8b 04 24          	mov    (%rsp),%rax
    1731:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1735:	66 89 42 18          	mov    %ax,0x18(%rdx)
    1739:	48 8b 04 24          	mov    (%rsp),%rax
    173d:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1741:	0f b7 c0             	movzwl %ax,%eax
    1744:	48 c1 e0 05          	shl    $0x5,%rax
    1748:	48 89 c2             	mov    %rax,%rdx
    174b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1750:	48 01 c2             	add    %rax,%rdx
    1753:	48 8b 04 24          	mov    (%rsp),%rax
    1757:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    175b:	66 89 42 1a          	mov    %ax,0x1a(%rdx)
    175f:	48 8b 04 24          	mov    (%rsp),%rax
    1763:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
    1767:	66 85 c0             	test   %ax,%ax
    176a:	0f 85 35 01 00 00    	jne    18a5 <Heap_Free+0x1d9>
    1770:	48 8b 04 24          	mov    (%rsp),%rax
    1774:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    1778:	0f b7 c0             	movzwl %ax,%eax
    177b:	48 c1 e0 05          	shl    $0x5,%rax
    177f:	48 89 c2             	mov    %rax,%rdx
    1782:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1787:	48 01 d0             	add    %rdx,%rax
    178a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    178f:	eb 06                	jmp    1797 <Heap_Free+0xcb>
    1791:	48 83 6c 24 40 20    	subq   $0x20,0x40(%rsp)
    1797:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    179c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    17a0:	66 85 c0             	test   %ax,%ax
    17a3:	74 10                	je     17b5 <Heap_Free+0xe9>
    17a5:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17aa:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    17ae:	83 e0 40             	and    $0x40,%eax
    17b1:	84 c0                	test   %al,%al
    17b3:	74 dc                	je     1791 <Heap_Free+0xc5>
    17b5:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17ba:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    17be:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    17c3:	66 89 50 14          	mov    %dx,0x14(%rax)
    17c7:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    17cc:	66 c7 40 16 00 00    	movw   $0x0,0x16(%rax)
    17d2:	48 8b 04 24          	mov    (%rsp),%rax
    17d6:	0f b7 40 18          	movzwl 0x18(%rax),%eax
    17da:	83 c0 01             	add    $0x1,%eax
    17dd:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
    17e2:	0f b7 44 24 26       	movzwl 0x26(%rsp),%eax
    17e7:	48 c1 e0 05          	shl    $0x5,%rax
    17eb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    17f0:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    17f5:	8b 40 10             	mov    0x10(%rax),%eax
    17f8:	89 c0                	mov    %eax,%eax
    17fa:	48 2b 44 24 18       	sub    0x18(%rsp),%rax
    17ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1804:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1809:	89 c2                	mov    %eax,%edx
    180b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1810:	89 50 10             	mov    %edx,0x10(%rax)
    1813:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1818:	48 8b 40 08          	mov    0x8(%rax),%rax
    181c:	48 c1 e8 10          	shr    $0x10,%rax
    1820:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    182a:	48 21 d0             	and    %rdx,%rax
    182d:	48 89 c2             	mov    %rax,%rdx
    1830:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1835:	48 01 c2             	add    %rax,%rdx
    1838:	48 b8 ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rax
    1842:	48 89 d1             	mov    %rdx,%rcx
    1845:	48 21 c1             	and    %rax,%rcx
    1848:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    184d:	48 ba ff ff ff ff ff 3f 00 00 	movabs $0x3fffffffffff,%rdx
    1857:	48 21 ca             	and    %rcx,%rdx
    185a:	48 c1 e2 10          	shl    $0x10,%rdx
    185e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1862:	48 be ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rsi
    186c:	48 21 f1             	and    %rsi,%rcx
    186f:	48 09 ca             	or     %rcx,%rdx
    1872:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1876:	0f b7 44 24 26       	movzwl 0x26(%rsp),%eax
    187b:	48 c1 e0 05          	shl    $0x5,%rax
    187f:	48 89 c2             	mov    %rax,%rdx
    1882:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1887:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    188b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1890:	48 89 c2             	mov    %rax,%rdx
    1893:	be 00 00 00 00       	mov    $0x0,%esi
    1898:	48 89 cf             	mov    %rcx,%rdi
    189b:	e8 a6 f0 ff ff       	call   946 <Mem_Set>
    18a0:	e9 10 01 00 00       	jmp    19b5 <Heap_Free+0x2e9>
    18a5:	48 8b 04 24          	mov    (%rsp),%rax
    18a9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    18ae:	eb 06                	jmp    18b6 <Heap_Free+0x1ea>
    18b0:	48 83 6c 24 38 20    	subq   $0x20,0x38(%rsp)
    18b6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    18bb:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    18bf:	66 85 c0             	test   %ax,%ax
    18c2:	74 10                	je     18d4 <Heap_Free+0x208>
    18c4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    18c9:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    18cd:	83 e0 40             	and    $0x40,%eax
    18d0:	84 c0                	test   %al,%al
    18d2:	74 dc                	je     18b0 <Heap_Free+0x1e4>
    18d4:	48 8b 04 24          	mov    (%rsp),%rax
    18d8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    18df:	48 8b 04 24          	mov    (%rsp),%rax
    18e3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    18e7:	48 b9 ff ff 00 00 00 00 00 c0 	movabs $0xc00000000000ffff,%rcx
    18f1:	48 21 ca             	and    %rcx,%rdx
    18f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    18f8:	48 8b 04 24          	mov    (%rsp),%rax
    18fc:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    1900:	83 ca 40             	or     $0x40,%edx
    1903:	88 50 0f             	mov    %dl,0xf(%rax)
    1906:	48 8b 04 24          	mov    (%rsp),%rax
    190a:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
    190e:	83 e2 7f             	and    $0x7f,%edx
    1911:	88 50 0f             	mov    %dl,0xf(%rax)
    1914:	48 8b 04 24          	mov    (%rsp),%rax
    1918:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    191f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1924:	0f b7 50 08          	movzwl 0x8(%rax),%edx
    1928:	48 8b 04 24          	mov    (%rsp),%rax
    192c:	66 89 50 14          	mov    %dx,0x14(%rax)
    1930:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1935:	0f b7 50 16          	movzwl 0x16(%rax),%edx
    1939:	48 8b 04 24          	mov    (%rsp),%rax
    193d:	66 89 50 16          	mov    %dx,0x16(%rax)
    1941:	48 8b 04 24          	mov    (%rsp),%rax
    1945:	66 c7 40 18 00 00    	movw   $0x0,0x18(%rax)
    194b:	48 8b 04 24          	mov    (%rsp),%rax
    194f:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
    1955:	48 8b 04 24          	mov    (%rsp),%rax
    1959:	66 c7 40 1c 00 00    	movw   $0x0,0x1c(%rax)
    195f:	48 8b 04 24          	mov    (%rsp),%rax
    1963:	66 c7 40 1e 00 00    	movw   $0x0,0x1e(%rax)
    1969:	48 8b 04 24          	mov    (%rsp),%rax
    196d:	0f b7 40 16          	movzwl 0x16(%rax),%eax
    1971:	0f b7 c0             	movzwl %ax,%eax
    1974:	48 c1 e0 05          	shl    $0x5,%rax
    1978:	48 89 c2             	mov    %rax,%rdx
    197b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    1980:	48 01 c2             	add    %rax,%rdx
    1983:	48 8b 04 24          	mov    (%rsp),%rax
    1987:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    198b:	66 89 42 14          	mov    %ax,0x14(%rdx)
    198f:	48 8b 04 24          	mov    (%rsp),%rax
    1993:	0f b7 40 14          	movzwl 0x14(%rax),%eax
    1997:	0f b7 c0             	movzwl %ax,%eax
    199a:	48 c1 e0 05          	shl    $0x5,%rax
    199e:	48 89 c2             	mov    %rax,%rdx
    19a1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    19a6:	48 01 c2             	add    %rax,%rdx
    19a9:	48 8b 04 24          	mov    (%rsp),%rax
    19ad:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    19b1:	66 89 42 16          	mov    %ax,0x16(%rdx)
    19b5:	90                   	nop
    19b6:	48 83 c4 48          	add    $0x48,%rsp
    19ba:	c3                   	ret

00000000000019bb <Heap_FreeA>:
    19bb:	48 83 ec 08          	sub    $0x8,%rsp
    19bf:	48 89 3c 24          	mov    %rdi,(%rsp)
    19c3:	48 8b 04 24          	mov    (%rsp),%rax
    19c7:	48 89 c7             	mov    %rax,%rdi
    19ca:	e8 4a f2 ff ff       	call   c19 <Heap_GetHandle>
    19cf:	48 89 c7             	mov    %rax,%rdi
    19d2:	e8 f5 fc ff ff       	call   16cc <Heap_Free>
    19d7:	90                   	nop
    19d8:	48 83 c4 08          	add    $0x8,%rsp
    19dc:	c3                   	ret

00000000000019dd <U64_ToStr>:
    19dd:	48 83 ec 28          	sub    $0x28,%rsp
    19e1:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    19e6:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    19eb:	89 54 24 04          	mov    %edx,0x4(%rsp)
    19ef:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    19f4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    19f9:	c7 44 24 1c 01 00 00 00 	movl   $0x1,0x1c(%rsp)
    1a01:	eb 05                	jmp    1a08 <U64_ToStr+0x2b>
    1a03:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1a08:	8b 74 24 04          	mov    0x4(%rsp),%esi
    1a0c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    1a11:	ba 00 00 00 00       	mov    $0x0,%edx
    1a16:	48 f7 f6             	div    %rsi
    1a19:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1a1e:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    1a24:	75 dd                	jne    1a03 <U64_ToStr+0x26>
    1a26:	83 7c 24 04 02       	cmpl   $0x2,0x4(%rsp)
    1a2b:	75 1b                	jne    1a48 <U64_ToStr+0x6b>
    1a2d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a32:	c6 00 30             	movb   $0x30,(%rax)
    1a35:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a3a:	48 83 c0 01          	add    $0x1,%rax
    1a3e:	c6 00 62             	movb   $0x62,(%rax)
    1a41:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1a46:	eb 36                	jmp    1a7e <U64_ToStr+0xa1>
    1a48:	83 7c 24 04 08       	cmpl   $0x8,0x4(%rsp)
    1a4d:	75 0f                	jne    1a5e <U64_ToStr+0x81>
    1a4f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a54:	c6 00 30             	movb   $0x30,(%rax)
    1a57:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1a5c:	eb 20                	jmp    1a7e <U64_ToStr+0xa1>
    1a5e:	83 7c 24 04 10       	cmpl   $0x10,0x4(%rsp)
    1a63:	75 19                	jne    1a7e <U64_ToStr+0xa1>
    1a65:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a6a:	c6 00 30             	movb   $0x30,(%rax)
    1a6d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a72:	48 83 c0 01          	add    $0x1,%rax
    1a76:	c6 00 78             	movb   $0x78,(%rax)
    1a79:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1a7e:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1a82:	8d 50 ff             	lea    -0x1(%rax),%edx
    1a85:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    1a89:	89 c2                	mov    %eax,%edx
    1a8b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1a90:	48 01 d0             	add    %rdx,%rax
    1a93:	c6 00 00             	movb   $0x0,(%rax)
    1a96:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    1a9a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1a9f:	ba 00 00 00 00       	mov    $0x0,%edx
    1aa4:	48 f7 f1             	div    %rcx
    1aa7:	48 89 d0             	mov    %rdx,%rax
    1aaa:	88 44 24 1b          	mov    %al,0x1b(%rsp)
    1aae:	0f b6 4c 24 1b       	movzbl 0x1b(%rsp),%ecx
    1ab3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1ab7:	8d 50 ff             	lea    -0x1(%rax),%edx
    1aba:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    1abe:	89 c2                	mov    %eax,%edx
    1ac0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1ac5:	48 01 c2             	add    %rax,%rdx
    1ac8:	48 63 c1             	movslq %ecx,%rax
    1acb:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 1ad2 <U64_ToStr+0xf5>	1ace: R_X86_64_PC32	.data-0x4
    1ad2:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    1ad6:	88 02                	mov    %al,(%rdx)
    1ad8:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1adc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1ae1:	ba 00 00 00 00       	mov    $0x0,%edx
    1ae6:	48 f7 f7             	div    %rdi
    1ae9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1aee:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    1af4:	75 a0                	jne    1a96 <U64_ToStr+0xb9>
    1af6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1afb:	48 83 c4 28          	add    $0x28,%rsp
    1aff:	c3                   	ret

0000000000001b00 <Serial_Init>:
    1b00:	48 83 ec 38          	sub    $0x38,%rsp
    1b04:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1b08:	48 89 34 24          	mov    %rsi,(%rsp)
    1b0c:	66 c7 44 24 10 f8 03 	movw   $0x3f8,0x10(%rsp)
    1b13:	66 c7 44 24 12 f8 02 	movw   $0x2f8,0x12(%rsp)
    1b1a:	66 c7 44 24 14 e8 03 	movw   $0x3e8,0x14(%rsp)
    1b21:	66 c7 44 24 16 e8 02 	movw   $0x2e8,0x16(%rsp)
    1b28:	66 c7 44 24 18 f8 05 	movw   $0x5f8,0x18(%rsp)
    1b2f:	66 c7 44 24 1a f8 04 	movw   $0x4f8,0x1a(%rsp)
    1b36:	66 c7 44 24 1c e8 05 	movw   $0x5e8,0x1c(%rsp)
    1b3d:	66 c7 44 24 1e e8 04 	movw   $0x4e8,0x1e(%rsp)
    1b44:	c7 44 24 2c 00 00 00 00 	movl   $0x0,0x2c(%rsp)
    1b4c:	e9 49 01 00 00       	jmp    1c9a <Serial_Init+0x19a>
    1b51:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b55:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1b5a:	83 c0 01             	add    $0x1,%eax
    1b5d:	0f b7 c0             	movzwl %ax,%eax
    1b60:	be 00 00 00 00       	mov    $0x0,%esi
    1b65:	89 c7                	mov    %eax,%edi
    1b67:	e8 00 00 00 00       	call   1b6c <Serial_Init+0x6c>	1b68: R_X86_64_PLT32	PortOut08-0x4
    1b6c:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b70:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1b75:	83 c0 03             	add    $0x3,%eax
    1b78:	0f b7 c0             	movzwl %ax,%eax
    1b7b:	be 80 00 00 00       	mov    $0x80,%esi
    1b80:	89 c7                	mov    %eax,%edi
    1b82:	e8 00 00 00 00       	call   1b87 <Serial_Init+0x87>	1b83: R_X86_64_PLT32	PortOut08-0x4
    1b87:	b8 00 c2 01 00       	mov    $0x1c200,%eax
    1b8c:	ba 00 00 00 00       	mov    $0x0,%edx
    1b91:	f7 74 24 0c          	divl   0xc(%rsp)
    1b95:	0f b6 d0             	movzbl %al,%edx
    1b98:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1b9c:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1ba1:	0f b7 c0             	movzwl %ax,%eax
    1ba4:	89 d6                	mov    %edx,%esi
    1ba6:	89 c7                	mov    %eax,%edi
    1ba8:	e8 00 00 00 00       	call   1bad <Serial_Init+0xad>	1ba9: R_X86_64_PLT32	PortOut08-0x4
    1bad:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1bb1:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bb6:	83 c0 01             	add    $0x1,%eax
    1bb9:	0f b7 c0             	movzwl %ax,%eax
    1bbc:	be 00 00 00 00       	mov    $0x0,%esi
    1bc1:	89 c7                	mov    %eax,%edi
    1bc3:	e8 00 00 00 00       	call   1bc8 <Serial_Init+0xc8>	1bc4: R_X86_64_PLT32	PortOut08-0x4
    1bc8:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1bcc:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bd1:	83 c0 03             	add    $0x3,%eax
    1bd4:	0f b7 c0             	movzwl %ax,%eax
    1bd7:	be 03 00 00 00       	mov    $0x3,%esi
    1bdc:	89 c7                	mov    %eax,%edi
    1bde:	e8 00 00 00 00       	call   1be3 <Serial_Init+0xe3>	1bdf: R_X86_64_PLT32	PortOut08-0x4
    1be3:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1be7:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1bec:	83 c0 02             	add    $0x2,%eax
    1bef:	0f b7 c0             	movzwl %ax,%eax
    1bf2:	be c7 00 00 00       	mov    $0xc7,%esi
    1bf7:	89 c7                	mov    %eax,%edi
    1bf9:	e8 00 00 00 00       	call   1bfe <Serial_Init+0xfe>	1bfa: R_X86_64_PLT32	PortOut08-0x4
    1bfe:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c02:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c07:	83 c0 04             	add    $0x4,%eax
    1c0a:	0f b7 c0             	movzwl %ax,%eax
    1c0d:	be 0b 00 00 00       	mov    $0xb,%esi
    1c12:	89 c7                	mov    %eax,%edi
    1c14:	e8 00 00 00 00       	call   1c19 <Serial_Init+0x119>	1c15: R_X86_64_PLT32	PortOut08-0x4
    1c19:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c1d:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c22:	83 c0 04             	add    $0x4,%eax
    1c25:	0f b7 c0             	movzwl %ax,%eax
    1c28:	be 1e 00 00 00       	mov    $0x1e,%esi
    1c2d:	89 c7                	mov    %eax,%edi
    1c2f:	e8 00 00 00 00       	call   1c34 <Serial_Init+0x134>	1c30: R_X86_64_PLT32	PortOut08-0x4
    1c34:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c38:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c3d:	0f b7 c0             	movzwl %ax,%eax
    1c40:	be ae 00 00 00       	mov    $0xae,%esi
    1c45:	89 c7                	mov    %eax,%edi
    1c47:	e8 00 00 00 00       	call   1c4c <Serial_Init+0x14c>	1c48: R_X86_64_PLT32	PortOut08-0x4
    1c4c:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c50:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c55:	0f b7 c0             	movzwl %ax,%eax
    1c58:	89 c7                	mov    %eax,%edi
    1c5a:	e8 00 00 00 00       	call   1c5f <Serial_Init+0x15f>	1c5b: R_X86_64_PLT32	PortIn08-0x4
    1c5f:	3c ae                	cmp    $0xae,%al
    1c61:	75 32                	jne    1c95 <Serial_Init+0x195>
    1c63:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c67:	0f b7 44 44 10       	movzwl 0x10(%rsp,%rax,2),%eax
    1c6c:	83 c0 04             	add    $0x4,%eax
    1c6f:	0f b7 c0             	movzwl %ax,%eax
    1c72:	be 0f 00 00 00       	mov    $0xf,%esi
    1c77:	89 c7                	mov    %eax,%edi
    1c79:	e8 00 00 00 00       	call   1c7e <Serial_Init+0x17e>	1c7a: R_X86_64_PLT32	PortOut08-0x4
    1c7e:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    1c82:	0f b7 54 44 10       	movzwl 0x10(%rsp,%rax,2),%edx
    1c87:	48 8b 04 24          	mov    (%rsp),%rax
    1c8b:	66 89 10             	mov    %dx,(%rax)
    1c8e:	b8 00 00 00 00       	mov    $0x0,%eax
    1c93:	eb 15                	jmp    1caa <Serial_Init+0x1aa>
    1c95:	83 44 24 2c 01       	addl   $0x1,0x2c(%rsp)
    1c9a:	83 7c 24 2c 06       	cmpl   $0x6,0x2c(%rsp)
    1c9f:	0f 86 ac fe ff ff    	jbe    1b51 <Serial_Init+0x51>
    1ca5:	b8 01 00 00 00       	mov    $0x1,%eax
    1caa:	48 83 c4 38          	add    $0x38,%rsp
    1cae:	c3                   	ret

0000000000001caf <Serial_ReadChar>:
    1caf:	48 83 ec 18          	sub    $0x18,%rsp
    1cb3:	89 f8                	mov    %edi,%eax
    1cb5:	48 89 34 24          	mov    %rsi,(%rsp)
    1cb9:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1cbe:	90                   	nop
    1cbf:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1cc4:	83 c0 05             	add    $0x5,%eax
    1cc7:	0f b7 c0             	movzwl %ax,%eax
    1cca:	89 c7                	mov    %eax,%edi
    1ccc:	e8 00 00 00 00       	call   1cd1 <Serial_ReadChar+0x22>	1ccd: R_X86_64_PLT32	PortIn08-0x4
    1cd1:	0f b6 c0             	movzbl %al,%eax
    1cd4:	83 e0 01             	and    $0x1,%eax
    1cd7:	85 c0                	test   %eax,%eax
    1cd9:	74 e4                	je     1cbf <Serial_ReadChar+0x10>
    1cdb:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1ce0:	89 c7                	mov    %eax,%edi
    1ce2:	e8 00 00 00 00       	call   1ce7 <Serial_ReadChar+0x38>	1ce3: R_X86_64_PLT32	PortIn08-0x4
    1ce7:	48 8b 14 24          	mov    (%rsp),%rdx
    1ceb:	88 02                	mov    %al,(%rdx)
    1ced:	90                   	nop
    1cee:	48 83 c4 18          	add    $0x18,%rsp
    1cf2:	c3                   	ret

0000000000001cf3 <Serial_WriteChar>:
    1cf3:	48 83 ec 18          	sub    $0x18,%rsp
    1cf7:	89 fa                	mov    %edi,%edx
    1cf9:	89 f0                	mov    %esi,%eax
    1cfb:	66 89 54 24 0c       	mov    %dx,0xc(%rsp)
    1d00:	88 44 24 08          	mov    %al,0x8(%rsp)
    1d04:	90                   	nop
    1d05:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d0a:	83 c0 05             	add    $0x5,%eax
    1d0d:	0f b7 c0             	movzwl %ax,%eax
    1d10:	89 c7                	mov    %eax,%edi
    1d12:	e8 00 00 00 00       	call   1d17 <Serial_WriteChar+0x24>	1d13: R_X86_64_PLT32	PortIn08-0x4
    1d17:	0f b6 c0             	movzbl %al,%eax
    1d1a:	83 e0 20             	and    $0x20,%eax
    1d1d:	85 c0                	test   %eax,%eax
    1d1f:	74 e4                	je     1d05 <Serial_WriteChar+0x12>
    1d21:	0f b6 54 24 08       	movzbl 0x8(%rsp),%edx
    1d26:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d2b:	89 d6                	mov    %edx,%esi
    1d2d:	89 c7                	mov    %eax,%edi
    1d2f:	e8 00 00 00 00       	call   1d34 <Serial_WriteChar+0x41>	1d30: R_X86_64_PLT32	PortOut08-0x4
    1d34:	90                   	nop
    1d35:	48 83 c4 18          	add    $0x18,%rsp
    1d39:	c3                   	ret

0000000000001d3a <Serial_ReadLine>:
    1d3a:	48 83 ec 28          	sub    $0x28,%rsp
    1d3e:	89 f8                	mov    %edi,%eax
    1d40:	48 89 34 24          	mov    %rsi,(%rsp)
    1d44:	89 54 24 08          	mov    %edx,0x8(%rsp)
    1d48:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1d4d:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    1d55:	e9 88 00 00 00       	jmp    1de2 <Serial_ReadLine+0xa8>
    1d5a:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1d5e:	48 8b 04 24          	mov    (%rsp),%rax
    1d62:	48 01 c2             	add    %rax,%rdx
    1d65:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d6a:	48 89 d6             	mov    %rdx,%rsi
    1d6d:	89 c7                	mov    %eax,%edi
    1d6f:	e8 3b ff ff ff       	call   1caf <Serial_ReadChar>
    1d74:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1d78:	48 8b 04 24          	mov    (%rsp),%rax
    1d7c:	48 01 d0             	add    %rdx,%rax
    1d7f:	0f b6 00             	movzbl (%rax),%eax
    1d82:	0f b6 d0             	movzbl %al,%edx
    1d85:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1d8a:	89 d6                	mov    %edx,%esi
    1d8c:	89 c7                	mov    %eax,%edi
    1d8e:	e8 60 ff ff ff       	call   1cf3 <Serial_WriteChar>
    1d93:	8b 44 24 08          	mov    0x8(%rsp),%eax
    1d97:	83 e8 02             	sub    $0x2,%eax
    1d9a:	39 44 24 1c          	cmp    %eax,0x1c(%rsp)
    1d9e:	73 3d                	jae    1ddd <Serial_ReadLine+0xa3>
    1da0:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1da4:	48 8b 04 24          	mov    (%rsp),%rax
    1da8:	48 01 d0             	add    %rdx,%rax
    1dab:	0f b6 00             	movzbl (%rax),%eax
    1dae:	3c 0d                	cmp    $0xd,%al
    1db0:	75 2b                	jne    1ddd <Serial_ReadLine+0xa3>
    1db2:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1db7:	be 0a 00 00 00       	mov    $0xa,%esi
    1dbc:	89 c7                	mov    %eax,%edi
    1dbe:	e8 30 ff ff ff       	call   1cf3 <Serial_WriteChar>
    1dc3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1dc7:	83 c0 01             	add    $0x1,%eax
    1dca:	89 c2                	mov    %eax,%edx
    1dcc:	48 8b 04 24          	mov    (%rsp),%rax
    1dd0:	48 01 d0             	add    %rdx,%rax
    1dd3:	c6 00 0a             	movb   $0xa,(%rax)
    1dd6:	83 44 24 1c 02       	addl   $0x2,0x1c(%rsp)
    1ddb:	eb 16                	jmp    1df3 <Serial_ReadLine+0xb9>
    1ddd:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1de2:	8b 44 24 08          	mov    0x8(%rsp),%eax
    1de6:	83 e8 01             	sub    $0x1,%eax
    1de9:	39 44 24 1c          	cmp    %eax,0x1c(%rsp)
    1ded:	0f 82 67 ff ff ff    	jb     1d5a <Serial_ReadLine+0x20>
    1df3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1df7:	48 8b 04 24          	mov    (%rsp),%rax
    1dfb:	48 01 d0             	add    %rdx,%rax
    1dfe:	c6 00 00             	movb   $0x0,(%rax)
    1e01:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    1e05:	48 83 c4 28          	add    $0x28,%rsp
    1e09:	c3                   	ret

0000000000001e0a <Serial_Write>:
    1e0a:	48 83 ec 18          	sub    $0x18,%rsp
    1e0e:	89 f8                	mov    %edi,%eax
    1e10:	48 89 34 24          	mov    %rsi,(%rsp)
    1e14:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    1e19:	eb 20                	jmp    1e3b <Serial_Write+0x31>
    1e1b:	48 8b 04 24          	mov    (%rsp),%rax
    1e1f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1e23:	48 89 14 24          	mov    %rdx,(%rsp)
    1e27:	0f b6 00             	movzbl (%rax),%eax
    1e2a:	0f b6 d0             	movzbl %al,%edx
    1e2d:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    1e32:	89 d6                	mov    %edx,%esi
    1e34:	89 c7                	mov    %eax,%edi
    1e36:	e8 b8 fe ff ff       	call   1cf3 <Serial_WriteChar>
    1e3b:	48 8b 04 24          	mov    (%rsp),%rax
    1e3f:	0f b6 00             	movzbl (%rax),%eax
    1e42:	84 c0                	test   %al,%al
    1e44:	75 d5                	jne    1e1b <Serial_Write+0x11>
    1e46:	90                   	nop
    1e47:	90                   	nop
    1e48:	48 83 c4 18          	add    $0x18,%rsp
    1e4c:	c3                   	ret

0000000000001e4d <Exception_DivideByZero>:
    1e4d:	48 83 ec 08          	sub    $0x8,%rsp
    1e51:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1e58 <Exception_DivideByZero+0xb>	1e54: R_X86_64_PC32	.bss+0x814
    1e58:	0f b7 c0             	movzwl %ax,%eax
    1e5b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e62 <Exception_DivideByZero+0x15>	1e5e: R_X86_64_PC32	.rodata-0x4
    1e62:	48 89 d6             	mov    %rdx,%rsi
    1e65:	89 c7                	mov    %eax,%edi
    1e67:	e8 9e ff ff ff       	call   1e0a <Serial_Write>
    1e6c:	90                   	nop
    1e6d:	48 83 c4 08          	add    $0x8,%rsp
    1e71:	c3                   	ret

0000000000001e72 <Exception_Debug>:
    1e72:	48 83 ec 08          	sub    $0x8,%rsp
    1e76:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1e7d <Exception_Debug+0xb>	1e79: R_X86_64_PC32	.bss+0x814
    1e7d:	0f b7 c0             	movzwl %ax,%eax
    1e80:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e87 <Exception_Debug+0x15>	1e83: R_X86_64_PC32	.rodata-0x4
    1e87:	48 89 d6             	mov    %rdx,%rsi
    1e8a:	89 c7                	mov    %eax,%edi
    1e8c:	e8 79 ff ff ff       	call   1e0a <Serial_Write>
    1e91:	90                   	nop
    1e92:	48 83 c4 08          	add    $0x8,%rsp
    1e96:	c3                   	ret

0000000000001e97 <Exception_NonMaskableInterrupt>:
    1e97:	48 83 ec 08          	sub    $0x8,%rsp
    1e9b:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1ea2 <Exception_NonMaskableInterrupt+0xb>	1e9e: R_X86_64_PC32	.bss+0x814
    1ea2:	0f b7 c0             	movzwl %ax,%eax
    1ea5:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1eac <Exception_NonMaskableInterrupt+0x15>	1ea8: R_X86_64_PC32	.rodata-0x4
    1eac:	48 89 d6             	mov    %rdx,%rsi
    1eaf:	89 c7                	mov    %eax,%edi
    1eb1:	e8 54 ff ff ff       	call   1e0a <Serial_Write>
    1eb6:	90                   	nop
    1eb7:	48 83 c4 08          	add    $0x8,%rsp
    1ebb:	c3                   	ret

0000000000001ebc <Exception_Breakpoint>:
    1ebc:	48 83 ec 08          	sub    $0x8,%rsp
    1ec0:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1ec7 <Exception_Breakpoint+0xb>	1ec3: R_X86_64_PC32	.bss+0x814
    1ec7:	0f b7 c0             	movzwl %ax,%eax
    1eca:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1ed1 <Exception_Breakpoint+0x15>	1ecd: R_X86_64_PC32	.rodata-0x4
    1ed1:	48 89 d6             	mov    %rdx,%rsi
    1ed4:	89 c7                	mov    %eax,%edi
    1ed6:	e8 2f ff ff ff       	call   1e0a <Serial_Write>
    1edb:	90                   	nop
    1edc:	48 83 c4 08          	add    $0x8,%rsp
    1ee0:	c3                   	ret

0000000000001ee1 <Exception_Overflow>:
    1ee1:	48 83 ec 08          	sub    $0x8,%rsp
    1ee5:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1eec <Exception_Overflow+0xb>	1ee8: R_X86_64_PC32	.bss+0x814
    1eec:	0f b7 c0             	movzwl %ax,%eax
    1eef:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1ef6 <Exception_Overflow+0x15>	1ef2: R_X86_64_PC32	.rodata-0x4
    1ef6:	48 89 d6             	mov    %rdx,%rsi
    1ef9:	89 c7                	mov    %eax,%edi
    1efb:	e8 0a ff ff ff       	call   1e0a <Serial_Write>
    1f00:	90                   	nop
    1f01:	48 83 c4 08          	add    $0x8,%rsp
    1f05:	c3                   	ret

0000000000001f06 <Exception_BoundsCheck>:
    1f06:	48 83 ec 08          	sub    $0x8,%rsp
    1f0a:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f11 <Exception_BoundsCheck+0xb>	1f0d: R_X86_64_PC32	.bss+0x814
    1f11:	0f b7 c0             	movzwl %ax,%eax
    1f14:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f1b <Exception_BoundsCheck+0x15>	1f17: R_X86_64_PC32	.rodata-0x4
    1f1b:	48 89 d6             	mov    %rdx,%rsi
    1f1e:	89 c7                	mov    %eax,%edi
    1f20:	e8 e5 fe ff ff       	call   1e0a <Serial_Write>
    1f25:	90                   	nop
    1f26:	48 83 c4 08          	add    $0x8,%rsp
    1f2a:	c3                   	ret

0000000000001f2b <Exception_InvalidOpcode>:
    1f2b:	48 83 ec 08          	sub    $0x8,%rsp
    1f2f:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f36 <Exception_InvalidOpcode+0xb>	1f32: R_X86_64_PC32	.bss+0x814
    1f36:	0f b7 c0             	movzwl %ax,%eax
    1f39:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f40 <Exception_InvalidOpcode+0x15>	1f3c: R_X86_64_PC32	.rodata-0x4
    1f40:	48 89 d6             	mov    %rdx,%rsi
    1f43:	89 c7                	mov    %eax,%edi
    1f45:	e8 c0 fe ff ff       	call   1e0a <Serial_Write>
    1f4a:	90                   	nop
    1f4b:	48 83 c4 08          	add    $0x8,%rsp
    1f4f:	c3                   	ret

0000000000001f50 <Exception_DeviceNotAvailable>:
    1f50:	48 83 ec 08          	sub    $0x8,%rsp
    1f54:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f5b <Exception_DeviceNotAvailable+0xb>	1f57: R_X86_64_PC32	.bss+0x814
    1f5b:	0f b7 c0             	movzwl %ax,%eax
    1f5e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f65 <Exception_DeviceNotAvailable+0x15>	1f61: R_X86_64_PC32	.rodata-0x4
    1f65:	48 89 d6             	mov    %rdx,%rsi
    1f68:	89 c7                	mov    %eax,%edi
    1f6a:	e8 9b fe ff ff       	call   1e0a <Serial_Write>
    1f6f:	90                   	nop
    1f70:	48 83 c4 08          	add    $0x8,%rsp
    1f74:	c3                   	ret

0000000000001f75 <Exception_DoubleFault>:
    1f75:	48 83 ec 18          	sub    $0x18,%rsp
    1f79:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1f7d:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1f84 <Exception_DoubleFault+0xf>	1f80: R_X86_64_PC32	.bss+0x814
    1f84:	0f b7 c0             	movzwl %ax,%eax
    1f87:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f8e <Exception_DoubleFault+0x19>	1f8a: R_X86_64_PC32	.rodata-0x4
    1f8e:	48 89 d6             	mov    %rdx,%rsi
    1f91:	89 c7                	mov    %eax,%edi
    1f93:	e8 72 fe ff ff       	call   1e0a <Serial_Write>
    1f98:	90                   	nop
    1f99:	48 83 c4 18          	add    $0x18,%rsp
    1f9d:	c3                   	ret

0000000000001f9e <Exception_InvalidTSS>:
    1f9e:	48 83 ec 18          	sub    $0x18,%rsp
    1fa2:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1fa6:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fad <Exception_InvalidTSS+0xf>	1fa9: R_X86_64_PC32	.bss+0x814
    1fad:	0f b7 c0             	movzwl %ax,%eax
    1fb0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1fb7 <Exception_InvalidTSS+0x19>	1fb3: R_X86_64_PC32	.rodata-0x4
    1fb7:	48 89 d6             	mov    %rdx,%rsi
    1fba:	89 c7                	mov    %eax,%edi
    1fbc:	e8 49 fe ff ff       	call   1e0a <Serial_Write>
    1fc1:	90                   	nop
    1fc2:	48 83 c4 18          	add    $0x18,%rsp
    1fc6:	c3                   	ret

0000000000001fc7 <Exception_SegmentNotPresent>:
    1fc7:	48 83 ec 18          	sub    $0x18,%rsp
    1fcb:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1fcf:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fd6 <Exception_SegmentNotPresent+0xf>	1fd2: R_X86_64_PC32	.bss+0x814
    1fd6:	0f b7 c0             	movzwl %ax,%eax
    1fd9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1fe0 <Exception_SegmentNotPresent+0x19>	1fdc: R_X86_64_PC32	.rodata-0x4
    1fe0:	48 89 d6             	mov    %rdx,%rsi
    1fe3:	89 c7                	mov    %eax,%edi
    1fe5:	e8 20 fe ff ff       	call   1e0a <Serial_Write>
    1fea:	90                   	nop
    1feb:	48 83 c4 18          	add    $0x18,%rsp
    1fef:	c3                   	ret

0000000000001ff0 <Exception_StackSegmentFault>:
    1ff0:	48 83 ec 18          	sub    $0x18,%rsp
    1ff4:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    1ff8:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 1fff <Exception_StackSegmentFault+0xf>	1ffb: R_X86_64_PC32	.bss+0x814
    1fff:	0f b7 c0             	movzwl %ax,%eax
    2002:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2009 <Exception_StackSegmentFault+0x19>	2005: R_X86_64_PC32	.rodata-0x4
    2009:	48 89 d6             	mov    %rdx,%rsi
    200c:	89 c7                	mov    %eax,%edi
    200e:	e8 f7 fd ff ff       	call   1e0a <Serial_Write>
    2013:	90                   	nop
    2014:	48 83 c4 18          	add    $0x18,%rsp
    2018:	c3                   	ret

0000000000002019 <Exception_GeneralProtection>:
    2019:	48 83 ec 18          	sub    $0x18,%rsp
    201d:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2021:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2028 <Exception_GeneralProtection+0xf>	2024: R_X86_64_PC32	.bss+0x814
    2028:	0f b7 c0             	movzwl %ax,%eax
    202b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2032 <Exception_GeneralProtection+0x19>	202e: R_X86_64_PC32	.rodata-0x4
    2032:	48 89 d6             	mov    %rdx,%rsi
    2035:	89 c7                	mov    %eax,%edi
    2037:	e8 ce fd ff ff       	call   1e0a <Serial_Write>
    203c:	90                   	nop
    203d:	48 83 c4 18          	add    $0x18,%rsp
    2041:	c3                   	ret

0000000000002042 <Exception_PageFault>:
    2042:	48 83 ec 18          	sub    $0x18,%rsp
    2046:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    204a:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2051 <Exception_PageFault+0xf>	204d: R_X86_64_PC32	.bss+0x814
    2051:	0f b7 c0             	movzwl %ax,%eax
    2054:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 205b <Exception_PageFault+0x19>	2057: R_X86_64_PC32	.rodata-0x4
    205b:	48 89 d6             	mov    %rdx,%rsi
    205e:	89 c7                	mov    %eax,%edi
    2060:	e8 a5 fd ff ff       	call   1e0a <Serial_Write>
    2065:	90                   	nop
    2066:	48 83 c4 18          	add    $0x18,%rsp
    206a:	c3                   	ret

000000000000206b <Exception_FloatingPoint>:
    206b:	48 83 ec 08          	sub    $0x8,%rsp
    206f:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2076 <Exception_FloatingPoint+0xb>	2072: R_X86_64_PC32	.bss+0x814
    2076:	0f b7 c0             	movzwl %ax,%eax
    2079:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2080 <Exception_FloatingPoint+0x15>	207c: R_X86_64_PC32	.rodata-0x4
    2080:	48 89 d6             	mov    %rdx,%rsi
    2083:	89 c7                	mov    %eax,%edi
    2085:	e8 80 fd ff ff       	call   1e0a <Serial_Write>
    208a:	90                   	nop
    208b:	48 83 c4 08          	add    $0x8,%rsp
    208f:	c3                   	ret

0000000000002090 <Exception_AlignmentCheck>:
    2090:	48 83 ec 18          	sub    $0x18,%rsp
    2094:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2098:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 209f <Exception_AlignmentCheck+0xf>	209b: R_X86_64_PC32	.bss+0x814
    209f:	0f b7 c0             	movzwl %ax,%eax
    20a2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20a9 <Exception_AlignmentCheck+0x19>	20a5: R_X86_64_PC32	.rodata-0x4
    20a9:	48 89 d6             	mov    %rdx,%rsi
    20ac:	89 c7                	mov    %eax,%edi
    20ae:	e8 57 fd ff ff       	call   1e0a <Serial_Write>
    20b3:	90                   	nop
    20b4:	48 83 c4 18          	add    $0x18,%rsp
    20b8:	c3                   	ret

00000000000020b9 <Exception_MachineCheck>:
    20b9:	48 83 ec 08          	sub    $0x8,%rsp
    20bd:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 20c4 <Exception_MachineCheck+0xb>	20c0: R_X86_64_PC32	.bss+0x814
    20c4:	0f b7 c0             	movzwl %ax,%eax
    20c7:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20ce <Exception_MachineCheck+0x15>	20ca: R_X86_64_PC32	.rodata-0x4
    20ce:	48 89 d6             	mov    %rdx,%rsi
    20d1:	89 c7                	mov    %eax,%edi
    20d3:	e8 32 fd ff ff       	call   1e0a <Serial_Write>
    20d8:	90                   	nop
    20d9:	48 83 c4 08          	add    $0x8,%rsp
    20dd:	c3                   	ret

00000000000020de <Exception_SIMDFloatingPoint>:
    20de:	48 83 ec 08          	sub    $0x8,%rsp
    20e2:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 20e9 <Exception_SIMDFloatingPoint+0xb>	20e5: R_X86_64_PC32	.bss+0x814
    20e9:	0f b7 c0             	movzwl %ax,%eax
    20ec:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 20f3 <Exception_SIMDFloatingPoint+0x15>	20ef: R_X86_64_PC32	.rodata-0x4
    20f3:	48 89 d6             	mov    %rdx,%rsi
    20f6:	89 c7                	mov    %eax,%edi
    20f8:	e8 0d fd ff ff       	call   1e0a <Serial_Write>
    20fd:	90                   	nop
    20fe:	48 83 c4 08          	add    $0x8,%rsp
    2102:	c3                   	ret

0000000000002103 <Exception_Virtualization>:
    2103:	48 83 ec 08          	sub    $0x8,%rsp
    2107:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 210e <Exception_Virtualization+0xb>	210a: R_X86_64_PC32	.bss+0x814
    210e:	0f b7 c0             	movzwl %ax,%eax
    2111:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2118 <Exception_Virtualization+0x15>	2114: R_X86_64_PC32	.rodata-0x4
    2118:	48 89 d6             	mov    %rdx,%rsi
    211b:	89 c7                	mov    %eax,%edi
    211d:	e8 e8 fc ff ff       	call   1e0a <Serial_Write>
    2122:	90                   	nop
    2123:	48 83 c4 08          	add    $0x8,%rsp
    2127:	c3                   	ret

0000000000002128 <Exception_ControlProtection>:
    2128:	48 83 ec 18          	sub    $0x18,%rsp
    212c:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2130:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2137 <Exception_ControlProtection+0xf>	2133: R_X86_64_PC32	.bss+0x814
    2137:	0f b7 c0             	movzwl %ax,%eax
    213a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2141 <Exception_ControlProtection+0x19>	213d: R_X86_64_PC32	.rodata-0x4
    2141:	48 89 d6             	mov    %rdx,%rsi
    2144:	89 c7                	mov    %eax,%edi
    2146:	e8 bf fc ff ff       	call   1e0a <Serial_Write>
    214b:	90                   	nop
    214c:	48 83 c4 18          	add    $0x18,%rsp
    2150:	c3                   	ret

0000000000002151 <Exception_HypervisorInjection>:
    2151:	48 83 ec 08          	sub    $0x8,%rsp
    2155:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 215c <Exception_HypervisorInjection+0xb>	2158: R_X86_64_PC32	.bss+0x814
    215c:	0f b7 c0             	movzwl %ax,%eax
    215f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2166 <Exception_HypervisorInjection+0x15>	2162: R_X86_64_PC32	.rodata-0x4
    2166:	48 89 d6             	mov    %rdx,%rsi
    2169:	89 c7                	mov    %eax,%edi
    216b:	e8 9a fc ff ff       	call   1e0a <Serial_Write>
    2170:	90                   	nop
    2171:	48 83 c4 08          	add    $0x8,%rsp
    2175:	c3                   	ret

0000000000002176 <Exception_VMMCommunication>:
    2176:	48 83 ec 18          	sub    $0x18,%rsp
    217a:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    217e:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 2185 <Exception_VMMCommunication+0xf>	2181: R_X86_64_PC32	.bss+0x814
    2185:	0f b7 c0             	movzwl %ax,%eax
    2188:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 218f <Exception_VMMCommunication+0x19>	218b: R_X86_64_PC32	.rodata-0x4
    218f:	48 89 d6             	mov    %rdx,%rsi
    2192:	89 c7                	mov    %eax,%edi
    2194:	e8 71 fc ff ff       	call   1e0a <Serial_Write>
    2199:	90                   	nop
    219a:	48 83 c4 18          	add    $0x18,%rsp
    219e:	c3                   	ret

000000000000219f <Exception_Security>:
    219f:	48 83 ec 18          	sub    $0x18,%rsp
    21a3:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    21a7:	0f b7 05 00 00 00 00 	movzwl 0x0(%rip),%eax        # 21ae <Exception_Security+0xf>	21aa: R_X86_64_PC32	.bss+0x814
    21ae:	0f b7 c0             	movzwl %ax,%eax
    21b1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 21b8 <Exception_Security+0x19>	21b4: R_X86_64_PC32	.rodata-0x4
    21b8:	48 89 d6             	mov    %rdx,%rsi
    21bb:	89 c7                	mov    %eax,%edi
    21bd:	e8 48 fc ff ff       	call   1e0a <Serial_Write>
    21c2:	90                   	nop
    21c3:	48 83 c4 18          	add    $0x18,%rsp
    21c7:	c3                   	ret

00000000000021c8 <GDT_Init>:
    21c8:	48 83 ec 38          	sub    $0x38,%rsp
    21cc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    21d1:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    21d6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    21db:	48 89 0c 24          	mov    %rcx,(%rsp)
    21df:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    21e4:	ba 28 00 00 00       	mov    $0x28,%edx
    21e9:	be 00 00 00 00       	mov    $0x0,%esi
    21ee:	48 89 c7             	mov    %rax,%rdi
    21f1:	e8 50 e7 ff ff       	call   946 <Mem_Set>
    21f6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    21fb:	c6 40 0d 9a          	movb   $0x9a,0xd(%rax)
    21ff:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2204:	c6 40 0e 20          	movb   $0x20,0xe(%rax)
    2208:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    220d:	c6 40 15 92          	movb   $0x92,0x15(%rax)
    2211:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2216:	c6 40 16 00          	movb   $0x0,0x16(%rax)
    221a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    221f:	66 c7 40 18 6a 00    	movw   $0x6a,0x18(%rax)
    2225:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    222a:	c6 40 1d 89          	movb   $0x89,0x1d(%rax)
    222e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2233:	c6 40 1e 10          	movb   $0x10,0x1e(%rax)
    2237:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    223c:	89 c2                	mov    %eax,%edx
    223e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2243:	66 89 50 1a          	mov    %dx,0x1a(%rax)
    2247:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    224c:	48 c1 e8 10          	shr    $0x10,%rax
    2250:	89 c2                	mov    %eax,%edx
    2252:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2257:	88 50 1c             	mov    %dl,0x1c(%rax)
    225a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    225f:	48 c1 e8 18          	shr    $0x18,%rax
    2263:	89 c2                	mov    %eax,%edx
    2265:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    226a:	88 50 1f             	mov    %dl,0x1f(%rax)
    226d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2272:	48 83 c0 20          	add    $0x20,%rax
    2276:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    227b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2280:	48 c1 e8 20          	shr    $0x20,%rax
    2284:	89 c2                	mov    %eax,%edx
    2286:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    228b:	89 10                	mov    %edx,(%rax)
    228d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2292:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2298:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    229d:	48 8b 00             	mov    (%rax),%rax
    22a0:	89 c2                	mov    %eax,%edx
    22a2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22a7:	89 50 04             	mov    %edx,0x4(%rax)
    22aa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22af:	48 8b 00             	mov    (%rax),%rax
    22b2:	48 c1 f8 20          	sar    $0x20,%rax
    22b6:	89 c2                	mov    %eax,%edx
    22b8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22bd:	89 50 08             	mov    %edx,0x8(%rax)
    22c0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22c5:	48 83 c0 08          	add    $0x8,%rax
    22c9:	48 8b 00             	mov    (%rax),%rax
    22cc:	89 c2                	mov    %eax,%edx
    22ce:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22d3:	89 50 0c             	mov    %edx,0xc(%rax)
    22d6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22db:	48 83 c0 08          	add    $0x8,%rax
    22df:	48 8b 00             	mov    (%rax),%rax
    22e2:	48 c1 f8 20          	sar    $0x20,%rax
    22e6:	89 c2                	mov    %eax,%edx
    22e8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    22ed:	89 50 10             	mov    %edx,0x10(%rax)
    22f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    22f5:	48 83 c0 10          	add    $0x10,%rax
    22f9:	48 8b 00             	mov    (%rax),%rax
    22fc:	89 c2                	mov    %eax,%edx
    22fe:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2303:	89 50 14             	mov    %edx,0x14(%rax)
    2306:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    230b:	48 83 c0 10          	add    $0x10,%rax
    230f:	48 8b 00             	mov    (%rax),%rax
    2312:	48 c1 f8 20          	sar    $0x20,%rax
    2316:	89 c2                	mov    %eax,%edx
    2318:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    231d:	89 50 18             	mov    %edx,0x18(%rax)
    2320:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2325:	48 c7 40 1c 00 00 00 00 	movq   $0x0,0x1c(%rax)
    232d:	48 8b 04 24          	mov    (%rsp),%rax
    2331:	48 8b 00             	mov    (%rax),%rax
    2334:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    233a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    233f:	89 50 24             	mov    %edx,0x24(%rax)
    2342:	48 8b 04 24          	mov    (%rsp),%rax
    2346:	48 8b 00             	mov    (%rax),%rax
    2349:	48 05 00 10 00 00    	add    $0x1000,%rax
    234f:	48 c1 f8 20          	sar    $0x20,%rax
    2353:	89 c2                	mov    %eax,%edx
    2355:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    235a:	89 50 28             	mov    %edx,0x28(%rax)
    235d:	48 8b 04 24          	mov    (%rsp),%rax
    2361:	48 83 c0 08          	add    $0x8,%rax
    2365:	48 8b 00             	mov    (%rax),%rax
    2368:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    236e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2373:	89 50 2c             	mov    %edx,0x2c(%rax)
    2376:	48 8b 04 24          	mov    (%rsp),%rax
    237a:	48 83 c0 08          	add    $0x8,%rax
    237e:	48 8b 00             	mov    (%rax),%rax
    2381:	48 05 00 10 00 00    	add    $0x1000,%rax
    2387:	48 c1 f8 20          	sar    $0x20,%rax
    238b:	89 c2                	mov    %eax,%edx
    238d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2392:	89 50 30             	mov    %edx,0x30(%rax)
    2395:	48 8b 04 24          	mov    (%rsp),%rax
    2399:	48 83 c0 10          	add    $0x10,%rax
    239d:	48 8b 00             	mov    (%rax),%rax
    23a0:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    23a6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23ab:	89 50 34             	mov    %edx,0x34(%rax)
    23ae:	48 8b 04 24          	mov    (%rsp),%rax
    23b2:	48 83 c0 10          	add    $0x10,%rax
    23b6:	48 8b 00             	mov    (%rax),%rax
    23b9:	48 05 00 10 00 00    	add    $0x1000,%rax
    23bf:	48 c1 f8 20          	sar    $0x20,%rax
    23c3:	89 c2                	mov    %eax,%edx
    23c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23ca:	89 50 38             	mov    %edx,0x38(%rax)
    23cd:	48 8b 04 24          	mov    (%rsp),%rax
    23d1:	48 83 c0 18          	add    $0x18,%rax
    23d5:	48 8b 00             	mov    (%rax),%rax
    23d8:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    23de:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    23e3:	89 50 3c             	mov    %edx,0x3c(%rax)
    23e6:	48 8b 04 24          	mov    (%rsp),%rax
    23ea:	48 83 c0 18          	add    $0x18,%rax
    23ee:	48 8b 00             	mov    (%rax),%rax
    23f1:	48 05 00 10 00 00    	add    $0x1000,%rax
    23f7:	48 c1 f8 20          	sar    $0x20,%rax
    23fb:	89 c2                	mov    %eax,%edx
    23fd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2402:	89 50 40             	mov    %edx,0x40(%rax)
    2405:	48 8b 04 24          	mov    (%rsp),%rax
    2409:	48 83 c0 20          	add    $0x20,%rax
    240d:	48 8b 00             	mov    (%rax),%rax
    2410:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    2416:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    241b:	89 50 44             	mov    %edx,0x44(%rax)
    241e:	48 8b 04 24          	mov    (%rsp),%rax
    2422:	48 83 c0 20          	add    $0x20,%rax
    2426:	48 8b 00             	mov    (%rax),%rax
    2429:	48 05 00 10 00 00    	add    $0x1000,%rax
    242f:	48 c1 f8 20          	sar    $0x20,%rax
    2433:	89 c2                	mov    %eax,%edx
    2435:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    243a:	89 50 48             	mov    %edx,0x48(%rax)
    243d:	48 8b 04 24          	mov    (%rsp),%rax
    2441:	48 83 c0 28          	add    $0x28,%rax
    2445:	48 8b 00             	mov    (%rax),%rax
    2448:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    244e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2453:	89 50 4c             	mov    %edx,0x4c(%rax)
    2456:	48 8b 04 24          	mov    (%rsp),%rax
    245a:	48 83 c0 28          	add    $0x28,%rax
    245e:	48 8b 00             	mov    (%rax),%rax
    2461:	48 05 00 10 00 00    	add    $0x1000,%rax
    2467:	48 c1 f8 20          	sar    $0x20,%rax
    246b:	89 c2                	mov    %eax,%edx
    246d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2472:	89 50 50             	mov    %edx,0x50(%rax)
    2475:	48 8b 04 24          	mov    (%rsp),%rax
    2479:	48 83 c0 30          	add    $0x30,%rax
    247d:	48 8b 00             	mov    (%rax),%rax
    2480:	8d 90 00 10 00 00    	lea    0x1000(%rax),%edx
    2486:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    248b:	89 50 54             	mov    %edx,0x54(%rax)
    248e:	48 8b 04 24          	mov    (%rsp),%rax
    2492:	48 83 c0 30          	add    $0x30,%rax
    2496:	48 8b 00             	mov    (%rax),%rax
    2499:	48 05 00 10 00 00    	add    $0x1000,%rax
    249f:	48 c1 f8 20          	sar    $0x20,%rax
    24a3:	89 c2                	mov    %eax,%edx
    24a5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24aa:	89 50 58             	mov    %edx,0x58(%rax)
    24ad:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24b2:	48 c7 40 5c 00 00 00 00 	movq   $0x0,0x5c(%rax)
    24ba:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24bf:	66 c7 40 64 00 00    	movw   $0x0,0x64(%rax)
    24c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24ca:	66 c7 40 66 68 00    	movw   $0x68,0x66(%rax)
    24d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    24d5:	66 c7 40 68 ff ff    	movw   $0xffff,0x68(%rax)
    24db:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    24e0:	be 27 00 00 00       	mov    $0x27,%esi
    24e5:	48 89 c7             	mov    %rax,%rdi
    24e8:	e8 00 00 00 00       	call   24ed <GDT_Init+0x325>	24e9: R_X86_64_PLT32	SetGDTR-0x4
    24ed:	bf 18 00 00 00       	mov    $0x18,%edi
    24f2:	e8 00 00 00 00       	call   24f7 <GDT_Init+0x32f>	24f3: R_X86_64_PLT32	SetTR-0x4
    24f7:	90                   	nop
    24f8:	48 83 c4 38          	add    $0x38,%rsp
    24fc:	c3                   	ret

00000000000024fd <IDT_SetEntry>:
    24fd:	48 83 ec 38          	sub    $0x38,%rsp
    2501:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2506:	89 74 24 14          	mov    %esi,0x14(%rsp)
    250a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    250f:	8b 44 24 14          	mov    0x14(%rsp),%eax
    2513:	48 8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%rcx
    251b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2522 <IDT_SetEntry+0x25>	251e: R_X86_64_PC32	InterruptHandlers-0x4
    2522:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2527:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    252b:	e8 00 00 00 00       	call   2530 <IDT_SetEntry+0x33>	252c: R_X86_64_PLT32	GetInterruptStep-0x4
    2530:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2535:	8b 44 24 14          	mov    0x14(%rsp),%eax
    2539:	48 0f af 44 24 28    	imul   0x28(%rsp),%rax
    253f:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2546 <IDT_SetEntry+0x49>	2542: R_X86_64_REX_GOTPCRELX	InterruptSwitch-0x4
    2546:	48 01 d0             	add    %rdx,%rax
    2549:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    254e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2553:	89 c1                	mov    %eax,%ecx
    2555:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    255a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    255e:	48 c1 e2 04          	shl    $0x4,%rdx
    2562:	48 01 d0             	add    %rdx,%rax
    2565:	66 89 08             	mov    %cx,(%rax)
    2568:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    256d:	48 c1 e8 10          	shr    $0x10,%rax
    2571:	89 c1                	mov    %eax,%ecx
    2573:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2578:	8b 54 24 14          	mov    0x14(%rsp),%edx
    257c:	48 c1 e2 04          	shl    $0x4,%rdx
    2580:	48 01 d0             	add    %rdx,%rax
    2583:	48 83 c0 06          	add    $0x6,%rax
    2587:	66 89 08             	mov    %cx,(%rax)
    258a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    258f:	48 c1 e8 20          	shr    $0x20,%rax
    2593:	89 c1                	mov    %eax,%ecx
    2595:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    259a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    259e:	48 c1 e2 04          	shl    $0x4,%rdx
    25a2:	48 01 d0             	add    %rdx,%rax
    25a5:	48 83 c0 08          	add    $0x8,%rax
    25a9:	89 08                	mov    %ecx,(%rax)
    25ab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25b0:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25b4:	48 c1 e2 04          	shl    $0x4,%rdx
    25b8:	48 01 d0             	add    %rdx,%rax
    25bb:	48 83 c0 02          	add    $0x2,%rax
    25bf:	66 c7 00 08 00       	movw   $0x8,(%rax)
    25c4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25c9:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25cd:	48 c1 e2 04          	shl    $0x4,%rdx
    25d1:	48 01 d0             	add    %rdx,%rax
    25d4:	48 83 c0 04          	add    $0x4,%rax
    25d8:	c6 00 00             	movb   $0x0,(%rax)
    25db:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25e0:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25e4:	48 c1 e2 04          	shl    $0x4,%rdx
    25e8:	48 01 d0             	add    %rdx,%rax
    25eb:	48 83 c0 05          	add    $0x5,%rax
    25ef:	c6 00 8e             	movb   $0x8e,(%rax)
    25f2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    25f7:	8b 54 24 14          	mov    0x14(%rsp),%edx
    25fb:	48 c1 e2 04          	shl    $0x4,%rdx
    25ff:	48 01 d0             	add    %rdx,%rax
    2602:	48 83 c0 0c          	add    $0xc,%rax
    2606:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    260c:	90                   	nop
    260d:	48 83 c4 38          	add    $0x38,%rsp
    2611:	c3                   	ret

0000000000002612 <IDT_Init>:
    2612:	48 83 ec 18          	sub    $0x18,%rsp
    2616:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    261b:	ba 00 08 00 00       	mov    $0x800,%edx
    2620:	be 00 00 00 00       	mov    $0x0,%esi
    2625:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 262c <IDT_Init+0x1a>	2628: R_X86_64_PC32	InterruptHandlers-0x4
    262c:	48 89 c7             	mov    %rax,%rdi
    262f:	e8 12 e3 ff ff       	call   946 <Mem_Set>
    2634:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2639:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2640 <IDT_Init+0x2e>	263c: R_X86_64_PC32	Exception_DivideByZero-0x4
    2640:	be 00 00 00 00       	mov    $0x0,%esi
    2645:	48 89 c7             	mov    %rax,%rdi
    2648:	e8 b0 fe ff ff       	call   24fd <IDT_SetEntry>
    264d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2652:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2659 <IDT_Init+0x47>	2655: R_X86_64_PC32	Exception_Debug-0x4
    2659:	be 01 00 00 00       	mov    $0x1,%esi
    265e:	48 89 c7             	mov    %rax,%rdi
    2661:	e8 97 fe ff ff       	call   24fd <IDT_SetEntry>
    2666:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    266b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2672 <IDT_Init+0x60>	266e: R_X86_64_PC32	Exception_NonMaskableInterrupt-0x4
    2672:	be 02 00 00 00       	mov    $0x2,%esi
    2677:	48 89 c7             	mov    %rax,%rdi
    267a:	e8 7e fe ff ff       	call   24fd <IDT_SetEntry>
    267f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2684:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 268b <IDT_Init+0x79>	2687: R_X86_64_PC32	Exception_Breakpoint-0x4
    268b:	be 03 00 00 00       	mov    $0x3,%esi
    2690:	48 89 c7             	mov    %rax,%rdi
    2693:	e8 65 fe ff ff       	call   24fd <IDT_SetEntry>
    2698:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    269d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26a4 <IDT_Init+0x92>	26a0: R_X86_64_PC32	Exception_Overflow-0x4
    26a4:	be 04 00 00 00       	mov    $0x4,%esi
    26a9:	48 89 c7             	mov    %rax,%rdi
    26ac:	e8 4c fe ff ff       	call   24fd <IDT_SetEntry>
    26b1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26b6:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26bd <IDT_Init+0xab>	26b9: R_X86_64_PC32	Exception_BoundsCheck-0x4
    26bd:	be 05 00 00 00       	mov    $0x5,%esi
    26c2:	48 89 c7             	mov    %rax,%rdi
    26c5:	e8 33 fe ff ff       	call   24fd <IDT_SetEntry>
    26ca:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26cf:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26d6 <IDT_Init+0xc4>	26d2: R_X86_64_PC32	Exception_InvalidOpcode-0x4
    26d6:	be 06 00 00 00       	mov    $0x6,%esi
    26db:	48 89 c7             	mov    %rax,%rdi
    26de:	e8 1a fe ff ff       	call   24fd <IDT_SetEntry>
    26e3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    26e8:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26ef <IDT_Init+0xdd>	26eb: R_X86_64_PC32	Exception_DeviceNotAvailable-0x4
    26ef:	be 07 00 00 00       	mov    $0x7,%esi
    26f4:	48 89 c7             	mov    %rax,%rdi
    26f7:	e8 01 fe ff ff       	call   24fd <IDT_SetEntry>
    26fc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2701:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2708 <IDT_Init+0xf6>	2704: R_X86_64_PC32	Exception_DoubleFault-0x4
    2708:	be 08 00 00 00       	mov    $0x8,%esi
    270d:	48 89 c7             	mov    %rax,%rdi
    2710:	e8 e8 fd ff ff       	call   24fd <IDT_SetEntry>
    2715:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    271a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2721 <IDT_Init+0x10f>	271d: R_X86_64_PC32	Exception_InvalidTSS-0x4
    2721:	be 0a 00 00 00       	mov    $0xa,%esi
    2726:	48 89 c7             	mov    %rax,%rdi
    2729:	e8 cf fd ff ff       	call   24fd <IDT_SetEntry>
    272e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2733:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 273a <IDT_Init+0x128>	2736: R_X86_64_PC32	Exception_SegmentNotPresent-0x4
    273a:	be 0b 00 00 00       	mov    $0xb,%esi
    273f:	48 89 c7             	mov    %rax,%rdi
    2742:	e8 b6 fd ff ff       	call   24fd <IDT_SetEntry>
    2747:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    274c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2753 <IDT_Init+0x141>	274f: R_X86_64_PC32	Exception_StackSegmentFault-0x4
    2753:	be 0c 00 00 00       	mov    $0xc,%esi
    2758:	48 89 c7             	mov    %rax,%rdi
    275b:	e8 9d fd ff ff       	call   24fd <IDT_SetEntry>
    2760:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2765:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 276c <IDT_Init+0x15a>	2768: R_X86_64_PC32	Exception_GeneralProtection-0x4
    276c:	be 0d 00 00 00       	mov    $0xd,%esi
    2771:	48 89 c7             	mov    %rax,%rdi
    2774:	e8 84 fd ff ff       	call   24fd <IDT_SetEntry>
    2779:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    277e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2785 <IDT_Init+0x173>	2781: R_X86_64_PC32	Exception_PageFault-0x4
    2785:	be 0e 00 00 00       	mov    $0xe,%esi
    278a:	48 89 c7             	mov    %rax,%rdi
    278d:	e8 6b fd ff ff       	call   24fd <IDT_SetEntry>
    2792:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2797:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 279e <IDT_Init+0x18c>	279a: R_X86_64_PC32	Exception_FloatingPoint-0x4
    279e:	be 10 00 00 00       	mov    $0x10,%esi
    27a3:	48 89 c7             	mov    %rax,%rdi
    27a6:	e8 52 fd ff ff       	call   24fd <IDT_SetEntry>
    27ab:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27b0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27b7 <IDT_Init+0x1a5>	27b3: R_X86_64_PC32	Exception_AlignmentCheck-0x4
    27b7:	be 11 00 00 00       	mov    $0x11,%esi
    27bc:	48 89 c7             	mov    %rax,%rdi
    27bf:	e8 39 fd ff ff       	call   24fd <IDT_SetEntry>
    27c4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27c9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27d0 <IDT_Init+0x1be>	27cc: R_X86_64_PC32	Exception_MachineCheck-0x4
    27d0:	be 12 00 00 00       	mov    $0x12,%esi
    27d5:	48 89 c7             	mov    %rax,%rdi
    27d8:	e8 20 fd ff ff       	call   24fd <IDT_SetEntry>
    27dd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27e2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27e9 <IDT_Init+0x1d7>	27e5: R_X86_64_PC32	Exception_SIMDFloatingPoint-0x4
    27e9:	be 13 00 00 00       	mov    $0x13,%esi
    27ee:	48 89 c7             	mov    %rax,%rdi
    27f1:	e8 07 fd ff ff       	call   24fd <IDT_SetEntry>
    27f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    27fb:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2802 <IDT_Init+0x1f0>	27fe: R_X86_64_PC32	Exception_Virtualization-0x4
    2802:	be 14 00 00 00       	mov    $0x14,%esi
    2807:	48 89 c7             	mov    %rax,%rdi
    280a:	e8 ee fc ff ff       	call   24fd <IDT_SetEntry>
    280f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2814:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 281b <IDT_Init+0x209>	2817: R_X86_64_PC32	Exception_ControlProtection-0x4
    281b:	be 15 00 00 00       	mov    $0x15,%esi
    2820:	48 89 c7             	mov    %rax,%rdi
    2823:	e8 d5 fc ff ff       	call   24fd <IDT_SetEntry>
    2828:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    282d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2834 <IDT_Init+0x222>	2830: R_X86_64_PC32	Exception_HypervisorInjection-0x4
    2834:	be 1c 00 00 00       	mov    $0x1c,%esi
    2839:	48 89 c7             	mov    %rax,%rdi
    283c:	e8 bc fc ff ff       	call   24fd <IDT_SetEntry>
    2841:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2846:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 284d <IDT_Init+0x23b>	2849: R_X86_64_PC32	Exception_VMMCommunication-0x4
    284d:	be 1d 00 00 00       	mov    $0x1d,%esi
    2852:	48 89 c7             	mov    %rax,%rdi
    2855:	e8 a3 fc ff ff       	call   24fd <IDT_SetEntry>
    285a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    285f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2866 <IDT_Init+0x254>	2862: R_X86_64_PC32	Exception_Security-0x4
    2866:	be 1e 00 00 00       	mov    $0x1e,%esi
    286b:	48 89 c7             	mov    %rax,%rdi
    286e:	e8 8a fc ff ff       	call   24fd <IDT_SetEntry>
    2873:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2878:	be ff 0f 00 00       	mov    $0xfff,%esi
    287d:	48 89 c7             	mov    %rax,%rdi
    2880:	e8 00 00 00 00       	call   2885 <IDT_Init+0x273>	2881: R_X86_64_PLT32	SetIDTR-0x4
    2885:	90                   	nop
    2886:	48 83 c4 18          	add    $0x18,%rsp
    288a:	c3                   	ret

000000000000288b <ValidateRSDP>:
    288b:	48 83 ec 18          	sub    $0x18,%rsp
    288f:	48 89 3c 24          	mov    %rdi,(%rsp)
    2893:	48 8b 04 24          	mov    (%rsp),%rax
    2897:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    289b:	3c 02                	cmp    $0x2,%al
    289d:	74 07                	je     28a6 <ValidateRSDP+0x1b>
    289f:	b8 00 00 00 00       	mov    $0x0,%eax
    28a4:	eb 40                	jmp    28e6 <ValidateRSDP+0x5b>
    28a6:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    28ab:	c7 44 24 10 00 00 00 00 	movl   $0x0,0x10(%rsp)
    28b3:	eb 17                	jmp    28cc <ValidateRSDP+0x41>
    28b5:	8b 54 24 10          	mov    0x10(%rsp),%edx
    28b9:	48 8b 04 24          	mov    (%rsp),%rax
    28bd:	48 01 d0             	add    %rdx,%rax
    28c0:	0f b6 00             	movzbl (%rax),%eax
    28c3:	00 44 24 17          	add    %al,0x17(%rsp)
    28c7:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
    28cc:	83 7c 24 10 23       	cmpl   $0x23,0x10(%rsp)
    28d1:	76 e2                	jbe    28b5 <ValidateRSDP+0x2a>
    28d3:	80 7c 24 17 00       	cmpb   $0x0,0x17(%rsp)
    28d8:	74 07                	je     28e1 <ValidateRSDP+0x56>
    28da:	b8 00 00 00 00       	mov    $0x0,%eax
    28df:	eb 05                	jmp    28e6 <ValidateRSDP+0x5b>
    28e1:	b8 01 00 00 00       	mov    $0x1,%eax
    28e6:	48 83 c4 18          	add    $0x18,%rsp
    28ea:	c3                   	ret

00000000000028eb <ValidateSDT>:
    28eb:	48 83 ec 18          	sub    $0x18,%rsp
    28ef:	48 89 3c 24          	mov    %rdi,(%rsp)
    28f3:	48 8b 04 24          	mov    (%rsp),%rax
    28f7:	8b 40 04             	mov    0x4(%rax),%eax
    28fa:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    28fe:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    2903:	c7 44 24 10 00 00 00 00 	movl   $0x0,0x10(%rsp)
    290b:	eb 17                	jmp    2924 <ValidateSDT+0x39>
    290d:	8b 54 24 10          	mov    0x10(%rsp),%edx
    2911:	48 8b 04 24          	mov    (%rsp),%rax
    2915:	48 01 d0             	add    %rdx,%rax
    2918:	0f b6 00             	movzbl (%rax),%eax
    291b:	00 44 24 17          	add    %al,0x17(%rsp)
    291f:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
    2924:	8b 44 24 10          	mov    0x10(%rsp),%eax
    2928:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
    292c:	72 df                	jb     290d <ValidateSDT+0x22>
    292e:	80 7c 24 17 00       	cmpb   $0x0,0x17(%rsp)
    2933:	74 07                	je     293c <ValidateSDT+0x51>
    2935:	b8 00 00 00 00       	mov    $0x0,%eax
    293a:	eb 05                	jmp    2941 <ValidateSDT+0x56>
    293c:	b8 01 00 00 00       	mov    $0x1,%eax
    2941:	48 83 c4 18          	add    $0x18,%rsp
    2945:	c3                   	ret

0000000000002946 <InitACPI>:
    2946:	48 83 ec 48          	sub    $0x48,%rsp
    294a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    294f:	48 89 34 24          	mov    %rsi,(%rsp)
    2953:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2957:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    295c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    2961:	48 8b 04 24          	mov    (%rsp),%rax
    2965:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    296a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    296f:	48 89 c7             	mov    %rax,%rdi
    2972:	e8 14 ff ff ff       	call   288b <ValidateRSDP>
    2977:	48 8b 04 24          	mov    (%rsp),%rax
    297b:	48 8b 40 18          	mov    0x18(%rax),%rax
    297f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2984:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2989:	48 89 c7             	mov    %rax,%rdi
    298c:	e8 5a ff ff ff       	call   28eb <ValidateSDT>
    2991:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2996:	8b 40 04             	mov    0x4(%rax),%eax
    2999:	89 c0                	mov    %eax,%eax
    299b:	48 83 e8 24          	sub    $0x24,%rax
    299f:	48 c1 e8 03          	shr    $0x3,%rax
    29a3:	89 44 24 38          	mov    %eax,0x38(%rsp)
    29a7:	c7 44 24 3c 00 00 00 00 	movl   $0x0,0x3c(%rsp)
    29af:	e9 8c 00 00 00       	jmp    2a40 <InitACPI+0xfa>
    29b4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    29b9:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    29bd:	48 83 c2 04          	add    $0x4,%rdx
    29c1:	48 8b 44 d0 04       	mov    0x4(%rax,%rdx,8),%rax
    29c6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    29cb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    29d0:	ba 04 00 00 00       	mov    $0x4,%edx
    29d5:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 29dc <InitACPI+0x96>	29d8: R_X86_64_PC32	.rodata+0xd
    29dc:	48 89 ce             	mov    %rcx,%rsi
    29df:	48 89 c7             	mov    %rax,%rdi
    29e2:	e8 35 e1 ff ff       	call   b1c <Mem_Cmp>
    29e7:	85 c0                	test   %eax,%eax
    29e9:	75 19                	jne    2a04 <InitACPI+0xbe>
    29eb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    29f0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    29f5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    29fa:	48 89 c7             	mov    %rax,%rdi
    29fd:	e8 e9 fe ff ff       	call   28eb <ValidateSDT>
    2a02:	eb 37                	jmp    2a3b <InitACPI+0xf5>
    2a04:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2a09:	ba 04 00 00 00       	mov    $0x4,%edx
    2a0e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2a15 <InitACPI+0xcf>	2a11: R_X86_64_PC32	.rodata+0x12
    2a15:	48 89 ce             	mov    %rcx,%rsi
    2a18:	48 89 c7             	mov    %rax,%rdi
    2a1b:	e8 fc e0 ff ff       	call   b1c <Mem_Cmp>
    2a20:	85 c0                	test   %eax,%eax
    2a22:	75 17                	jne    2a3b <InitACPI+0xf5>
    2a24:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2a29:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    2a2e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2a33:	48 89 c7             	mov    %rax,%rdi
    2a36:	e8 b0 fe ff ff       	call   28eb <ValidateSDT>
    2a3b:	83 44 24 3c 01       	addl   $0x1,0x3c(%rsp)
    2a40:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    2a44:	3b 44 24 38          	cmp    0x38(%rsp),%eax
    2a48:	0f 82 66 ff ff ff    	jb     29b4 <InitACPI+0x6e>
    2a4e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2a53:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2a58:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2a5d:	48 89 01             	mov    %rax,(%rcx)
    2a60:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    2a64:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    2a69:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    2a6e:	48 89 41 10          	mov    %rax,0x10(%rcx)
    2a72:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    2a76:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2a7b:	48 83 c4 48          	add    $0x48,%rsp
    2a7f:	c3                   	ret

0000000000002a80 <InitAPIC>:
    2a80:	48 83 ec 38          	sub    $0x38,%rsp
    2a84:	be 11 00 00 00       	mov    $0x11,%esi
    2a89:	bf 20 00 00 00       	mov    $0x20,%edi
    2a8e:	e8 00 00 00 00       	call   2a93 <InitAPIC+0x13>	2a8f: R_X86_64_PLT32	PortOut08-0x4
    2a93:	be 11 00 00 00       	mov    $0x11,%esi
    2a98:	bf a0 00 00 00       	mov    $0xa0,%edi
    2a9d:	e8 00 00 00 00       	call   2aa2 <InitAPIC+0x22>	2a9e: R_X86_64_PLT32	PortOut08-0x4
    2aa2:	be e0 00 00 00       	mov    $0xe0,%esi
    2aa7:	bf 21 00 00 00       	mov    $0x21,%edi
    2aac:	e8 00 00 00 00       	call   2ab1 <InitAPIC+0x31>	2aad: R_X86_64_PLT32	PortOut08-0x4
    2ab1:	be e8 00 00 00       	mov    $0xe8,%esi
    2ab6:	bf a1 00 00 00       	mov    $0xa1,%edi
    2abb:	e8 00 00 00 00       	call   2ac0 <InitAPIC+0x40>	2abc: R_X86_64_PLT32	PortOut08-0x4
    2ac0:	be 04 00 00 00       	mov    $0x4,%esi
    2ac5:	bf 21 00 00 00       	mov    $0x21,%edi
    2aca:	e8 00 00 00 00       	call   2acf <InitAPIC+0x4f>	2acb: R_X86_64_PLT32	PortOut08-0x4
    2acf:	be 02 00 00 00       	mov    $0x2,%esi
    2ad4:	bf a1 00 00 00       	mov    $0xa1,%edi
    2ad9:	e8 00 00 00 00       	call   2ade <InitAPIC+0x5e>	2ada: R_X86_64_PLT32	PortOut08-0x4
    2ade:	be 01 00 00 00       	mov    $0x1,%esi
    2ae3:	bf 21 00 00 00       	mov    $0x21,%edi
    2ae8:	e8 00 00 00 00       	call   2aed <InitAPIC+0x6d>	2ae9: R_X86_64_PLT32	PortOut08-0x4
    2aed:	be 01 00 00 00       	mov    $0x1,%esi
    2af2:	bf a1 00 00 00       	mov    $0xa1,%edi
    2af7:	e8 00 00 00 00       	call   2afc <InitAPIC+0x7c>	2af8: R_X86_64_PLT32	PortOut08-0x4
    2afc:	be ff 00 00 00       	mov    $0xff,%esi
    2b01:	bf 21 00 00 00       	mov    $0x21,%edi
    2b06:	e8 00 00 00 00       	call   2b0b <InitAPIC+0x8b>	2b07: R_X86_64_PLT32	PortOut08-0x4
    2b0b:	be ff 00 00 00       	mov    $0xff,%esi
    2b10:	bf a1 00 00 00       	mov    $0xa1,%edi
    2b15:	e8 00 00 00 00       	call   2b1a <InitAPIC+0x9a>	2b16: R_X86_64_PLT32	PortOut08-0x4
    2b1a:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    2b1f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2b24:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b29:	8b 40 24             	mov    0x24(%rax),%eax
    2b2c:	89 c0                	mov    %eax,%eax
    2b2e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2b33:	c7 44 24 24 00 00 00 00 	movl   $0x0,0x24(%rsp)
    2b3b:	eb 44                	jmp    2b81 <InitAPIC+0x101>
    2b3d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b42:	48 8d 50 2c          	lea    0x2c(%rax),%rdx
    2b46:	8b 44 24 24          	mov    0x24(%rsp),%eax
    2b4a:	48 01 d0             	add    %rdx,%rax
    2b4d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2b52:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b57:	0f b6 00             	movzbl (%rax),%eax
    2b5a:	0f b6 c0             	movzbl %al,%eax
    2b5d:	83 f8 05             	cmp    $0x5,%eax
    2b60:	75 0f                	jne    2b71 <InitAPIC+0xf1>
    2b62:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b67:	48 8b 40 04          	mov    0x4(%rax),%rax
    2b6b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2b70:	90                   	nop
    2b71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2b76:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    2b7a:	0f b6 c0             	movzbl %al,%eax
    2b7d:	01 44 24 24          	add    %eax,0x24(%rsp)
    2b81:	8b 54 24 24          	mov    0x24(%rsp),%edx
    2b85:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b8a:	8b 40 04             	mov    0x4(%rax),%eax
    2b8d:	89 c0                	mov    %eax,%eax
    2b8f:	48 83 e8 24          	sub    $0x24,%rax
    2b93:	48 39 c2             	cmp    %rax,%rdx
    2b96:	72 a5                	jb     2b3d <InitAPIC+0xbd>
    2b98:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2b9d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 2ba4 <InitAPIC+0x124>	2ba0: R_X86_64_PC32	APICBase-0x4
    2ba4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2ba9:	48 05 f0 00 00 00    	add    $0xf0,%rax
    2baf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2bb4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bb9:	8b 00                	mov    (%rax),%eax
    2bbb:	80 cc 01             	or     $0x1,%ah
    2bbe:	89 c2                	mov    %eax,%edx
    2bc0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bc5:	89 10                	mov    %edx,(%rax)
    2bc7:	b8 00 00 00 00       	mov    $0x0,%eax
    2bcc:	48 83 c4 38          	add    $0x38,%rsp
    2bd0:	c3                   	ret

0000000000002bd1 <GetPAllocTableMapAddr>:
    2bd1:	48 83 ec 18          	sub    $0x18,%rsp
    2bd5:	48 89 3c 24          	mov    %rdi,(%rsp)
    2bd9:	48 c7 44 24 10 00 00 00 00 	movq   $0x0,0x10(%rsp)
    2be2:	c7 44 24 0c 00 00 00 00 	movl   $0x0,0xc(%rsp)
    2bea:	eb 2d                	jmp    2c19 <GetPAllocTableMapAddr+0x48>
    2bec:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2bf1:	48 8d 0c 85 00 00 00 00 	lea    0x0(,%rax,4),%rcx
    2bf9:	48 8b 04 24          	mov    (%rsp),%rax
    2bfd:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    2c01:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2c05:	48 c1 e8 0a          	shr    $0xa,%rax
    2c09:	83 e0 03             	and    $0x3,%eax
    2c0c:	48 09 c8             	or     %rcx,%rax
    2c0f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2c14:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    2c19:	83 7c 24 0c 1f       	cmpl   $0x1f,0xc(%rsp)
    2c1e:	76 cc                	jbe    2bec <GetPAllocTableMapAddr+0x1b>
    2c20:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2c25:	48 83 c4 18          	add    $0x18,%rsp
    2c29:	c3                   	ret

0000000000002c2a <SetPAllocTableMapAddr>:
    2c2a:	48 83 ec 20          	sub    $0x20,%rsp
    2c2e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2c33:	48 89 34 24          	mov    %rsi,(%rsp)
    2c37:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    2c3f:	eb 52                	jmp    2c93 <SetPAllocTableMapAddr+0x69>
    2c41:	b8 1f 00 00 00       	mov    $0x1f,%eax
    2c46:	2b 44 24 1c          	sub    0x1c(%rsp),%eax
    2c4a:	01 c0                	add    %eax,%eax
    2c4c:	48 8b 14 24          	mov    (%rsp),%rdx
    2c50:	89 c1                	mov    %eax,%ecx
    2c52:	48 d3 ea             	shr    %cl,%rdx
    2c55:	48 89 d0             	mov    %rdx,%rax
    2c58:	83 e0 03             	and    $0x3,%eax
    2c5b:	89 44 24 18          	mov    %eax,0x18(%rsp)
    2c5f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2c64:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    2c68:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2c6c:	80 e4 f3             	and    $0xf3,%ah
    2c6f:	48 89 c2             	mov    %rax,%rdx
    2c72:	8b 44 24 18          	mov    0x18(%rsp),%eax
    2c76:	c1 e0 0a             	shl    $0xa,%eax
    2c79:	89 c0                	mov    %eax,%eax
    2c7b:	48 09 d0             	or     %rdx,%rax
    2c7e:	48 89 c1             	mov    %rax,%rcx
    2c81:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2c86:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    2c8a:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    2c8e:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    2c93:	83 7c 24 1c 1f       	cmpl   $0x1f,0x1c(%rsp)
    2c98:	76 a7                	jbe    2c41 <SetPAllocTableMapAddr+0x17>
    2c9a:	90                   	nop
    2c9b:	90                   	nop
    2c9c:	48 83 c4 20          	add    $0x20,%rsp
    2ca0:	c3                   	ret

0000000000002ca1 <AllocateVirtualPage>:
    2ca1:	b8 00 00 00 00       	mov    $0x0,%eax
    2ca6:	c3                   	ret

0000000000002ca7 <AllocatePhysicalPage>:
    2ca7:	b8 00 00 00 00       	mov    $0x0,%eax
    2cac:	c3                   	ret

0000000000002cad <MapPage>:
    2cad:	48 83 ec 48          	sub    $0x48,%rsp
    2cb1:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2cb6:	48 89 34 24          	mov    %rsi,(%rsp)
    2cba:	48 8b 04 24          	mov    (%rsp),%rax
    2cbe:	25 ff 0f 00 00       	and    $0xfff,%eax
    2cc3:	48 85 c0             	test   %rax,%rax
    2cc6:	75 0d                	jne    2cd5 <MapPage+0x28>
    2cc8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2ccd:	25 ff 0f 00 00       	and    $0xfff,%eax
    2cd2:	48 85 c0             	test   %rax,%rax
    2cd5:	e8 00 00 00 00       	call   2cda <MapPage+0x2d>	2cd6: R_X86_64_PLT32	GetCR4-0x4
    2cda:	25 00 20 00 00       	and    $0x2000,%eax
    2cdf:	48 85 c0             	test   %rax,%rax
    2ce2:	0f 95 c0             	setne  %al
    2ce5:	88 44 24 27          	mov    %al,0x27(%rsp)
    2ce9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2cee:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2cf3:	48 c7 44 24 38 f8 ff ff ff 	movq   $0xfffffffffffffff8,0x38(%rsp)
    2cfc:	0f be 44 24 27       	movsbl 0x27(%rsp),%eax
    2d01:	83 c0 04             	add    $0x4,%eax
    2d04:	89 44 24 34          	mov    %eax,0x34(%rsp)
    2d08:	e9 eb 00 00 00       	jmp    2df8 <MapPage+0x14b>
    2d0d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2d12:	48 c1 e0 09          	shl    $0x9,%rax
    2d16:	48 89 c6             	mov    %rax,%rsi
    2d19:	8b 54 24 34          	mov    0x34(%rsp),%edx
    2d1d:	89 d0                	mov    %edx,%eax
    2d1f:	c1 e0 03             	shl    $0x3,%eax
    2d22:	01 d0                	add    %edx,%eax
    2d24:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2d29:	89 c1                	mov    %eax,%ecx
    2d2b:	48 d3 ea             	shr    %cl,%rdx
    2d2e:	48 89 d0             	mov    %rdx,%rax
    2d31:	25 f8 0f 00 00       	and    $0xff8,%eax
    2d36:	48 09 f0             	or     %rsi,%rax
    2d39:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2d3e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2d43:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2d48:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2d4d:	48 8b 00             	mov    (%rax),%rax
    2d50:	83 e0 01             	and    $0x1,%eax
    2d53:	48 85 c0             	test   %rax,%rax
    2d56:	0f 85 97 00 00 00    	jne    2df3 <MapPage+0x146>
    2d5c:	83 7c 24 34 01       	cmpl   $0x1,0x34(%rsp)
    2d61:	7e 0c                	jle    2d6f <MapPage+0xc2>
    2d63:	e8 3f ff ff ff       	call   2ca7 <AllocatePhysicalPage>
    2d68:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2d6d:	eb 5f                	jmp    2dce <MapPage+0x121>
    2d6f:	48 8b 04 24          	mov    (%rsp),%rax
    2d73:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2d78:	80 7c 24 27 00       	cmpb   $0x0,0x27(%rsp)
    2d7d:	74 25                	je     2da4 <MapPage+0xf7>
    2d7f:	48 b8 00 00 00 00 00 80 00 00 	movabs $0x800000000000,%rax
    2d89:	48 23 44 24 38       	and    0x38(%rsp),%rax
    2d8e:	48 85 c0             	test   %rax,%rax
    2d91:	75 11                	jne    2da4 <MapPage+0xf7>
    2d93:	48 b8 ff ff ff ff ff 7f 00 00 	movabs $0x7fffffffffff,%rax
    2d9d:	48 21 44 24 38       	and    %rax,0x38(%rsp)
    2da2:	eb 2a                	jmp    2dce <MapPage+0x121>
    2da4:	80 7c 24 27 00       	cmpb   $0x0,0x27(%rsp)
    2da9:	75 23                	jne    2dce <MapPage+0x121>
    2dab:	48 b8 00 00 00 00 40 00 00 00 	movabs $0x4000000000,%rax
    2db5:	48 23 44 24 38       	and    0x38(%rsp),%rax
    2dba:	48 85 c0             	test   %rax,%rax
    2dbd:	75 0f                	jne    2dce <MapPage+0x121>
    2dbf:	48 b8 ff ff ff ff 3f 00 00 00 	movabs $0x3fffffffff,%rax
    2dc9:	48 21 44 24 38       	and    %rax,0x38(%rsp)
    2dce:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2dd3:	48 83 c8 01          	or     $0x1,%rax
    2dd7:	48 89 c2             	mov    %rax,%rdx
    2dda:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ddf:	48 89 10             	mov    %rdx,(%rax)
    2de2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2de7:	48 c1 e0 09          	shl    $0x9,%rax
    2deb:	48 89 c7             	mov    %rax,%rdi
    2dee:	e8 00 00 00 00       	call   2df3 <MapPage+0x146>	2def: R_X86_64_PLT32	InvalidateTLBEntry-0x4
    2df3:	83 6c 24 34 01       	subl   $0x1,0x34(%rsp)
    2df8:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
    2dfd:	0f 8f 0a ff ff ff    	jg     2d0d <MapPage+0x60>
    2e03:	90                   	nop
    2e04:	90                   	nop
    2e05:	48 83 c4 48          	add    $0x48,%rsp
    2e09:	c3                   	ret

0000000000002e0a <GetOrCreatePAllocDir>:
    2e0a:	48 83 ec 28          	sub    $0x28,%rsp
    2e0e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2e13:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e1a <GetOrCreatePAllocDir+0x10>	2e16: R_X86_64_PC32	.bss+0x81c
    2e1a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2e1f:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2e23:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2e27:	83 e0 01             	and    $0x1,%eax
    2e2a:	48 85 c0             	test   %rax,%rax
    2e2d:	74 1c                	je     2e4b <GetOrCreatePAllocDir+0x41>
    2e2f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e36 <GetOrCreatePAllocDir+0x2c>	2e32: R_X86_64_PC32	.bss+0x81c
    2e36:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2e3b:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2e3f:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2e43:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2e49:	eb 72                	jmp    2ebd <GetOrCreatePAllocDir+0xb3>
    2e4b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2e50:	48 c1 e0 2c          	shl    $0x2c,%rax
    2e54:	48 05 00 30 00 00    	add    $0x3000,%rax
    2e5a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2e5f:	e8 3d fe ff ff       	call   2ca1 <AllocateVirtualPage>
    2e64:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2e69:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2e6e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e73:	48 89 d6             	mov    %rdx,%rsi
    2e76:	48 89 c7             	mov    %rax,%rdi
    2e79:	e8 2f fe ff ff       	call   2cad <MapPage>
    2e7e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e83:	ba 00 10 00 00       	mov    $0x1000,%edx
    2e88:	be 00 00 00 00       	mov    $0x0,%esi
    2e8d:	48 89 c7             	mov    %rax,%rdi
    2e90:	e8 b1 da ff ff       	call   946 <Mem_Set>
    2e95:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2e9a:	48 83 c8 01          	or     $0x1,%rax
    2e9e:	48 89 c2             	mov    %rax,%rdx
    2ea1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2ea8 <GetOrCreatePAllocDir+0x9e>	2ea4: R_X86_64_PC32	.bss+0x81c
    2ea8:	48 89 d1             	mov    %rdx,%rcx
    2eab:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2eb0:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    2eb4:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    2eb8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ebd:	48 83 c4 28          	add    $0x28,%rsp
    2ec1:	c3                   	ret

0000000000002ec2 <GetOrCreatePAllocTableMap>:
    2ec2:	48 83 ec 48          	sub    $0x48,%rsp
    2ec6:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2ecb:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    2ed0:	89 d0                	mov    %edx,%eax
    2ed2:	88 44 24 0c          	mov    %al,0xc(%rsp)
    2ed6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2edb:	48 89 c7             	mov    %rax,%rdi
    2ede:	e8 ee fc ff ff       	call   2bd1 <GetPAllocTableMapAddr>
    2ee3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2ee8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2eed:	83 e0 01             	and    $0x1,%eax
    2ef0:	48 85 c0             	test   %rax,%rax
    2ef3:	74 10                	je     2f05 <GetOrCreatePAllocTableMap+0x43>
    2ef5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2efa:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2f00:	e9 8b 00 00 00       	jmp    2f90 <GetOrCreatePAllocTableMap+0xce>
    2f05:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2f0a:	48 c1 e0 28          	shl    $0x28,%rax
    2f0e:	48 05 00 20 00 00    	add    $0x2000,%rax
    2f14:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    2f19:	e8 83 fd ff ff       	call   2ca1 <AllocateVirtualPage>
    2f1e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2f23:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    2f28:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f2d:	48 89 d6             	mov    %rdx,%rsi
    2f30:	48 89 c7             	mov    %rax,%rdi
    2f33:	e8 75 fd ff ff       	call   2cad <MapPage>
    2f38:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    2f3d:	74 19                	je     2f58 <GetOrCreatePAllocTableMap+0x96>
    2f3f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f44:	ba 00 10 00 00       	mov    $0x1000,%edx
    2f49:	be 00 00 00 00       	mov    $0x0,%esi
    2f4e:	48 89 c7             	mov    %rax,%rdi
    2f51:	e8 f0 d9 ff ff       	call   946 <Mem_Set>
    2f56:	eb 17                	jmp    2f6f <GetOrCreatePAllocTableMap+0xad>
    2f58:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f5d:	ba 00 10 00 00       	mov    $0x1000,%edx
    2f62:	be ff 00 00 00       	mov    $0xff,%esi
    2f67:	48 89 c7             	mov    %rax,%rdi
    2f6a:	e8 d7 d9 ff ff       	call   946 <Mem_Set>
    2f6f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f74:	48 83 c8 01          	or     $0x1,%rax
    2f78:	48 89 c2             	mov    %rax,%rdx
    2f7b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2f80:	48 89 d6             	mov    %rdx,%rsi
    2f83:	48 89 c7             	mov    %rax,%rdi
    2f86:	e8 9f fc ff ff       	call   2c2a <SetPAllocTableMapAddr>
    2f8b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2f90:	48 83 c4 48          	add    $0x48,%rsp
    2f94:	c3                   	ret

0000000000002f95 <GetOrCreatePAllocTable>:
    2f95:	48 83 ec 38          	sub    $0x38,%rsp
    2f99:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    2f9e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    2fa3:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2fa8:	48 81 7c 24 18 ff 0f 00 00 	cmpq   $0xfff,0x18(%rsp)
    2fb1:	77 06                	ja     2fb9 <GetOrCreatePAllocTable+0x24>
    2fb3:	48 83 7c 24 10 1f    	cmpq   $0x1f,0x10(%rsp)
    2fb9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2fbe:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    2fc3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2fc7:	83 e0 01             	and    $0x1,%eax
    2fca:	48 85 c0             	test   %rax,%rax
    2fcd:	74 16                	je     2fe5 <GetOrCreatePAllocTable+0x50>
    2fcf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2fd4:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    2fd9:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    2fdd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2fe3:	eb 78                	jmp    305d <GetOrCreatePAllocTable+0xc8>
    2fe5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2fea:	48 c1 e0 28          	shl    $0x28,%rax
    2fee:	48 89 c2             	mov    %rax,%rdx
    2ff1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2ff6:	48 c1 e0 23          	shl    $0x23,%rax
    2ffa:	48 09 d0             	or     %rdx,%rax
    2ffd:	48 05 00 10 00 00    	add    $0x1000,%rax
    3003:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3008:	e8 94 fc ff ff       	call   2ca1 <AllocateVirtualPage>
    300d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3012:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    3017:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    301c:	48 89 d6             	mov    %rdx,%rsi
    301f:	48 89 c7             	mov    %rax,%rdi
    3022:	e8 86 fc ff ff       	call   2cad <MapPage>
    3027:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    302c:	ba 00 10 00 00       	mov    $0x1000,%edx
    3031:	be 00 00 00 00       	mov    $0x0,%esi
    3036:	48 89 c7             	mov    %rax,%rdi
    3039:	e8 08 d9 ff ff       	call   946 <Mem_Set>
    303e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3043:	48 83 c8 01          	or     $0x1,%rax
    3047:	48 89 c1             	mov    %rax,%rcx
    304a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    304f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3054:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    3058:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    305d:	48 83 c4 38          	add    $0x38,%rsp
    3061:	c3                   	ret

0000000000003062 <GetOrCreatePAllocPageMap>:
    3062:	48 83 ec 48          	sub    $0x48,%rsp
    3066:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    306b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3070:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3075:	89 c8                	mov    %ecx,%eax
    3077:	88 44 24 04          	mov    %al,0x4(%rsp)
    307b:	48 81 7c 24 18 ff 0f 00 00 	cmpq   $0xfff,0x18(%rsp)
    3084:	77 09                	ja     308f <GetOrCreatePAllocPageMap+0x2d>
    3086:	48 81 7c 24 10 ff 3f 00 00 	cmpq   $0x3fff,0x10(%rsp)
    308f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3094:	25 ff 01 00 00       	and    $0x1ff,%eax
    3099:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    309e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    30a3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    30a8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    30ac:	83 e0 01             	and    $0x1,%eax
    30af:	48 85 c0             	test   %rax,%rax
    30b2:	74 19                	je     30cd <GetOrCreatePAllocPageMap+0x6b>
    30b4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    30b9:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    30be:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    30c2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    30c8:	e9 92 00 00 00       	jmp    315f <GetOrCreatePAllocPageMap+0xfd>
    30cd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    30d2:	48 c1 e0 28          	shl    $0x28,%rax
    30d6:	48 89 c2             	mov    %rax,%rdx
    30d9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    30de:	48 c1 e0 1a          	shl    $0x1a,%rax
    30e2:	48 09 d0             	or     %rdx,%rax
    30e5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    30ea:	e8 b2 fb ff ff       	call   2ca1 <AllocateVirtualPage>
    30ef:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    30f4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    30f9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    30fe:	48 89 d6             	mov    %rdx,%rsi
    3101:	48 89 c7             	mov    %rax,%rdi
    3104:	e8 a4 fb ff ff       	call   2cad <MapPage>
    3109:	80 7c 24 04 00       	cmpb   $0x0,0x4(%rsp)
    310e:	74 19                	je     3129 <GetOrCreatePAllocPageMap+0xc7>
    3110:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3115:	ba 00 10 00 00       	mov    $0x1000,%edx
    311a:	be 00 00 00 00       	mov    $0x0,%esi
    311f:	48 89 c7             	mov    %rax,%rdi
    3122:	e8 1f d8 ff ff       	call   946 <Mem_Set>
    3127:	eb 17                	jmp    3140 <GetOrCreatePAllocPageMap+0xde>
    3129:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    312e:	ba 00 10 00 00       	mov    $0x1000,%edx
    3133:	be ff 00 00 00       	mov    $0xff,%esi
    3138:	48 89 c7             	mov    %rax,%rdi
    313b:	e8 06 d8 ff ff       	call   946 <Mem_Set>
    3140:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3145:	48 83 c8 01          	or     $0x1,%rax
    3149:	48 89 c1             	mov    %rax,%rcx
    314c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3151:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    3156:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    315a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    315f:	48 83 c4 48          	add    $0x48,%rsp
    3163:	c3                   	ret

0000000000003164 <FreePhysicalPage>:
    3164:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    316b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    3170:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3175:	48 c1 e8 2c          	shr    $0x2c,%rax
    3179:	25 ff 00 00 00       	and    $0xff,%eax
    317e:	48 89 84 24 a8 00 00 00 	mov    %rax,0xa8(%rsp)
    3186:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    318b:	48 c1 e8 28          	shr    $0x28,%rax
    318f:	83 e0 0f             	and    $0xf,%eax
    3192:	48 89 84 24 a0 00 00 00 	mov    %rax,0xa0(%rsp)
    319a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    319f:	48 c1 e8 23          	shr    $0x23,%rax
    31a3:	83 e0 1f             	and    $0x1f,%eax
    31a6:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    31ae:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31b3:	48 c1 e8 1a          	shr    $0x1a,%rax
    31b7:	25 ff 01 00 00       	and    $0x1ff,%eax
    31bc:	48 89 84 24 90 00 00 00 	mov    %rax,0x90(%rsp)
    31c4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31c9:	48 c1 e8 0c          	shr    $0xc,%rax
    31cd:	25 ff 3f 00 00       	and    $0x3fff,%eax
    31d2:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    31da:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31df:	48 c1 e8 28          	shr    $0x28,%rax
    31e3:	25 ff 0f 00 00       	and    $0xfff,%eax
    31e8:	48 89 84 24 80 00 00 00 	mov    %rax,0x80(%rsp)
    31f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    31f5:	48 c1 e8 1a          	shr    $0x1a,%rax
    31f9:	25 ff 3f 00 00       	and    $0x3fff,%eax
    31fe:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    3203:	48 8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%rax
    320b:	48 89 c7             	mov    %rax,%rdi
    320e:	e8 f7 fb ff ff       	call   2e0a <GetOrCreatePAllocDir>
    3213:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    3218:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 321f <FreePhysicalPage+0xbb>	321b: R_X86_64_PC32	.bss+0x81c
    321f:	48 8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%rdx
    3227:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
    322b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    322f:	83 e0 01             	and    $0x1,%eax
    3232:	48 85 c0             	test   %rax,%rax
    3235:	75 29                	jne    3260 <FreePhysicalPage+0xfc>
    3237:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 323e <FreePhysicalPage+0xda>	323a: R_X86_64_PC32	.bss+0x81c
    323e:	48 8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%rdx
    3246:	48 c1 ea 03          	shr    $0x3,%rdx
    324a:	0f b6 44 10 20       	movzbl 0x20(%rax,%rdx,1),%eax
    324f:	0f b6 c0             	movzbl %al,%eax
    3252:	48 23 84 24 a8 00 00 00 	and    0xa8(%rsp),%rax
    325a:	83 e0 07             	and    $0x7,%eax
    325d:	48 85 c0             	test   %rax,%rax
    3260:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    3265:	48 8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%rdx
    326d:	48 c1 e2 08          	shl    $0x8,%rdx
    3271:	48 01 d0             	add    %rdx,%rax
    3274:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3279:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    327e:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    3286:	ba 00 00 00 00       	mov    $0x0,%edx
    328b:	48 89 ce             	mov    %rcx,%rsi
    328e:	48 89 c7             	mov    %rax,%rdi
    3291:	e8 2c fc ff ff       	call   2ec2 <GetOrCreatePAllocTableMap>
    3296:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    329b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    32a0:	48 89 c7             	mov    %rax,%rdi
    32a3:	e8 29 f9 ff ff       	call   2bd1 <GetPAllocTableMapAddr>
    32a8:	83 e0 01             	and    $0x1,%eax
    32ab:	48 85 c0             	test   %rax,%rax
    32ae:	75 2c                	jne    32dc <FreePhysicalPage+0x178>
    32b0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 32b7 <FreePhysicalPage+0x153>	32b3: R_X86_64_PC32	.bss+0x81c
    32b7:	48 8b 94 24 80 00 00 00 	mov    0x80(%rsp),%rdx
    32bf:	48 c1 ea 03          	shr    $0x3,%rdx
    32c3:	0f b6 84 10 00 02 00 00 	movzbl 0x200(%rax,%rdx,1),%eax
    32cb:	0f b6 c0             	movzbl %al,%eax
    32ce:	48 23 84 24 80 00 00 00 	and    0x80(%rsp),%rax
    32d6:	83 e0 07             	and    $0x7,%eax
    32d9:	48 85 c0             	test   %rax,%rax
    32dc:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    32e1:	48 8b 8c 24 98 00 00 00 	mov    0x98(%rsp),%rcx
    32e9:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    32f1:	48 89 ce             	mov    %rcx,%rsi
    32f4:	48 89 c7             	mov    %rax,%rdi
    32f7:	e8 99 fc ff ff       	call   2f95 <GetOrCreatePAllocTable>
    32fc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3301:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3306:	48 8b 94 24 98 00 00 00 	mov    0x98(%rsp),%rdx
    330e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    3312:	83 e0 01             	and    $0x1,%eax
    3315:	48 85 c0             	test   %rax,%rax
    3318:	75 2a                	jne    3344 <FreePhysicalPage+0x1e0>
    331a:	48 8b 84 24 98 00 00 00 	mov    0x98(%rsp),%rax
    3322:	48 c1 e8 03          	shr    $0x3,%rax
    3326:	48 89 c2             	mov    %rax,%rdx
    3329:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    332e:	0f b6 44 10 04       	movzbl 0x4(%rax,%rdx,1),%eax
    3333:	0f b6 c0             	movzbl %al,%eax
    3336:	48 23 84 24 98 00 00 00 	and    0x98(%rsp),%rax
    333e:	83 e0 07             	and    $0x7,%eax
    3341:	48 85 c0             	test   %rax,%rax
    3344:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3349:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    334e:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    3356:	b9 00 00 00 00       	mov    $0x0,%ecx
    335b:	48 89 c7             	mov    %rax,%rdi
    335e:	e8 ff fc ff ff       	call   3062 <GetOrCreatePAllocPageMap>
    3363:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    3368:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    336d:	48 8b 94 24 90 00 00 00 	mov    0x90(%rsp),%rdx
    3375:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    3379:	83 e0 01             	and    $0x1,%eax
    337c:	48 85 c0             	test   %rax,%rax
    337f:	75 24                	jne    33a5 <FreePhysicalPage+0x241>
    3381:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3386:	48 c1 e8 03          	shr    $0x3,%rax
    338a:	48 89 c2             	mov    %rax,%rdx
    338d:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3392:	0f b6 44 10 04       	movzbl 0x4(%rax,%rdx,1),%eax
    3397:	0f b6 c0             	movzbl %al,%eax
    339a:	48 23 44 24 78       	and    0x78(%rsp),%rax
    339f:	83 e0 07             	and    $0x7,%eax
    33a2:	48 85 c0             	test   %rax,%rax
    33a5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    33aa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    33af:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    33b7:	80 cc 40             	or     $0x40,%ah
    33ba:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    33c1:	c7 84 24 b8 00 00 00 00 00 00 00 	movl   $0x0,0xb8(%rsp)
    33cc:	e9 86 00 00 00       	jmp    3457 <FreePhysicalPage+0x2f3>
    33d1:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    33d8:	c1 e8 03             	shr    $0x3,%eax
    33db:	89 c2                	mov    %eax,%edx
    33dd:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    33e2:	48 01 d0             	add    %rdx,%rax
    33e5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    33ea:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    33f1:	83 e0 07             	and    $0x7,%eax
    33f4:	ba 01 00 00 00       	mov    $0x1,%edx
    33f9:	89 c1                	mov    %eax,%ecx
    33fb:	d3 e2                	shl    %cl,%edx
    33fd:	89 d0                	mov    %edx,%eax
    33ff:	88 44 24 3f          	mov    %al,0x3f(%rsp)
    3403:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    340a:	83 e0 06             	and    $0x6,%eax
    340d:	ba 03 00 00 00       	mov    $0x3,%edx
    3412:	89 c1                	mov    %eax,%ecx
    3414:	d3 e2                	shl    %cl,%edx
    3416:	89 d0                	mov    %edx,%eax
    3418:	88 44 24 3e          	mov    %al,0x3e(%rsp)
    341c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3421:	0f b6 00             	movzbl (%rax),%eax
    3424:	89 c2                	mov    %eax,%edx
    3426:	0f b6 44 24 3f       	movzbl 0x3f(%rsp),%eax
    342b:	f7 d0                	not    %eax
    342d:	21 d0                	and    %edx,%eax
    342f:	89 c2                	mov    %eax,%edx
    3431:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3436:	88 10                	mov    %dl,(%rax)
    3438:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    343d:	0f b6 00             	movzbl (%rax),%eax
    3440:	22 44 24 3e          	and    0x3e(%rsp),%al
    3444:	84 c0                	test   %al,%al
    3446:	74 1f                	je     3467 <FreePhysicalPage+0x303>
    3448:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    344f:	83 84 24 b8 00 00 00 01 	addl   $0x1,0xb8(%rsp)
    3457:	83 bc 24 b8 00 00 00 0e 	cmpl   $0xe,0xb8(%rsp)
    345f:	0f 86 6c ff ff ff    	jbe    33d1 <FreePhysicalPage+0x26d>
    3465:	eb 01                	jmp    3468 <FreePhysicalPage+0x304>
    3467:	90                   	nop
    3468:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    346d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3472:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3477:	80 cc 40             	or     $0x40,%ah
    347a:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    3481:	c7 84 24 b4 00 00 00 00 00 00 00 	movl   $0x0,0xb4(%rsp)
    348c:	e9 86 00 00 00       	jmp    3517 <FreePhysicalPage+0x3b3>
    3491:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    3498:	c1 e8 03             	shr    $0x3,%eax
    349b:	89 c2                	mov    %eax,%edx
    349d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    34a2:	48 01 d0             	add    %rdx,%rax
    34a5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34aa:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    34b1:	83 e0 07             	and    $0x7,%eax
    34b4:	ba 01 00 00 00       	mov    $0x1,%edx
    34b9:	89 c1                	mov    %eax,%ecx
    34bb:	d3 e2                	shl    %cl,%edx
    34bd:	89 d0                	mov    %edx,%eax
    34bf:	88 44 24 2f          	mov    %al,0x2f(%rsp)
    34c3:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    34ca:	83 e0 06             	and    $0x6,%eax
    34cd:	ba 03 00 00 00       	mov    $0x3,%edx
    34d2:	89 c1                	mov    %eax,%ecx
    34d4:	d3 e2                	shl    %cl,%edx
    34d6:	89 d0                	mov    %edx,%eax
    34d8:	88 44 24 2e          	mov    %al,0x2e(%rsp)
    34dc:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34e1:	0f b6 00             	movzbl (%rax),%eax
    34e4:	89 c2                	mov    %eax,%edx
    34e6:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
    34eb:	f7 d0                	not    %eax
    34ed:	21 d0                	and    %edx,%eax
    34ef:	89 c2                	mov    %eax,%edx
    34f1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34f6:	88 10                	mov    %dl,(%rax)
    34f8:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34fd:	0f b6 00             	movzbl (%rax),%eax
    3500:	22 44 24 2e          	and    0x2e(%rsp),%al
    3504:	84 c0                	test   %al,%al
    3506:	74 1f                	je     3527 <FreePhysicalPage+0x3c3>
    3508:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    350f:	83 84 24 b4 00 00 00 01 	addl   $0x1,0xb4(%rsp)
    3517:	83 bc 24 b4 00 00 00 0e 	cmpl   $0xe,0xb4(%rsp)
    351f:	0f 86 6c ff ff ff    	jbe    3491 <FreePhysicalPage+0x32d>
    3525:	eb 01                	jmp    3528 <FreePhysicalPage+0x3c4>
    3527:	90                   	nop
    3528:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 352f <FreePhysicalPage+0x3cb>	352b: R_X86_64_PC32	.bss+0x81c
    352f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3534:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    353c:	80 cc 10             	or     $0x10,%ah
    353f:	89 84 24 bc 00 00 00 	mov    %eax,0xbc(%rsp)
    3546:	c7 84 24 b0 00 00 00 00 00 00 00 	movl   $0x0,0xb0(%rsp)
    3551:	e9 86 00 00 00       	jmp    35dc <FreePhysicalPage+0x478>
    3556:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    355d:	c1 e8 03             	shr    $0x3,%eax
    3560:	89 c2                	mov    %eax,%edx
    3562:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    3567:	48 01 d0             	add    %rdx,%rax
    356a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    356f:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    3576:	83 e0 07             	and    $0x7,%eax
    3579:	ba 01 00 00 00       	mov    $0x1,%edx
    357e:	89 c1                	mov    %eax,%ecx
    3580:	d3 e2                	shl    %cl,%edx
    3582:	89 d0                	mov    %edx,%eax
    3584:	88 44 24 1f          	mov    %al,0x1f(%rsp)
    3588:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
    358f:	83 e0 06             	and    $0x6,%eax
    3592:	ba 03 00 00 00       	mov    $0x3,%edx
    3597:	89 c1                	mov    %eax,%ecx
    3599:	d3 e2                	shl    %cl,%edx
    359b:	89 d0                	mov    %edx,%eax
    359d:	88 44 24 1e          	mov    %al,0x1e(%rsp)
    35a1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35a6:	0f b6 00             	movzbl (%rax),%eax
    35a9:	89 c2                	mov    %eax,%edx
    35ab:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
    35b0:	f7 d0                	not    %eax
    35b2:	21 d0                	and    %edx,%eax
    35b4:	89 c2                	mov    %eax,%edx
    35b6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35bb:	88 10                	mov    %dl,(%rax)
    35bd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    35c2:	0f b6 00             	movzbl (%rax),%eax
    35c5:	22 44 24 1e          	and    0x1e(%rsp),%al
    35c9:	84 c0                	test   %al,%al
    35cb:	74 1f                	je     35ec <FreePhysicalPage+0x488>
    35cd:	d1 ac 24 bc 00 00 00 	shrl   0xbc(%rsp)
    35d4:	83 84 24 b0 00 00 00 01 	addl   $0x1,0xb0(%rsp)
    35dc:	83 bc 24 b0 00 00 00 0c 	cmpl   $0xc,0xb0(%rsp)
    35e4:	0f 86 6c ff ff ff    	jbe    3556 <FreePhysicalPage+0x3f2>
    35ea:	eb 01                	jmp    35ed <FreePhysicalPage+0x489>
    35ec:	90                   	nop
    35ed:	90                   	nop
    35ee:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    35f5:	c3                   	ret

00000000000035f6 <FreeMapPages>:
    35f6:	48 83 ec 48          	sub    $0x48,%rsp
    35fa:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    35fe:	48 89 34 24          	mov    %rsi,(%rsp)
    3602:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    3607:	0f 84 e5 00 00 00    	je     36f2 <FreeMapPages+0xfc>
    360d:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    3611:	89 d0                	mov    %edx,%eax
    3613:	c1 e0 03             	shl    $0x3,%eax
    3616:	01 d0                	add    %edx,%eax
    3618:	83 c0 0c             	add    $0xc,%eax
    361b:	89 c0                	mov    %eax,%eax
    361d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3622:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3627:	ba 01 00 00 00       	mov    $0x1,%edx
    362c:	89 c1                	mov    %eax,%ecx
    362e:	d3 e2                	shl    %cl,%edx
    3630:	89 d0                	mov    %edx,%eax
    3632:	48 98                	cltq
    3634:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3639:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    363e:	48 f7 d8             	neg    %rax
    3641:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3646:	c7 44 24 3c 00 00 00 00 	movl   $0x0,0x3c(%rsp)
    364e:	e9 8f 00 00 00       	jmp    36e2 <FreeMapPages+0xec>
    3653:	48 b8 00 00 00 00 00 00 00 fe 	movabs $0xfe00000000000000,%rax
    365d:	48 0b 04 24          	or     (%rsp),%rax
    3661:	48 89 c2             	mov    %rax,%rdx
    3664:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3669:	83 e8 03             	sub    $0x3,%eax
    366c:	89 c1                	mov    %eax,%ecx
    366e:	48 d3 fa             	sar    %cl,%rdx
    3671:	48 89 d0             	mov    %rdx,%rax
    3674:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    3678:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    367d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3682:	48 8b 00             	mov    (%rax),%rax
    3685:	83 e0 01             	and    $0x1,%eax
    3688:	48 85 c0             	test   %rax,%rax
    368b:	74 50                	je     36dd <FreeMapPages+0xe7>
    368d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    3692:	83 e8 09             	sub    $0x9,%eax
    3695:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    3699:	89 c1                	mov    %eax,%ecx
    369b:	d3 e2                	shl    %cl,%edx
    369d:	89 d0                	mov    %edx,%eax
    369f:	89 c0                	mov    %eax,%eax
    36a1:	48 0b 04 24          	or     (%rsp),%rax
    36a5:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    36a9:	83 ea 01             	sub    $0x1,%edx
    36ac:	48 89 c6             	mov    %rax,%rsi
    36af:	89 d7                	mov    %edx,%edi
    36b1:	e8 40 ff ff ff       	call   35f6 <FreeMapPages>
    36b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    36bb:	48 8b 00             	mov    (%rax),%rax
    36be:	48 ba 00 f0 ff ff ff ff 0f 00 	movabs $0xffffffffff000,%rdx
    36c8:	48 21 d0             	and    %rdx,%rax
    36cb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    36d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    36d5:	48 89 c7             	mov    %rax,%rdi
    36d8:	e8 87 fa ff ff       	call   3164 <FreePhysicalPage>
    36dd:	83 44 24 3c 01       	addl   $0x1,0x3c(%rsp)
    36e2:	81 7c 24 3c ff 01 00 00 	cmpl   $0x1ff,0x3c(%rsp)
    36ea:	0f 86 63 ff ff ff    	jbe    3653 <FreeMapPages+0x5d>
    36f0:	eb 01                	jmp    36f3 <FreeMapPages+0xfd>
    36f2:	90                   	nop
    36f3:	48 83 c4 48          	add    $0x48,%rsp
    36f7:	c3                   	ret

00000000000036f8 <FreeMapLvl>:
    36f8:	48 83 ec 78          	sub    $0x78,%rsp
    36fc:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    3700:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3705:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    370a:	83 7c 24 1c 04       	cmpl   $0x4,0x1c(%rsp)
    370f:	77 28                	ja     3739 <FreeMapLvl+0x41>
    3711:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3716:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    371b:	72 1c                	jb     3739 <FreeMapLvl+0x41>
    371d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3722:	25 ff 0f 00 00       	and    $0xfff,%eax
    3727:	48 85 c0             	test   %rax,%rax
    372a:	75 0d                	jne    3739 <FreeMapLvl+0x41>
    372c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3731:	25 ff 0f 00 00       	and    $0xfff,%eax
    3736:	48 85 c0             	test   %rax,%rax
    3739:	83 7c 24 1c 00       	cmpl   $0x0,0x1c(%rsp)
    373e:	75 50                	jne    3790 <FreeMapLvl+0x98>
    3740:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3745:	48 c1 f8 09          	sar    $0x9,%rax
    3749:	48 89 c2             	mov    %rax,%rdx
    374c:	48 b8 f8 ff ff ff ff ff 00 00 	movabs $0xfffffffffff8,%rax
    3756:	48 21 c2             	and    %rax,%rdx
    3759:	48 b8 00 00 00 00 00 00 ff ff 	movabs $0xffff000000000000,%rax
    3763:	48 09 d0             	or     %rdx,%rax
    3766:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    376b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3770:	48 2b 44 24 10       	sub    0x10(%rsp),%rax
    3775:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3779:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    377e:	be 00 00 00 00       	mov    $0x0,%esi
    3783:	48 89 c7             	mov    %rax,%rdi
    3786:	e8 bb d1 ff ff       	call   946 <Mem_Set>
    378b:	e9 61 01 00 00       	jmp    38f1 <FreeMapLvl+0x1f9>
    3790:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3794:	89 d0                	mov    %edx,%eax
    3796:	c1 e0 03             	shl    $0x3,%eax
    3799:	01 d0                	add    %edx,%eax
    379b:	83 c0 0c             	add    $0xc,%eax
    379e:	89 c0                	mov    %eax,%eax
    37a0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    37a5:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37aa:	ba 01 00 00 00       	mov    $0x1,%edx
    37af:	89 c1                	mov    %eax,%ecx
    37b1:	d3 e2                	shl    %cl,%edx
    37b3:	89 d0                	mov    %edx,%eax
    37b5:	48 98                	cltq
    37b7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    37bc:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    37c1:	48 f7 d8             	neg    %rax
    37c4:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    37c9:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37ce:	89 c2                	mov    %eax,%edx
    37d0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    37d5:	89 d1                	mov    %edx,%ecx
    37d7:	48 d3 e8             	shr    %cl,%rax
    37da:	25 ff 01 00 00       	and    $0x1ff,%eax
    37df:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    37e4:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    37e9:	89 c2                	mov    %eax,%edx
    37eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    37f0:	89 d1                	mov    %edx,%ecx
    37f2:	48 d3 e8             	shr    %cl,%rax
    37f5:	25 ff 01 00 00       	and    $0x1ff,%eax
    37fa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    37ff:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    3804:	48 3b 44 24 48       	cmp    0x48(%rsp),%rax
    3809:	75 20                	jne    382b <FreeMapLvl+0x133>
    380b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    380f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    3812:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3817:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    381c:	48 89 c6             	mov    %rax,%rsi
    381f:	89 cf                	mov    %ecx,%edi
    3821:	e8 d2 fe ff ff       	call   36f8 <FreeMapLvl>
    3826:	e9 c6 00 00 00       	jmp    38f1 <FreeMapLvl+0x1f9>
    382b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3830:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3835:	48 01 d0             	add    %rdx,%rax
    3838:	48 23 44 24 58       	and    0x58(%rsp),%rax
    383d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3842:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3847:	48 23 44 24 58       	and    0x58(%rsp),%rax
    384c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3851:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3855:	8d 48 ff             	lea    -0x1(%rax),%ecx
    3858:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    385d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3862:	48 89 c6             	mov    %rax,%rsi
    3865:	89 cf                	mov    %ecx,%edi
    3867:	e8 8c fe ff ff       	call   36f8 <FreeMapLvl>
    386c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3871:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3875:	48 89 d6             	mov    %rdx,%rsi
    3878:	89 c7                	mov    %eax,%edi
    387a:	e8 77 fd ff ff       	call   35f6 <FreeMapPages>
    387f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3884:	48 c1 f8 09          	sar    $0x9,%rax
    3888:	48 89 c2             	mov    %rax,%rdx
    388b:	48 b8 f8 ff ff ff ff ff 00 00 	movabs $0xfffffffffff8,%rax
    3895:	48 21 c2             	and    %rax,%rdx
    3898:	48 b8 00 00 00 00 00 00 ff ff 	movabs $0xffff000000000000,%rax
    38a2:	48 09 d0             	or     %rdx,%rax
    38a5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    38aa:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    38af:	48 2b 44 24 40       	sub    0x40(%rsp),%rax
    38b4:	48 89 c2             	mov    %rax,%rdx
    38b7:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    38bc:	83 e8 03             	sub    $0x3,%eax
    38bf:	89 c1                	mov    %eax,%ecx
    38c1:	48 d3 ea             	shr    %cl,%rdx
    38c4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    38c9:	be 00 00 00 00       	mov    $0x0,%esi
    38ce:	48 89 c7             	mov    %rax,%rdi
    38d1:	e8 70 d0 ff ff       	call   946 <Mem_Set>
    38d6:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    38da:	8d 48 ff             	lea    -0x1(%rax),%ecx
    38dd:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    38e2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    38e7:	48 89 c6             	mov    %rax,%rsi
    38ea:	89 cf                	mov    %ecx,%edi
    38ec:	e8 07 fe ff ff       	call   36f8 <FreeMapLvl>
    38f1:	48 83 c4 78          	add    $0x78,%rsp
    38f5:	c3                   	ret

00000000000038f6 <FreeVirtualPageRange>:
    38f6:	48 83 ec 48          	sub    $0x48,%rsp
    38fa:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    38ff:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3904:	89 d0                	mov    %edx,%eax
    3906:	88 44 24 0c          	mov    %al,0xc(%rsp)
    390a:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    3910:	0f 84 9e 00 00 00    	je     39b4 <FreeVirtualPageRange+0xbe>
    3916:	e8 00 00 00 00       	call   391b <FreeVirtualPageRange+0x25>	3917: R_X86_64_PLT32	GetCR4-0x4
    391b:	25 00 20 00 00       	and    $0x2000,%eax
    3920:	48 85 c0             	test   %rax,%rax
    3923:	0f 95 c0             	setne  %al
    3926:	88 44 24 37          	mov    %al,0x37(%rsp)
    392a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    392f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3934:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3939:	48 83 e8 01          	sub    $0x1,%rax
    393d:	48 c1 e0 0c          	shl    $0xc,%rax
    3941:	48 89 c2             	mov    %rax,%rdx
    3944:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3949:	48 01 d0             	add    %rdx,%rax
    394c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3951:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3956:	25 ff 0f 00 00       	and    $0xfff,%eax
    395b:	48 85 c0             	test   %rax,%rax
    395e:	75 0a                	jne    396a <FreeVirtualPageRange+0x74>
    3960:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3965:	48 39 44 24 28       	cmp    %rax,0x28(%rsp)
    396a:	80 7c 24 37 00       	cmpb   $0x0,0x37(%rsp)
    396f:	75 0f                	jne    3980 <FreeVirtualPageRange+0x8a>
    3971:	48 b8 00 00 00 00 00 00 ff 01 	movabs $0x1ff000000000000,%rax
    397b:	48 09 44 24 38       	or     %rax,0x38(%rsp)
    3980:	0f be 44 24 37       	movsbl 0x37(%rsp),%eax
    3985:	83 c0 04             	add    $0x4,%eax
    3988:	89 c1                	mov    %eax,%ecx
    398a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    398f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3994:	48 89 c6             	mov    %rax,%rsi
    3997:	89 cf                	mov    %ecx,%edi
    3999:	e8 5a fd ff ff       	call   36f8 <FreeMapLvl>
    399e:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    39a3:	74 10                	je     39b5 <FreeVirtualPageRange+0xbf>
    39a5:	e8 00 00 00 00       	call   39aa <FreeVirtualPageRange+0xb4>	39a6: R_X86_64_PLT32	GetCR3-0x4
    39aa:	48 89 c7             	mov    %rax,%rdi
    39ad:	e8 00 00 00 00       	call   39b2 <FreeVirtualPageRange+0xbc>	39ae: R_X86_64_PLT32	SetCR3-0x4
    39b2:	eb 01                	jmp    39b5 <FreeVirtualPageRange+0xbf>
    39b4:	90                   	nop
    39b5:	48 83 c4 48          	add    $0x48,%rsp
    39b9:	c3                   	ret

00000000000039ba <FreePhysicalPageRange>:
    39ba:	48 83 ec 10          	sub    $0x10,%rsp
    39be:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    39c3:	48 89 34 24          	mov    %rsi,(%rsp)
    39c7:	90                   	nop
    39c8:	48 83 c4 10          	add    $0x10,%rsp
    39cc:	c3                   	ret

00000000000039cd <PCI_Read32>:
    39cd:	48 83 ec 28          	sub    $0x28,%rsp
    39d1:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    39d5:	89 74 24 08          	mov    %esi,0x8(%rsp)
    39d9:	89 54 24 04          	mov    %edx,0x4(%rsp)
    39dd:	89 0c 24             	mov    %ecx,(%rsp)
    39e0:	81 7c 24 0c ff 00 00 00 	cmpl   $0xff,0xc(%rsp)
    39e8:	77 15                	ja     39ff <PCI_Read32+0x32>
    39ea:	83 7c 24 08 1f       	cmpl   $0x1f,0x8(%rsp)
    39ef:	77 0e                	ja     39ff <PCI_Read32+0x32>
    39f1:	83 7c 24 04 07       	cmpl   $0x7,0x4(%rsp)
    39f6:	77 07                	ja     39ff <PCI_Read32+0x32>
    39f8:	81 3c 24 ff 00 00 00 	cmpl   $0xff,(%rsp)
    39ff:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a03:	c1 e0 10             	shl    $0x10,%eax
    3a06:	89 c2                	mov    %eax,%edx
    3a08:	8b 44 24 08          	mov    0x8(%rsp),%eax
    3a0c:	c1 e0 0b             	shl    $0xb,%eax
    3a0f:	09 c2                	or     %eax,%edx
    3a11:	8b 44 24 04          	mov    0x4(%rsp),%eax
    3a15:	c1 e0 08             	shl    $0x8,%eax
    3a18:	09 c2                	or     %eax,%edx
    3a1a:	8b 04 24             	mov    (%rsp),%eax
    3a1d:	25 fc 00 00 00       	and    $0xfc,%eax
    3a22:	09 d0                	or     %edx,%eax
    3a24:	0d 00 00 00 80       	or     $0x80000000,%eax
    3a29:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3a2d:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3a31:	89 c6                	mov    %eax,%esi
    3a33:	bf f8 0c 00 00       	mov    $0xcf8,%edi
    3a38:	e8 00 00 00 00       	call   3a3d <PCI_Read32+0x70>	3a39: R_X86_64_PLT32	PortOut32-0x4
    3a3d:	bf fc 0c 00 00       	mov    $0xcfc,%edi
    3a42:	e8 00 00 00 00       	call   3a47 <PCI_Read32+0x7a>	3a43: R_X86_64_PLT32	PortIn32-0x4
    3a47:	89 44 24 18          	mov    %eax,0x18(%rsp)
    3a4b:	8b 44 24 18          	mov    0x18(%rsp),%eax
    3a4f:	48 83 c4 28          	add    $0x28,%rsp
    3a53:	c3                   	ret

0000000000003a54 <PCI_Read16>:
    3a54:	48 83 ec 28          	sub    $0x28,%rsp
    3a58:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    3a5c:	89 74 24 08          	mov    %esi,0x8(%rsp)
    3a60:	89 54 24 04          	mov    %edx,0x4(%rsp)
    3a64:	89 0c 24             	mov    %ecx,(%rsp)
    3a67:	8b 0c 24             	mov    (%rsp),%ecx
    3a6a:	8b 54 24 04          	mov    0x4(%rsp),%edx
    3a6e:	8b 74 24 08          	mov    0x8(%rsp),%esi
    3a72:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a76:	89 c7                	mov    %eax,%edi
    3a78:	e8 50 ff ff ff       	call   39cd <PCI_Read32>
    3a7d:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3a81:	8b 04 24             	mov    (%rsp),%eax
    3a84:	83 e0 02             	and    $0x2,%eax
    3a87:	c1 e0 03             	shl    $0x3,%eax
    3a8a:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3a8e:	89 c1                	mov    %eax,%ecx
    3a90:	d3 ea                	shr    %cl,%edx
    3a92:	89 d0                	mov    %edx,%eax
    3a94:	48 83 c4 28          	add    $0x28,%rsp
    3a98:	c3                   	ret

0000000000003a99 <PCI_Read08>:
    3a99:	48 83 ec 28          	sub    $0x28,%rsp
    3a9d:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    3aa1:	89 74 24 08          	mov    %esi,0x8(%rsp)
    3aa5:	89 54 24 04          	mov    %edx,0x4(%rsp)
    3aa9:	89 0c 24             	mov    %ecx,(%rsp)
    3aac:	8b 0c 24             	mov    (%rsp),%ecx
    3aaf:	8b 54 24 04          	mov    0x4(%rsp),%edx
    3ab3:	8b 74 24 08          	mov    0x8(%rsp),%esi
    3ab7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3abb:	89 c7                	mov    %eax,%edi
    3abd:	e8 0b ff ff ff       	call   39cd <PCI_Read32>
    3ac2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3ac6:	8b 04 24             	mov    (%rsp),%eax
    3ac9:	83 e0 03             	and    $0x3,%eax
    3acc:	c1 e0 03             	shl    $0x3,%eax
    3acf:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3ad3:	89 c1                	mov    %eax,%ecx
    3ad5:	d3 ea                	shr    %cl,%edx
    3ad7:	89 d0                	mov    %edx,%eax
    3ad9:	48 83 c4 28          	add    $0x28,%rsp
    3add:	c3                   	ret

0000000000003ade <PCI_Init>:
    3ade:	48 83 ec 28          	sub    $0x28,%rsp
    3ae2:	c7 44 24 04 00 00 00 00 	movl   $0x0,0x4(%rsp)
    3aea:	c7 44 24 1c 00 00 00 00 	movl   $0x0,0x1c(%rsp)
    3af2:	e9 0b 01 00 00       	jmp    3c02 <PCI_Init+0x124>
    3af7:	c7 44 24 18 00 00 00 00 	movl   $0x0,0x18(%rsp)
    3aff:	e9 ee 00 00 00       	jmp    3bf2 <PCI_Init+0x114>
    3b04:	c7 44 24 14 00 00 00 00 	movl   $0x0,0x14(%rsp)
    3b0c:	e9 ce 00 00 00       	jmp    3bdf <PCI_Init+0x101>
    3b11:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b15:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b19:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b1d:	b9 00 00 00 00       	mov    $0x0,%ecx
    3b22:	89 c7                	mov    %eax,%edi
    3b24:	e8 2b ff ff ff       	call   3a54 <PCI_Read16>
    3b29:	66 89 44 24 12       	mov    %ax,0x12(%rsp)
    3b2e:	66 83 7c 24 12 ff    	cmpw   $0xffff,0x12(%rsp)
    3b34:	0f 84 9f 00 00 00    	je     3bd9 <PCI_Init+0xfb>
    3b3a:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b3e:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b42:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b46:	b9 0d 00 00 00       	mov    $0xd,%ecx
    3b4b:	89 c7                	mov    %eax,%edi
    3b4d:	e8 47 ff ff ff       	call   3a99 <PCI_Read08>
    3b52:	88 44 24 11          	mov    %al,0x11(%rsp)
    3b56:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3b5a:	8b 74 24 18          	mov    0x18(%rsp),%esi
    3b5e:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3b62:	b9 08 00 00 00       	mov    $0x8,%ecx
    3b67:	89 c7                	mov    %eax,%edi
    3b69:	e8 5f fe ff ff       	call   39cd <PCI_Read32>
    3b6e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3b72:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b76:	c1 e8 18             	shr    $0x18,%eax
    3b79:	88 44 24 0b          	mov    %al,0xb(%rsp)
    3b7d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b81:	c1 e8 10             	shr    $0x10,%eax
    3b84:	88 44 24 0a          	mov    %al,0xa(%rsp)
    3b88:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3b8c:	c1 e8 08             	shr    $0x8,%eax
    3b8f:	88 44 24 09          	mov    %al,0x9(%rsp)
    3b93:	80 7c 24 0b 0c       	cmpb   $0xc,0xb(%rsp)
    3b98:	75 2d                	jne    3bc7 <PCI_Init+0xe9>
    3b9a:	80 7c 24 0a 03       	cmpb   $0x3,0xa(%rsp)
    3b9f:	75 26                	jne    3bc7 <PCI_Init+0xe9>
    3ba1:	80 7c 24 09 30       	cmpb   $0x30,0x9(%rsp)
    3ba6:	75 1f                	jne    3bc7 <PCI_Init+0xe9>
    3ba8:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3bac:	c1 e0 10             	shl    $0x10,%eax
    3baf:	89 c2                	mov    %eax,%edx
    3bb1:	8b 44 24 18          	mov    0x18(%rsp),%eax
    3bb5:	c1 e0 08             	shl    $0x8,%eax
    3bb8:	09 d0                	or     %edx,%eax
    3bba:	0b 44 24 14          	or     0x14(%rsp),%eax
    3bbe:	0d 00 00 00 80       	or     $0x80000000,%eax
    3bc3:	89 44 24 04          	mov    %eax,0x4(%rsp)
    3bc7:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
    3bcc:	75 0c                	jne    3bda <PCI_Init+0xfc>
    3bce:	0f b6 44 24 11       	movzbl 0x11(%rsp),%eax
    3bd3:	84 c0                	test   %al,%al
    3bd5:	79 15                	jns    3bec <PCI_Init+0x10e>
    3bd7:	eb 01                	jmp    3bda <PCI_Init+0xfc>
    3bd9:	90                   	nop
    3bda:	83 44 24 14 01       	addl   $0x1,0x14(%rsp)
    3bdf:	83 7c 24 14 07       	cmpl   $0x7,0x14(%rsp)
    3be4:	0f 86 27 ff ff ff    	jbe    3b11 <PCI_Init+0x33>
    3bea:	eb 01                	jmp    3bed <PCI_Init+0x10f>
    3bec:	90                   	nop
    3bed:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    3bf2:	83 7c 24 18 1f       	cmpl   $0x1f,0x18(%rsp)
    3bf7:	0f 86 07 ff ff ff    	jbe    3b04 <PCI_Init+0x26>
    3bfd:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    3c02:	81 7c 24 1c ff 00 00 00 	cmpl   $0xff,0x1c(%rsp)
    3c0a:	0f 86 e7 fe ff ff    	jbe    3af7 <PCI_Init+0x19>
    3c10:	8b 44 24 04          	mov    0x4(%rsp),%eax
    3c14:	48 83 c4 28          	add    $0x28,%rsp
    3c18:	c3                   	ret

0000000000003c19 <PCI_EnableMSI>:
    3c19:	48 83 ec 38          	sub    $0x38,%rsp
    3c1d:	89 f1                	mov    %esi,%ecx
    3c1f:	89 d0                	mov    %edx,%eax
    3c21:	89 fa                	mov    %edi,%edx
    3c23:	88 54 24 0c          	mov    %dl,0xc(%rsp)
    3c27:	89 ca                	mov    %ecx,%edx
    3c29:	88 54 24 08          	mov    %dl,0x8(%rsp)
    3c2d:	88 44 24 04          	mov    %al,0x4(%rsp)
    3c31:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3c36:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3c3b:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3c40:	b9 06 00 00 00       	mov    $0x6,%ecx
    3c45:	89 c7                	mov    %eax,%edi
    3c47:	e8 08 fe ff ff       	call   3a54 <PCI_Read16>
    3c4c:	66 89 44 24 2a       	mov    %ax,0x2a(%rsp)
    3c51:	0f b7 44 24 2a       	movzwl 0x2a(%rsp),%eax
    3c56:	83 e0 10             	and    $0x10,%eax
    3c59:	85 c0                	test   %eax,%eax
    3c5b:	75 0a                	jne    3c67 <PCI_EnableMSI+0x4e>
    3c5d:	b8 01 00 00 00       	mov    $0x1,%eax
    3c62:	e9 f2 00 00 00       	jmp    3d59 <PCI_EnableMSI+0x140>
    3c67:	c6 44 24 2f 00       	movb   $0x0,0x2f(%rsp)
    3c6c:	c6 44 24 29 00       	movb   $0x0,0x29(%rsp)
    3c71:	c6 44 24 2e 00       	movb   $0x0,0x2e(%rsp)
    3c76:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3c7b:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3c80:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3c85:	b9 34 00 00 00       	mov    $0x34,%ecx
    3c8a:	89 c7                	mov    %eax,%edi
    3c8c:	e8 08 fe ff ff       	call   3a99 <PCI_Read08>
    3c91:	88 44 24 2d          	mov    %al,0x2d(%rsp)
    3c95:	80 64 24 2d fc       	andb   $0xfc,0x2d(%rsp)
    3c9a:	eb 4c                	jmp    3ce8 <PCI_EnableMSI+0xcf>
    3c9c:	0f b6 4c 24 2d       	movzbl 0x2d(%rsp),%ecx
    3ca1:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3ca6:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3cab:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3cb0:	89 c7                	mov    %eax,%edi
    3cb2:	e8 16 fd ff ff       	call   39cd <PCI_Read32>
    3cb7:	89 44 24 24          	mov    %eax,0x24(%rsp)
    3cbb:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3cbf:	88 44 24 23          	mov    %al,0x23(%rsp)
    3cc3:	80 7c 24 23 05       	cmpb   $0x5,0x23(%rsp)
    3cc8:	75 10                	jne    3cda <PCI_EnableMSI+0xc1>
    3cca:	c6 44 24 2f 01       	movb   $0x1,0x2f(%rsp)
    3ccf:	0f b6 44 24 2d       	movzbl 0x2d(%rsp),%eax
    3cd4:	88 44 24 2e          	mov    %al,0x2e(%rsp)
    3cd8:	eb 15                	jmp    3cef <PCI_EnableMSI+0xd6>
    3cda:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3cde:	c1 e8 08             	shr    $0x8,%eax
    3ce1:	83 e0 fc             	and    $0xfffffffc,%eax
    3ce4:	88 44 24 2d          	mov    %al,0x2d(%rsp)
    3ce8:	80 7c 24 2d 00       	cmpb   $0x0,0x2d(%rsp)
    3ced:	75 ad                	jne    3c9c <PCI_EnableMSI+0x83>
    3cef:	0f b6 4c 24 2e       	movzbl 0x2e(%rsp),%ecx
    3cf4:	0f b6 54 24 04       	movzbl 0x4(%rsp),%edx
    3cf9:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    3cfe:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    3d03:	89 c7                	mov    %eax,%edi
    3d05:	e8 c3 fc ff ff       	call   39cd <PCI_Read32>
    3d0a:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    3d0e:	80 7c 24 29 00       	cmpb   $0x0,0x29(%rsp)
    3d13:	74 07                	je     3d1c <PCI_EnableMSI+0x103>
    3d15:	b8 00 00 00 00       	mov    $0x0,%eax
    3d1a:	eb 3d                	jmp    3d59 <PCI_EnableMSI+0x140>
    3d1c:	80 7c 24 2f 00       	cmpb   $0x0,0x2f(%rsp)
    3d21:	74 31                	je     3d54 <PCI_EnableMSI+0x13b>
    3d23:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d27:	c1 e8 11             	shr    $0x11,%eax
    3d2a:	83 e0 07             	and    $0x7,%eax
    3d2d:	88 44 24 1b          	mov    %al,0x1b(%rsp)
    3d31:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d35:	c1 e8 17             	shr    $0x17,%eax
    3d38:	83 e0 01             	and    $0x1,%eax
    3d3b:	88 44 24 1a          	mov    %al,0x1a(%rsp)
    3d3f:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3d43:	c1 e8 18             	shr    $0x18,%eax
    3d46:	83 e0 01             	and    $0x1,%eax
    3d49:	88 44 24 19          	mov    %al,0x19(%rsp)
    3d4d:	b8 00 00 00 00       	mov    $0x0,%eax
    3d52:	eb 05                	jmp    3d59 <PCI_EnableMSI+0x140>
    3d54:	b8 01 00 00 00       	mov    $0x1,%eax
    3d59:	48 83 c4 38          	add    $0x38,%rsp
    3d5d:	c3                   	ret

0000000000003d5e <InitTerminal>:
    3d5e:	53                   	push   %rbx
    3d5f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3d63:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    3d68:	89 74 24 24          	mov    %esi,0x24(%rsp)
    3d6c:	89 54 24 20          	mov    %edx,0x20(%rsp)
    3d70:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3d75:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    3d7a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    3d7f:	8b 44 24 20          	mov    0x20(%rsp),%eax
    3d83:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3d88:	8b 44 24 24          	mov    0x24(%rsp),%eax
    3d8c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3d91:	48 c7 44 24 50 00 00 00 00 	movq   $0x0,0x50(%rsp)
    3d9a:	48 c7 44 24 38 01 00 00 00 	movq   $0x1,0x38(%rsp)
    3da3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3da8:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3dad:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3db2:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3db7:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3dbc:	c6 00 00             	movb   $0x0,(%rax)
    3dbf:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3dc4:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3dc9:	48 89 10             	mov    %rdx,(%rax)
    3dcc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3dd1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    3dd6:	48 8b 84 24 90 00 00 00 	mov    0x90(%rsp),%rax
    3dde:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3de3:	c7 44 24 70 00 00 00 00 	movl   $0x0,0x70(%rsp)
    3deb:	48 c7 44 24 78 00 00 00 00 	movq   $0x0,0x78(%rsp)
    3df4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3df9:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    3dfe:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3e03:	48 89 08             	mov    %rcx,(%rax)
    3e06:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3e0a:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    3e0f:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    3e14:	48 89 48 10          	mov    %rcx,0x10(%rax)
    3e18:	48 89 58 18          	mov    %rbx,0x18(%rax)
    3e1c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    3e21:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
    3e26:	48 89 48 20          	mov    %rcx,0x20(%rax)
    3e2a:	48 89 58 28          	mov    %rbx,0x28(%rax)
    3e2e:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
    3e33:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    3e38:	48 89 48 30          	mov    %rcx,0x30(%rax)
    3e3c:	48 89 58 38          	mov    %rbx,0x38(%rax)
    3e40:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    3e45:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    3e4a:	48 89 48 40          	mov    %rcx,0x40(%rax)
    3e4e:	48 89 58 48          	mov    %rbx,0x48(%rax)
    3e52:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3e57:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    3e5b:	5b                   	pop    %rbx
    3e5c:	c3                   	ret

0000000000003e5d <WriteToTerminal>:
    3e5d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    3e64:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    3e69:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3e6e:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    3e72:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    3e77:	75 2f                	jne    3ea8 <WriteToTerminal+0x4b>
    3e79:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3e7e:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    3e86:	eb 05                	jmp    3e8d <WriteToTerminal+0x30>
    3e88:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    3e8d:	48 8b 84 24 98 00 00 00 	mov    0x98(%rsp),%rax
    3e95:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3e99:	48 89 94 24 98 00 00 00 	mov    %rdx,0x98(%rsp)
    3ea1:	0f b6 00             	movzbl (%rax),%eax
    3ea4:	84 c0                	test   %al,%al
    3ea6:	75 e0                	jne    3e88 <WriteToTerminal+0x2b>
    3ea8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ead:	8b 40 40             	mov    0x40(%rax),%eax
    3eb0:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    3eb7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ebc:	48 8b 40 48          	mov    0x48(%rax),%rax
    3ec0:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    3ec8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ecd:	48 8b 40 30          	mov    0x30(%rax),%rax
    3ed1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    3ed6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3edb:	48 8b 40 30          	mov    0x30(%rax),%rax
    3edf:	48 83 c0 1c          	add    $0x1c,%rax
    3ee3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3ee8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3eed:	48 8b 40 20          	mov    0x20(%rax),%rax
    3ef1:	89 c2                	mov    %eax,%edx
    3ef3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3ef7:	01 d0                	add    %edx,%eax
    3ef9:	89 44 24 54          	mov    %eax,0x54(%rsp)
    3efd:	c7 84 24 84 00 00 00 00 00 00 00 	movl   $0x0,0x84(%rsp)
    3f08:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3f0d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    3f12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3f17:	48 8b 40 28          	mov    0x28(%rax),%rax
    3f1b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    3f20:	e9 dc 01 00 00       	jmp    4101 <WriteToTerminal+0x2a4>
    3f25:	c6 44 24 6f 00       	movb   $0x0,0x6f(%rsp)
    3f2a:	c7 44 24 68 00 00 00 00 	movl   $0x0,0x68(%rsp)
    3f32:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f37:	0f b6 00             	movzbl (%rax),%eax
    3f3a:	3c 09                	cmp    $0x9,%al
    3f3c:	75 11                	jne    3f4f <WriteToTerminal+0xf2>
    3f3e:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3f43:	8b 40 04             	mov    0x4(%rax),%eax
    3f46:	c1 e0 02             	shl    $0x2,%eax
    3f49:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f4d:	eb 4d                	jmp    3f9c <WriteToTerminal+0x13f>
    3f4f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f54:	0f b6 00             	movzbl (%rax),%eax
    3f57:	3c 0a                	cmp    $0xa,%al
    3f59:	75 0e                	jne    3f69 <WriteToTerminal+0x10c>
    3f5b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3f60:	8b 40 38             	mov    0x38(%rax),%eax
    3f63:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f67:	eb 33                	jmp    3f9c <WriteToTerminal+0x13f>
    3f69:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3f6e:	0f b6 00             	movzbl (%rax),%eax
    3f71:	0f b6 d0             	movzbl %al,%edx
    3f74:	48 89 d0             	mov    %rdx,%rax
    3f77:	48 01 c0             	add    %rax,%rax
    3f7a:	48 01 d0             	add    %rdx,%rax
    3f7d:	48 c1 e0 04          	shl    $0x4,%rax
    3f81:	48 8d 90 00 fa ff ff 	lea    -0x600(%rax),%rdx
    3f88:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3f8d:	48 01 d0             	add    %rdx,%rax
    3f90:	8b 40 04             	mov    0x4(%rax),%eax
    3f93:	89 44 24 68          	mov    %eax,0x68(%rsp)
    3f97:	c6 44 24 6f 01       	movb   $0x1,0x6f(%rsp)
    3f9c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fa1:	0f b6 00             	movzbl (%rax),%eax
    3fa4:	3c 20                	cmp    $0x20,%al
    3fa6:	74 24                	je     3fcc <WriteToTerminal+0x16f>
    3fa8:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fad:	0f b6 00             	movzbl (%rax),%eax
    3fb0:	3c 09                	cmp    $0x9,%al
    3fb2:	74 18                	je     3fcc <WriteToTerminal+0x16f>
    3fb4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fb9:	0f b6 00             	movzbl (%rax),%eax
    3fbc:	3c 0a                	cmp    $0xa,%al
    3fbe:	74 0c                	je     3fcc <WriteToTerminal+0x16f>
    3fc0:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    3fc5:	0f b6 00             	movzbl (%rax),%eax
    3fc8:	3c 2d                	cmp    $0x2d,%al
    3fca:	75 35                	jne    4001 <WriteToTerminal+0x1a4>
    3fcc:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    3fd1:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    3fd9:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    3fde:	74 16                	je     3ff6 <WriteToTerminal+0x199>
    3fe0:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    3fe7:	8b 44 24 68          	mov    0x68(%rsp),%eax
    3feb:	01 d0                	add    %edx,%eax
    3fed:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
    3ff4:	eb 0b                	jmp    4001 <WriteToTerminal+0x1a4>
    3ff6:	c7 84 24 84 00 00 00 00 00 00 00 	movl   $0x0,0x84(%rsp)
    4001:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    4008:	8b 44 24 68          	mov    0x68(%rsp),%eax
    400c:	01 c2                	add    %eax,%edx
    400e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4013:	8b 40 38             	mov    0x38(%rax),%eax
    4016:	39 c2                	cmp    %eax,%edx
    4018:	0f 82 b7 00 00 00    	jb     40d5 <WriteToTerminal+0x278>
    401e:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    4023:	74 0d                	je     4032 <WriteToTerminal+0x1d5>
    4025:	8b 44 24 68          	mov    0x68(%rsp),%eax
    4029:	01 84 24 94 00 00 00 	add    %eax,0x94(%rsp)
    4030:	eb 0b                	jmp    403d <WriteToTerminal+0x1e0>
    4032:	c7 84 24 94 00 00 00 00 00 00 00 	movl   $0x0,0x94(%rsp)
    403d:	48 83 bc 24 88 00 00 00 00 	cmpq   $0x0,0x88(%rsp)
    4046:	75 3c                	jne    4084 <WriteToTerminal+0x227>
    4048:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    404d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    4051:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4056:	48 8b 40 08          	mov    0x8(%rax),%rax
    405a:	48 8d 48 01          	lea    0x1(%rax),%rcx
    405e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4063:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    4067:	48 c1 e0 03          	shl    $0x3,%rax
    406b:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    406f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    4074:	48 89 02             	mov    %rax,(%rdx)
    4077:	8b 44 24 68          	mov    0x68(%rsp),%eax
    407b:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    4082:	eb 5c                	jmp    40e0 <WriteToTerminal+0x283>
    4084:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4089:	48 8b 70 10          	mov    0x10(%rax),%rsi
    408d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4092:	48 8b 40 08          	mov    0x8(%rax),%rax
    4096:	48 8d 48 01          	lea    0x1(%rax),%rcx
    409a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    409f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    40a3:	48 c1 e0 03          	shl    $0x3,%rax
    40a7:	48 01 f0             	add    %rsi,%rax
    40aa:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    40b2:	48 83 c2 01          	add    $0x1,%rdx
    40b6:	48 89 10             	mov    %rdx,(%rax)
    40b9:	48 c7 84 24 88 00 00 00 00 00 00 00 	movq   $0x0,0x88(%rsp)
    40c5:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
    40cc:	29 84 24 94 00 00 00 	sub    %eax,0x94(%rsp)
    40d3:	eb 0b                	jmp    40e0 <WriteToTerminal+0x283>
    40d5:	8b 44 24 68          	mov    0x68(%rsp),%eax
    40d9:	01 84 24 94 00 00 00 	add    %eax,0x94(%rsp)
    40e0:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    40e5:	48 8d 42 01          	lea    0x1(%rdx),%rax
    40e9:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    40ee:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    40f3:	48 8d 48 01          	lea    0x1(%rax),%rcx
    40f7:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    40fc:	0f b6 12             	movzbl (%rdx),%edx
    40ff:	88 10                	mov    %dl,(%rax)
    4101:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    4106:	0f b6 00             	movzbl (%rax),%eax
    4109:	84 c0                	test   %al,%al
    410b:	0f 85 14 fe ff ff    	jne    3f25 <WriteToTerminal+0xc8>
    4111:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    4116:	c6 00 00             	movb   $0x0,(%rax)
    4119:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    411e:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    4123:	48 89 50 28          	mov    %rdx,0x28(%rax)
    4127:	8b 54 24 54          	mov    0x54(%rsp),%edx
    412b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4130:	48 89 50 20          	mov    %rdx,0x20(%rax)
    4134:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4139:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    4140:	89 50 40             	mov    %edx,0x40(%rax)
    4143:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4148:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    4150:	48 89 50 48          	mov    %rdx,0x48(%rax)
    4154:	90                   	nop
    4155:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    415c:	c3                   	ret

000000000000415d <DrawTerminal>:
    415d:	53                   	push   %rbx
    415e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    4165:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    416a:	48 89 34 24          	mov    %rsi,(%rsp)
    416e:	48 8b 04 24          	mov    (%rsp),%rax
    4172:	48 8b 40 38          	mov    0x38(%rax),%rax
    4176:	48 89 44 24 4c       	mov    %rax,0x4c(%rsp)
    417b:	48 8b 04 24          	mov    (%rsp),%rax
    417f:	48 8b 40 30          	mov    0x30(%rax),%rax
    4183:	48 89 84 24 88 00 00 00 	mov    %rax,0x88(%rsp)
    418b:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4193:	48 83 c0 1c          	add    $0x1c,%rax
    4197:	48 89 84 24 80 00 00 00 	mov    %rax,0x80(%rsp)
    419f:	8b 44 24 50          	mov    0x50(%rsp),%eax
    41a3:	48 8b 94 24 88 00 00 00 	mov    0x88(%rsp),%rdx
    41ab:	8b 52 18             	mov    0x18(%rdx),%edx
    41ae:	89 d3                	mov    %edx,%ebx
    41b0:	ba 00 00 00 00       	mov    $0x0,%edx
    41b5:	f7 f3                	div    %ebx
    41b7:	89 84 24 ac 00 00 00 	mov    %eax,0xac(%rsp)
    41be:	48 8b 04 24          	mov    (%rsp),%rax
    41c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    41c6:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    41cd:	48 39 c2             	cmp    %rax,%rdx
    41d0:	73 0f                	jae    41e1 <DrawTerminal+0x84>
    41d2:	48 8b 04 24          	mov    (%rsp),%rax
    41d6:	48 8b 40 08          	mov    0x8(%rax),%rax
    41da:	89 84 24 ac 00 00 00 	mov    %eax,0xac(%rsp)
    41e1:	c7 44 24 44 00 00 00 00 	movl   $0x0,0x44(%rsp)
    41e9:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    41f1:	8b 40 08             	mov    0x8(%rax),%eax
    41f4:	89 44 24 48          	mov    %eax,0x48(%rsp)
    41f8:	48 8b 04 24          	mov    (%rsp),%rax
    41fc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4200:	48 8b 04 24          	mov    (%rsp),%rax
    4204:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4208:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    420f:	48 29 c1             	sub    %rax,%rcx
    4212:	48 8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%rax
    421a:	48 01 d0             	add    %rdx,%rax
    421d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    4222:	c7 84 24 a8 00 00 00 00 00 00 00 	movl   $0x0,0xa8(%rsp)
    422d:	e9 f2 02 00 00       	jmp    4524 <DrawTerminal+0x3c7>
    4232:	c7 44 24 44 00 00 00 00 	movl   $0x0,0x44(%rsp)
    423a:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    4241:	48 8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%rdx
    4249:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    424e:	48 01 d0             	add    %rdx,%rax
    4251:	48 8b 00             	mov    (%rax),%rax
    4254:	48 89 84 24 a0 00 00 00 	mov    %rax,0xa0(%rsp)
    425c:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    4263:	83 e8 01             	sub    $0x1,%eax
    4266:	39 84 24 a8 00 00 00 	cmp    %eax,0xa8(%rsp)
    426d:	75 15                	jne    4284 <DrawTerminal+0x127>
    426f:	48 8b 04 24          	mov    (%rsp),%rax
    4273:	48 8b 40 28          	mov    0x28(%rax),%rax
    4277:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    427f:	e9 6a 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    4284:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    428b:	83 c0 01             	add    $0x1,%eax
    428e:	89 c0                	mov    %eax,%eax
    4290:	48 8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%rdx
    4298:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    429d:	48 01 d0             	add    %rdx,%rax
    42a0:	48 8b 00             	mov    (%rax),%rax
    42a3:	48 89 84 24 98 00 00 00 	mov    %rax,0x98(%rsp)
    42ab:	e9 3e 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    42b0:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    42b8:	0f b6 00             	movzbl (%rax),%eax
    42bb:	3c 0a                	cmp    $0xa,%al
    42bd:	75 0e                	jne    42cd <DrawTerminal+0x170>
    42bf:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    42c8:	e9 21 02 00 00       	jmp    44ee <DrawTerminal+0x391>
    42cd:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    42d5:	0f b6 00             	movzbl (%rax),%eax
    42d8:	3c 09                	cmp    $0x9,%al
    42da:	75 26                	jne    4302 <DrawTerminal+0x1a5>
    42dc:	8b 54 24 44          	mov    0x44(%rsp),%edx
    42e0:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    42e8:	8b 40 04             	mov    0x4(%rax),%eax
    42eb:	c1 e0 02             	shl    $0x2,%eax
    42ee:	01 d0                	add    %edx,%eax
    42f0:	89 44 24 44          	mov    %eax,0x44(%rsp)
    42f4:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    42fd:	e9 ec 01 00 00       	jmp    44ee <DrawTerminal+0x391>
    4302:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    430a:	0f b6 00             	movzbl (%rax),%eax
    430d:	0f b6 d0             	movzbl %al,%edx
    4310:	48 89 d0             	mov    %rdx,%rax
    4313:	48 01 c0             	add    %rax,%rax
    4316:	48 01 d0             	add    %rdx,%rax
    4319:	48 c1 e0 04          	shl    $0x4,%rax
    431d:	48 8d 90 00 fa ff ff 	lea    -0x600(%rax),%rdx
    4324:	48 8b 84 24 80 00 00 00 	mov    0x80(%rsp),%rax
    432c:	48 01 d0             	add    %rdx,%rax
    432f:	48 8b 08             	mov    (%rax),%rcx
    4332:	48 8b 58 08          	mov    0x8(%rax),%rbx
    4336:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    433b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    4340:	48 8b 48 10          	mov    0x10(%rax),%rcx
    4344:	48 8b 58 18          	mov    0x18(%rax),%rbx
    4348:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    434d:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    4352:	48 8b 50 28          	mov    0x28(%rax),%rdx
    4356:	48 8b 40 20          	mov    0x20(%rax),%rax
    435a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    435f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    4364:	8b 44 24 44          	mov    0x44(%rsp),%eax
    4368:	8b 54 24 14          	mov    0x14(%rsp),%edx
    436c:	01 c2                	add    %eax,%edx
    436e:	48 8b 04 24          	mov    (%rsp),%rax
    4372:	8b 40 38             	mov    0x38(%rax),%eax
    4375:	39 c2                	cmp    %eax,%edx
    4377:	0f 83 89 01 00 00    	jae    4506 <DrawTerminal+0x3a9>
    437d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4382:	48 85 c0             	test   %rax,%rax
    4385:	0f 84 4c 01 00 00    	je     44d7 <DrawTerminal+0x37a>
    438b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    4390:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4398:	48 01 d0             	add    %rdx,%rax
    439b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    43a0:	c7 84 24 94 00 00 00 00 00 00 00 	movl   $0x0,0x94(%rsp)
    43ab:	e9 14 01 00 00       	jmp    44c4 <DrawTerminal+0x367>
    43b0:	c7 84 24 90 00 00 00 00 00 00 00 	movl   $0x0,0x90(%rsp)
    43bb:	e9 e9 00 00 00       	jmp    44a9 <DrawTerminal+0x34c>
    43c0:	8b 44 24 44          	mov    0x44(%rsp),%eax
    43c4:	8b 54 24 18          	mov    0x18(%rsp),%edx
    43c8:	01 c2                	add    %eax,%edx
    43ca:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    43d1:	01 d0                	add    %edx,%eax
    43d3:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    43d7:	8b 44 24 48          	mov    0x48(%rsp),%eax
    43db:	8b 54 24 34          	mov    0x34(%rsp),%edx
    43df:	89 d1                	mov    %edx,%ecx
    43e1:	29 c8                	sub    %ecx,%eax
    43e3:	89 c2                	mov    %eax,%edx
    43e5:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    43e9:	29 c2                	sub    %eax,%edx
    43eb:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
    43f2:	01 d0                	add    %edx,%eax
    43f4:	89 44 24 68          	mov    %eax,0x68(%rsp)
    43f8:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
    43fc:	0f af 44 24 68       	imul   0x68(%rsp),%eax
    4401:	89 c2                	mov    %eax,%edx
    4403:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    4407:	01 d0                	add    %edx,%eax
    4409:	89 44 24 64          	mov    %eax,0x64(%rsp)
    440d:	8b 44 24 64          	mov    0x64(%rsp),%eax
    4411:	48 8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%rdx
    4419:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    441e:	48 01 d0             	add    %rdx,%rax
    4421:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4426:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    442e:	8b 10                	mov    (%rax),%edx
    4430:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
    4437:	0f af d0             	imul   %eax,%edx
    443a:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    4441:	01 d0                	add    %edx,%eax
    4443:	89 c2                	mov    %eax,%edx
    4445:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    444a:	48 01 d0             	add    %rdx,%rax
    444d:	0f b6 00             	movzbl (%rax),%eax
    4450:	88 44 24 57          	mov    %al,0x57(%rsp)
    4454:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    4459:	88 44 24 40          	mov    %al,0x40(%rsp)
    445d:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    4462:	88 44 24 41          	mov    %al,0x41(%rsp)
    4466:	0f b6 44 24 57       	movzbl 0x57(%rsp),%eax
    446b:	88 44 24 42          	mov    %al,0x42(%rsp)
    446f:	c6 44 24 43 00       	movb   $0x0,0x43(%rsp)
    4474:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
    4479:	0f b6 c0             	movzbl %al,%eax
    447c:	c1 e0 10             	shl    $0x10,%eax
    447f:	89 c2                	mov    %eax,%edx
    4481:	0f b6 44 24 41       	movzbl 0x41(%rsp),%eax
    4486:	0f b6 c0             	movzbl %al,%eax
    4489:	c1 e0 08             	shl    $0x8,%eax
    448c:	09 c2                	or     %eax,%edx
    448e:	0f b6 44 24 42       	movzbl 0x42(%rsp),%eax
    4493:	0f b6 c0             	movzbl %al,%eax
    4496:	09 d0                	or     %edx,%eax
    4498:	89 c2                	mov    %eax,%edx
    449a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    449f:	89 10                	mov    %edx,(%rax)
    44a1:	83 84 24 90 00 00 00 01 	addl   $0x1,0x90(%rsp)
    44a9:	8b 44 24 38          	mov    0x38(%rsp),%eax
    44ad:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
    44b4:	39 c2                	cmp    %eax,%edx
    44b6:	0f 82 04 ff ff ff    	jb     43c0 <DrawTerminal+0x263>
    44bc:	83 84 24 94 00 00 00 01 	addl   $0x1,0x94(%rsp)
    44c4:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    44c8:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
    44cf:	39 c2                	cmp    %eax,%edx
    44d1:	0f 82 d9 fe ff ff    	jb     43b0 <DrawTerminal+0x253>
    44d7:	8b 44 24 44          	mov    0x44(%rsp),%eax
    44db:	8b 54 24 14          	mov    0x14(%rsp),%edx
    44df:	01 d0                	add    %edx,%eax
    44e1:	89 44 24 44          	mov    %eax,0x44(%rsp)
    44e5:	48 83 84 24 a0 00 00 00 01 	addq   $0x1,0xa0(%rsp)
    44ee:	48 8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%rax
    44f6:	48 3b 84 24 98 00 00 00 	cmp    0x98(%rsp),%rax
    44fe:	0f 82 ac fd ff ff    	jb     42b0 <DrawTerminal+0x153>
    4504:	eb 01                	jmp    4507 <DrawTerminal+0x3aa>
    4506:	90                   	nop
    4507:	8b 54 24 48          	mov    0x48(%rsp),%edx
    450b:	48 8b 84 24 88 00 00 00 	mov    0x88(%rsp),%rax
    4513:	8b 40 18             	mov    0x18(%rax),%eax
    4516:	01 d0                	add    %edx,%eax
    4518:	89 44 24 48          	mov    %eax,0x48(%rsp)
    451c:	83 84 24 a8 00 00 00 01 	addl   $0x1,0xa8(%rsp)
    4524:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    452b:	3b 84 24 ac 00 00 00 	cmp    0xac(%rsp),%eax
    4532:	0f 82 fa fc ff ff    	jb     4232 <DrawTerminal+0xd5>
    4538:	90                   	nop
    4539:	90                   	nop
    453a:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    4541:	5b                   	pop    %rbx
    4542:	c3                   	ret

0000000000004543 <InitGOP>:
    4543:	48 83 ec 38          	sub    $0x38,%rsp
    4547:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    454c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4551:	48 8b 30             	mov    (%rax),%rsi
    4554:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4559:	48 8b 40 18          	mov    0x18(%rax),%rax
    455d:	8b 50 04             	mov    0x4(%rax),%edx
    4560:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    4565:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    456a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    456f:	48 83 ec 20          	sub    $0x20,%rsp
    4573:	49 89 f9             	mov    %rdi,%r9
    4576:	49 89 c8             	mov    %rcx,%r8
    4579:	48 89 c1             	mov    %rax,%rcx
    457c:	ff d6                	call   *%rsi
    457e:	48 83 c4 20          	add    $0x20,%rsp
    4582:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    4586:	90                   	nop
    4587:	48 83 c4 38          	add    $0x38,%rsp
    458b:	c3                   	ret

000000000000458c <Kernel_Entry>:
    458c:	48 81 ec d8 b0 00 00 	sub    $0xb0d8,%rsp
    4593:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    4598:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    459d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    45a2:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    45a7:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    45ac:	4c 89 0c 24          	mov    %r9,(%rsp)
    45b0:	fa                   	cli
    45b1:	48 8d 8c 24 30 10 00 00 	lea    0x1030(%rsp),%rcx
    45b9:	48 8d 94 24 30 80 00 00 	lea    0x8030(%rsp),%rdx
    45c1:	48 8d b4 24 30 b0 00 00 	lea    0xb030(%rsp),%rsi
    45c9:	48 8d 84 24 a0 b0 00 00 	lea    0xb0a0(%rsp),%rax
    45d1:	48 89 c7             	mov    %rax,%rdi
    45d4:	e8 ef db ff ff       	call   21c8 <GDT_Init>
    45d9:	b8 00 00 e0 fe       	mov    $0xfee00000,%eax
    45de:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 45e5 <Kernel_Entry+0x59>	45e1: R_X86_64_PC32	APICBase-0x4
    45e5:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    45ea:	48 89 c7             	mov    %rax,%rdi
    45ed:	e8 20 e0 ff ff       	call   2612 <IDT_Init>
    45f2:	cd 0e                	int    $0xe
    45f4:	fb                   	sti
    45f5:	90                   	nop
    45f6:	eb fd                	jmp    45f5 <Kernel_Entry+0x69>
    45f8:	0f 1f 84 00 00 00 00 00 	nopl   0x0(%rax,%rax,1)

0000000000004600 <PortIn08>:
    4600:	48 89 fa             	mov    %rdi,%rdx
    4603:	48 31 c0             	xor    %rax,%rax
    4606:	ec                   	in     (%dx),%al
    4607:	c3                   	ret

0000000000004608 <PortIn32>:
    4608:	48 89 fa             	mov    %rdi,%rdx
    460b:	48 31 c0             	xor    %rax,%rax
    460e:	ed                   	in     (%dx),%eax
    460f:	c3                   	ret

0000000000004610 <PortOut08>:
    4610:	48 89 fa             	mov    %rdi,%rdx
    4613:	48 89 f0             	mov    %rsi,%rax
    4616:	ee                   	out    %al,(%dx)
    4617:	c3                   	ret

0000000000004618 <PortOut32>:
    4618:	48 89 fa             	mov    %rdi,%rdx
    461b:	48 89 f0             	mov    %rsi,%rax
    461e:	ef                   	out    %eax,(%dx)
    461f:	c3                   	ret

0000000000004620 <gdtr>:
	...

000000000000462a <SetGDTR>:
    462a:	48 89 3d f1 ff ff ff 	mov    %rdi,-0xf(%rip)        # 4622 <gdtr+0x2>
    4631:	66 89 35 e8 ff ff ff 	mov    %si,-0x18(%rip)        # 4620 <gdtr>
    4638:	0f 01 15 e1 ff ff ff 	lgdt   -0x1f(%rip)        # 4620 <gdtr>

000000000000463f <SetGDTR.L>:
    463f:	c3                   	ret

0000000000004640 <SetTR>:
    4640:	0f 00 df             	ltr    %di
    4643:	c3                   	ret

0000000000004644 <idtr>:
	...

000000000000464e <SetIDTR>:
    464e:	48 89 3d f1 ff ff ff 	mov    %rdi,-0xf(%rip)        # 4646 <idtr+0x2>
    4655:	66 89 35 e8 ff ff ff 	mov    %si,-0x18(%rip)        # 4644 <idtr>
    465c:	0f 01 1d e1 ff ff ff 	lidt   -0x1f(%rip)        # 4644 <idtr>
    4663:	c3                   	ret

0000000000004664 <GetMSR>:
    4664:	89 f9                	mov    %edi,%ecx
    4666:	0f 32                	rdmsr
    4668:	48 c1 e2 20          	shl    $0x20,%rdx
    466c:	48 09 d0             	or     %rdx,%rax
    466f:	c3                   	ret

0000000000004670 <SetMSR>:
    4670:	89 f9                	mov    %edi,%ecx
    4672:	89 f0                	mov    %esi,%eax
    4674:	48 c1 ee 20          	shr    $0x20,%rsi
    4678:	89 f2                	mov    %esi,%edx
    467a:	0f 30                	wrmsr
    467c:	c3                   	ret

000000000000467d <GetCR0>:
    467d:	0f 20 c0             	mov    %cr0,%rax
    4680:	c3                   	ret

0000000000004681 <GetCR3>:
    4681:	0f 20 d8             	mov    %cr3,%rax
    4684:	c3                   	ret

0000000000004685 <GetCR4>:
    4685:	0f 20 e0             	mov    %cr4,%rax
    4688:	c3                   	ret

0000000000004689 <SetCR3>:
    4689:	0f 22 df             	mov    %rdi,%cr3
    468c:	c3                   	ret

000000000000468d <DisableInterrupts>:
    468d:	fa                   	cli
    468e:	c3                   	ret

000000000000468f <EnableInterrupts>:
    468f:	fb                   	sti
    4690:	c3                   	ret

0000000000004691 <InvalidateTLBEntry>:
    4691:	0f 01 3f             	invlpg (%rdi)
    4694:	c3                   	ret

0000000000004695 <GetInterruptStep>:
    4695:	eb 04                	jmp    469b <GetInterruptStep.B>

0000000000004697 <GetInterruptStep.A>:
    4697:	6a 00                	push   $0x0
    4699:	eb 00                	jmp    469b <GetInterruptStep.B>

000000000000469b <GetInterruptStep.B>:
    469b:	48 b8 00 00 00 00 00 00 00 00 	movabs $0x0,%rax	469d: R_X86_64_64	.text+0x469b
    46a5:	48 2d 00 00 00 00    	sub    $0x0,%rax	46a7: R_X86_64_32S	.text+0x4697
    46ab:	c3                   	ret

00000000000046ac <InterruptSwitch>:
    46ac:	6a 00                	push   $0x0
    46ae:	eb 76                	jmp    4726 <InterruptSwitch.End>
    46b0:	6a 01                	push   $0x1
    46b2:	eb 72                	jmp    4726 <InterruptSwitch.End>
    46b4:	6a 02                	push   $0x2
    46b6:	eb 6e                	jmp    4726 <InterruptSwitch.End>
    46b8:	6a 03                	push   $0x3
    46ba:	eb 6a                	jmp    4726 <InterruptSwitch.End>
    46bc:	6a 04                	push   $0x4
    46be:	eb 66                	jmp    4726 <InterruptSwitch.End>
    46c0:	6a 05                	push   $0x5
    46c2:	eb 62                	jmp    4726 <InterruptSwitch.End>
    46c4:	6a 06                	push   $0x6
    46c6:	eb 5e                	jmp    4726 <InterruptSwitch.End>
    46c8:	6a 07                	push   $0x7
    46ca:	eb 5a                	jmp    4726 <InterruptSwitch.End>
    46cc:	6a 08                	push   $0x8
    46ce:	eb 56                	jmp    4726 <InterruptSwitch.End>
    46d0:	6a 09                	push   $0x9
    46d2:	eb 52                	jmp    4726 <InterruptSwitch.End>
    46d4:	6a 0a                	push   $0xa
    46d6:	eb 4e                	jmp    4726 <InterruptSwitch.End>
    46d8:	6a 0b                	push   $0xb
    46da:	eb 4a                	jmp    4726 <InterruptSwitch.End>
    46dc:	6a 0c                	push   $0xc
    46de:	eb 46                	jmp    4726 <InterruptSwitch.End>
    46e0:	6a 0d                	push   $0xd
    46e2:	eb 42                	jmp    4726 <InterruptSwitch.End>
    46e4:	6a 0e                	push   $0xe
    46e6:	eb 3e                	jmp    4726 <InterruptSwitch.End>
    46e8:	6a 0f                	push   $0xf
    46ea:	eb 3a                	jmp    4726 <InterruptSwitch.End>
    46ec:	6a 10                	push   $0x10
    46ee:	eb 36                	jmp    4726 <InterruptSwitch.End>
    46f0:	6a 11                	push   $0x11
    46f2:	eb 32                	jmp    4726 <InterruptSwitch.End>
    46f4:	6a 12                	push   $0x12
    46f6:	eb 2e                	jmp    4726 <InterruptSwitch.End>
    46f8:	6a 13                	push   $0x13
    46fa:	eb 2a                	jmp    4726 <InterruptSwitch.End>
    46fc:	6a 14                	push   $0x14
    46fe:	eb 26                	jmp    4726 <InterruptSwitch.End>
    4700:	6a 15                	push   $0x15
    4702:	eb 22                	jmp    4726 <InterruptSwitch.End>
    4704:	6a 16                	push   $0x16
    4706:	eb 1e                	jmp    4726 <InterruptSwitch.End>
    4708:	6a 17                	push   $0x17
    470a:	eb 1a                	jmp    4726 <InterruptSwitch.End>
    470c:	6a 18                	push   $0x18
    470e:	eb 16                	jmp    4726 <InterruptSwitch.End>
    4710:	6a 19                	push   $0x19
    4712:	eb 12                	jmp    4726 <InterruptSwitch.End>
    4714:	6a 1a                	push   $0x1a
    4716:	eb 0e                	jmp    4726 <InterruptSwitch.End>
    4718:	6a 1b                	push   $0x1b
    471a:	eb 0a                	jmp    4726 <InterruptSwitch.End>
    471c:	6a 1c                	push   $0x1c
    471e:	eb 06                	jmp    4726 <InterruptSwitch.End>
    4720:	6a 1d                	push   $0x1d
    4722:	eb 02                	jmp    4726 <InterruptSwitch.End>
    4724:	6a 1e                	push   $0x1e

0000000000004726 <InterruptSwitch.End>:
    4726:	9c                   	pushf
    4727:	41 57                	push   %r15
    4729:	41 56                	push   %r14
    472b:	41 55                	push   %r13
    472d:	41 54                	push   %r12
    472f:	41 53                	push   %r11
    4731:	41 52                	push   %r10
    4733:	41 51                	push   %r9
    4735:	41 50                	push   %r8
    4737:	55                   	push   %rbp
    4738:	57                   	push   %rdi
    4739:	56                   	push   %rsi
    473a:	52                   	push   %rdx
    473b:	51                   	push   %rcx
    473c:	53                   	push   %rbx
    473d:	50                   	push   %rax
    473e:	48 31 d2             	xor    %rdx,%rdx
    4741:	8a 94 24 80 00 00 00 	mov    0x80(%rsp),%dl
    4748:	89 d1                	mov    %edx,%ecx
    474a:	83 e1 1f             	and    $0x1f,%ecx
    474d:	48 8b 14 fd 00 00 00 00 	mov    0x0(,%rdi,8),%rdx	4751: R_X86_64_32S	InterruptHandlers
    4755:	ff d2                	call   *%rdx
    4757:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 475d <InterruptSwitch.End+0x37>	4759: R_X86_64_PC32	APICBase+0xfc
    475d:	bb 01 00 00 00       	mov    $0x1,%ebx
    4762:	d3 e3                	shl    %cl,%ebx
    4764:	21 d8                	and    %ebx,%eax
    4766:	83 f8 00             	cmp    $0x0,%eax
    4769:	74 0d                	je     4778 <InterruptSwitch.no_eoi>
    476b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4772 <InterruptSwitch.End+0x4c>	476e: R_X86_64_PC32	APICBase+0xac
    4772:	c7 00 01 00 00 00    	movl   $0x1,(%rax)

0000000000004778 <InterruptSwitch.no_eoi>:
    4778:	58                   	pop    %rax
    4779:	5b                   	pop    %rbx
    477a:	59                   	pop    %rcx
    477b:	5a                   	pop    %rdx
    477c:	5e                   	pop    %rsi
    477d:	5f                   	pop    %rdi
    477e:	5d                   	pop    %rbp
    477f:	41 58                	pop    %r8
    4781:	41 59                	pop    %r9
    4783:	41 5a                	pop    %r10
    4785:	41 5b                	pop    %r11
    4787:	41 5c                	pop    %r12
    4789:	41 5d                	pop    %r13
    478b:	41 5e                	pop    %r14
    478d:	41 5f                	pop    %r15
    478f:	9d                   	popf
    4790:	48 83 c4 01          	add    $0x1,%rsp
    4794:	48 cf                	iretq
